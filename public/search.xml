<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>EhAb AnD gCd</title>
      <link href="/EhAb-AnD-gCd/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1325/A" target="_blank" rel="noopener">CodeForces 1325A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>依照公式GCD(a, b) + LCM(a, b) = x。現在給你x，請輸出一組符合這個式子的a、b？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>GCD(1, n) = 1、LCM(1, n) = n，因此GCD(1, n) + LCM(1, n) = 1 + n。現在另x = 1 + n，因此至少有一組1, x – 1符合題目要求，輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/46dd942f5333b36555552d6dd52cfdbe.js"></script>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
            <tag> 普通 </tag>
            
            <tag> number theory </tag>
            
            <tag> constructive algorithms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Soroban</title>
      <link href="/Soroban/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/363/A" target="_blank" rel="noopener">CodeForces 363A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>算盤，現在用直的表示，左邊的珠子表示5，右邊的珠子每往左1個就表示1，現在輸入一個數字，要你從低到高將每個位數由上至下用算盤的格式表示出來？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>從個位數開始直接依照題目的格式表示。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0a787760d3ba4f0dfb1d8706b0a6b5b3.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maximums</title>
      <link href="/Maximums/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1326/B" target="_blank" rel="noopener">CodeForces 1326B</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給一個a陣列，創建一個x陣列x_i項是a陣列前i-1項中的最大值，再創建一個b陣列，b_i項是a_i-x_i。現在給你陣列長度n及b陣列的所有內容，問你a陣列的內容為何？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依據給的公式可以推出x_0=0，b_0=a_0-x_0 =&gt; a_0 = b_0。在知道a_0之後就能知道x_1 = a_0，知道x_1及b_1後可以推出a_1；然後依序推出x_2、a_2、x_2、a_3…，將a記錄起來就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/62b5e39b9129cdfe55d19ecc3a5208a9.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Yet Another Palindrome Problem</title>
      <link href="/Yet-Another-Palindrome-Problem/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1324/B" target="_blank" rel="noopener">CodeForces 1324B</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一串數列，問你能不能在其中挑出長度至少為3並且是迴文的子序列？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>首先，迴文長度若是偶數，表示中心兩個字是一樣的，那就可以不取其中一個，將迴文長度轉為奇數；其次，若迴文長度是奇數，則最旁邊兩個一定是一樣的，可以一起去掉，讓長度減2且還是奇數。綜合前面兩點，可以得知若有迴文，則一定可以推導成長度3的迴文，因此，目標可以推導成要找出有沒有長度正好是3的迴文。接下來觀察長度正好是3迴文，發現只有兩種模式，aaa和aba，第一種由3個一樣的字組成，第二個由兩個不連續的一樣字夾著一個不一樣的字組成。邊輸入邊記錄所有數字的出現次數和出現位置，若有數字出現3次以上，那就可以形成第一種迴文，輸出YES；若有數字出現兩次了，計算這兩次出現位置是不是不再隔壁，是的話中間就可以隨便挑一個夾著形成第二種迴文，輸出YES；都無法滿足就輸出NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0ad7961413bd4ebb31fcc13a4ab418e5.js"></script>]]></content>
      
      
        <tags>
            
            <tag> 普通 </tag>
            
            <tag> brute force </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Remove Adjacent</title>
      <link href="/Remove-Adjacent/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1321/C" target="_blank" rel="noopener">CodeForces 1321C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個泉小寫英文字母字串，你能夠對字串執行的動作是把滿足條件的1個目標字元刪除，條件是要刪除的字元隔壁至少要有一個字元的英文字母順序再此字元前面1位(因此你永遠無法刪除a)，問你最多可以刪除幾個字元？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>觀察後可以發現，同樣文字的刪除順序不會影響結果，因此從z開始往a刪除，記錄刪除次數就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5f31b3e317535b12c8075e8d4764c11e.js"></script>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
            <tag> 普通 </tag>
            
            <tag> brute force </tag>
            
            <tag> strings </tag>
            
            <tag> constructive algorithms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Yet Another Tetris Problem</title>
      <link href="/Yet-Another-Tetris-Problem/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1324/A" target="_blank" rel="noopener">CodeForces 1324A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個俄羅斯方塊現在每一排的高度，你只能使用高2寬1的方塊，且不能旋轉。問你是否能將所有方塊全部消除？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為不能旋轉，所以先記錄最高的排高度是多少，然後計算該排跟其他所有排的高度差，如果都能被2整除，那就輸出YES；否則輸出NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/42cc0cba34f5e3eb8bdf0709ec72f3d5.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> number theory </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maximum in Table</title>
      <link href="/Maximum-in-Table/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/509/A" target="_blank" rel="noopener">CodeForces 509A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個矩陣，最上面及最左邊的元素都是1，剩下的元素會等於該元素上面和左邊元素的和。問你這矩陣中最大的元素是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依照此種加法，最大的元素一定出在最右下，因此依照順序從上到下、左到右實際加一遍後，輸出右下的元素就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/06980227327d9159c2d37e937923aa78.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bus to Udayland</title>
      <link href="/Bus-to-Udayland/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/711/A" target="_blank" rel="noopener">CodeForces 711A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入巴士的座位表，O表示空位；X表示已有人。現在問你是否有兩個不跨走道且相鄰的座位？有的話將輸出YES並將目標改為+輸出座位表，沒有的話輸出NO。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>邊輸入邊判斷有沒有連續的兩個O，沒有就輸出NO；有的話將內容改成+，輸出YES後輸出座位表。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/be44b870a1a38cef36ab17aa4baaba14.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>New Year and Naming</title>
      <link href="/New-Year-and-Naming/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1284/A" target="_blank" rel="noopener">CodeForces 1284A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>類似天干地支的年份表示法，現在輸入天干地支各有幾個，問你第N年的干支是什麼？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>輸入完記錄起來，用求餘數的方式得知目標年份的天干地支，輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5a59b212c09feaf8616bf6d40f0104d8.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Contest for Robots</title>
      <link href="/Contest-for-Robots/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1321/A" target="_blank" rel="noopener">CodeForces 1321A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有兩台機器人要比賽解題，現在你可以對每一題分配一個大於等於1的分數，答對時可以獲得該分數，答錯沒有分數。現在輸入問題數量及每個問題兩邊的機器人是否會答對，問你如果要讓第一台機器人贏的話，所有配分中分數最高的題目，最少分數要是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>計算1對2錯的題數(a)及1錯2對的題數(b)，a&gt;b時，不用調整配分，輸出1；a&lt;=b且a!=0時，因為分數要比第二隊多，不能一樣，將b+1分盡量平均分配到a題上，輸出答案；a==0時，怎麼調整都無法達成，輸出-1。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fb445b42e4ab3b7419d04804ab503890.js"></script>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fast Food Restaurant</title>
      <link href="/Fast-Food-Restaurant/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1313/A" target="_blank" rel="noopener">CodeForces 1313A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入3種餐點的數量，依據每個人至少分到1份餐點、每種餐點不能分超過1份、所有人都要分到不一樣的組合，這3個條件。問這些餐點能分給幾個人？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>總共只有7種分配方式，先紀錄起來，然後將這7種分配方式的所有分配可能(有128種)全部跑一次，將可能的方式中可以分給最多人的次數記錄起來輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5d01eeb4d2d5ca796a5387d25f4c133e.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Add Odd or Subtract Even</title>
      <link href="/Add-Odd-or-Subtract-Even/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1311/A" target="_blank" rel="noopener">CodeForces 1311A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入a, b兩個數字，現在一個行動可以將a加上任意正奇數，或是減掉任意正偶數。問最少需要幾個行動可以將a變成b？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先判斷大小關係，a==b時，輸出0；a &lt; b時，差距是奇數輸出1，偶數輸出2(加1、加差距-1)；a&gt;b時，差距是奇數輸出2(加1減差距+1)，偶數輸出1。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/aac217a151f71cd00e822322c2f960d1.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Theatre Square</title>
      <link href="/Theatre-Square/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1/problem/A" target="_blank" rel="noopener">CodeForces 1A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他給你一塊面積NxM問你要多少個AxA才能完全覆蓋所有面積，而且石板無法切割</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將Ｎ/A和Ｍ/A並無條件進位可得長與寬，把他們相乘後就可以以算出完全覆蓋需要幾塊石板了</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/ac6b4d9fb4e730033bbee2a1bf8827b1.js"></script>]]></content>
      
      
        <tags>
            
            <tag> 簡單 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Dead Pixel</title>
      <link href="/Dead-Pixel/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1315/problem/A" target="_blank" rel="noopener">Ｃodeforces 1315A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>在一個網格上放一個壞點，問你如果不覆蓋壞點的矩形最大是多少</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先找出最小面積後，把全部面積減去最小面積就可以得到答案了，而r與e要加一的原因是要去掉那一排有壞點的，而max((q*w)- tmp, 1)是因為在只有兩格的情況會變成沒面積所以兩格的話直接輸出1</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/652b04d1e317e2d9a9517f9078aee60f.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bicolorings</title>
      <link href="/Bicolorings/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1051/D" target="_blank" rel="noopener">CodeForces 1051D</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個2xN的網格，每一個只能塗成黑色或白色，所有相鄰的同色都視為同一個元件。現在輸入N及K，問你2xN的網格有正好K個元件時有幾種可能的塗法？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>建兩個陣列，紀錄現在最右邊的兩個不同色(A)以及同色(B)時，有x個元件時的塗法。因此當總列數n=1時A[1]=2，其他的A都等於0；B[2]=2，其他的B都等於0。新增一列時，A[i]=A[i]+A[i-1]+2<em>B[i]，B[i]=B[i]+B[i-2]+2</em>A[i-1]，增加到N列後A[K]+B[K]就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/33e0bd925d84247f7daa6d6d20291ebc.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> bitmasks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Party Lemonade</title>
      <link href="/Party-Lemonade/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/913/C" target="_blank" rel="noopener">CodeForces 913C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入n，表示接下來會有n個瓶子，容量是2^(i-1)，價錢是ci。問現在至少需要總容量為L的瓶子，最少需要花多少錢？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每個尺寸最低的價錢就是上一個尺寸的兩倍價錢以及這個尺寸輸入的價錢中較低的那個，先記錄所有尺寸最便宜的價錢。超出最大尺寸的部分直接用最大尺寸的最低價購買，剩下的部分則嘗試所有可能。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/ad4326a9423e9f8e9d836c8b607616cd.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> greedy </tag>
            
            <tag> bitmasks </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Star sky</title>
      <link href="/Star-sky/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/835/C" target="_blank" rel="noopener">CodeForces 835C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>天上有n個星星座標各自為(xi, yi)，初始亮度為si；還有全部星星共通的最大亮度c。在t時的亮度為x的星星，若x+1&lt;c，在t+1時的亮度為x+1，否則為0。現在你要觀察天空q次，分別在ti時觀察從(x1, y1)到(x2, y2)之間的星星，問這區間的總亮度是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用積分圖(integral image)的方式記錄整個天空的初始亮度跟每個亮度的星星數量，之後快速得到輸入區間每個亮度的星星數量後計算指定時間的亮度後加總就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/8c1b2ffefb29bec87901d412f5db84e8.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CME</title>
      <link href="/CME/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1223/A" target="_blank" rel="noopener">CodeForces 1223A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在要用火柴棒拼出正確的A+B=C式子，3個數字都大於0。現在輸入火柴棒的數量，為你需要在買多少火柴棒才能滿足這個條件？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為要拚出A+B=C的式子，所以需要的是A+B+C=2C根火柴棒，且C&gt;=1，因此需要的是4根以上的偶數火柴棒，不到4就補到4；其他的偶數補0；奇數補1。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/4549203f9d56ce600024c12727f712de.js"></script>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Cards</title>
      <link href="/Cards/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1220/A" target="_blank" rel="noopener">CodeForces 1220A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一條字串裡面只有 ‘z’, ‘e’, ‘r’, ‘o’ 和 ‘n’，請將字串裡的英文’zero’和’one’轉成數字1和0並以最大的二進制方式輸出，例如：nznooeeoer有兩個1和一個0，最大的數字為110。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先將所有1列印出來再印0，而0和1的英文不一樣的有z, r, n，所以我們可以用此來找出有幾個零與一。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/aacc51a67599af7e1e7f778bf921e76e.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> 新手 </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Vus the Cossack and a Contest</title>
      <link href="/Vus-the-Cossack-and-a-Contest/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1186/A" target="_blank" rel="noopener">CodeForces 1186A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有Ｎ個人Ｍ個筆和Ｋ個筆記本，而每個人一定要拿到一支筆和一本筆記本，如果可以輸出Yes，否則輸出No。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>如果筆的數量大於等於人而且筆記本的數量大於等於人就可以知道每個人可不可以拿到一支筆和筆記本。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/de0a33ecc0c63019994a0fdbda7ee181.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Meeting Room Arrangement</title>
      <link href="/Meeting-Room-Arrangement/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/126/12694.pdf" target="_blank" rel="noopener">UVA 12694</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他牌時程表，他希望裡面牌的會議越多越好。<br>第一個輸入代表有幾筆，之後開始輸入會議的區間S和F，直到輸入為”0 0”就輸出。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將區間的F由小到大排序，接著檢查右邊會議結束時間有沒有小於等於下一個的開始時間，如果有就把左邊改為它的會議結束時間。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/76dc64ecd51fcede83e0d4edb89eb876.js"></script>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mahmoud and Ehab and the even-odd game</title>
      <link href="/Mahmoud-and-Ehab-and-the-even-odd-game/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/959/A" target="_blank" rel="noopener">CodeForces 959A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>判斷奇數偶數，奇數輸出”Mahmoud”，偶數輸出”Ehab”。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>n%2如果等於0就輸出”Ehab”Ehab，否則輸出”Mahmoud”。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/3fe88db3924d8e8709f2265be5ce0679.js"></script>]]></content>
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
            <tag> games </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fafa and his Company</title>
      <link href="/Fafa-and-his-Company-1/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/935/A" target="_blank" rel="noopener">CodeForces 935A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他分配隊長與員工。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將所有可能跑一遍，N/2是為了避免重複的，如果整除就加一。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/89bfbf21e4fe103a9426a9abd6fb26a9.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gennady and a Card Game</title>
      <link href="/Gennady-and-a-Card-Game/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1097/A" target="_blank" rel="noopener">CodeForces 1097A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一張牌，如果牌面上有相同花色或是相同數字你才能打牌，請你幫他檢查是否可以打牌。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每次輸入牌面上的牌的時候檢查自己的牌有沒有相同數字或花色，有的話就標記true。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/da4739702939cc464896f1d4edcea431.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hard problem</title>
      <link href="/Hard-problem/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/706/C" target="_blank" rel="noopener">CodeForces 706C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N(有多少字)、每個字顛倒的成本和每個字，問你不改變這串字的先後順序，藉由顛倒某些字來將這些字排成字典順序最少需要多少成本？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>直接將所有字及所有顛倒後的字存起來，然後紀錄後面的字要滿足比前面的字大的最小成本，逐個更新就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/e14147a86c576dffff606a831ef76104.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 一般 </tag>
            
            <tag> strings </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Chain Reaction</title>
      <link href="/Chain-Reaction/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/607/A" target="_blank" rel="noopener">CodeForces 607A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>在同一橫軸上有一些信標，功率b的信標a啟動後會將左邊距離b以內的信標都摧毀，現在給你N個信標的座標跟功率，並允許你在最右邊的信標右邊再增加一個信標，功率隨意，問從右邊開始逐個啟動所有未被摧毀的信標，最後最少會有幾個信標被摧毀？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>創一個陣列des紀錄所有信標在[0].右邊信標全數被摧毀(除了額外增加的信標)且當前信標被摧毀的狀況下被毀的最少總信標數，和[1]右邊信標全數被摧毀(除了額外增加的信標)且當前信標被啟動的狀況下被毀的最少總信標數。des[i][0] = min(des[i-1][0],des[i][1])，因為當前信標已毀，所以不影響未摧毀的總數及左邊的狀態，直接對左邊的取最小值；des[i][1] = des[s][1] – 1，由於當前信標未毀，所以會啟動將左邊當前功率內的信標摧毀，然後啟動左邊的信標，因此用二分搜尋找未被摧毀的最右邊信標s，然後將其最少被摧毀的信標數減1(因為當前信標未毀)。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/615f27ffbce7ae56571b5d648e092ae4.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> binary search </tag>
            
            <tag> 一般 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hit the Lottery</title>
      <link href="/Hit-the-Lottery/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/996/A" target="_blank" rel="noopener">CodeForces 996A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你N元利用他給你的幣值數1, 5, 10, 20, 100換出最少的硬幣數量，例如125元可以換1個100元，1個20元，1個5元，總共換了3個。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先將幣值定義好，接著由大的幣值開始換，換完後再將剩下的錢存起來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/506667681b6d86205d3ef998c8f1ad80.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> greedy </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Restoring Three Numbers</title>
      <link href="/Restoring-Three-Numbers/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1154/A" target="_blank" rel="noopener">CodeForces 1154A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>題目隨機將a+b, a+c, b+c 和 a+b+c亂擺，問你a、b、c分別是多少(答案輸出沒有一定的順序)。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將4個數字排序後將最大的數字減掉前面3個數字分別輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/f15ce3d3ac0784c691779d1f60a5a568.js"></script>]]></content>
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sweets Eating</title>
      <link href="/Sweets-Eating/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1253/C" target="_blank" rel="noopener">CodeForces 1253C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N(有多少個甜點)、M(一天可以吃幾個)和N個甜點的含糖數，在第D天吃下含糖A的甜點時會得到加權含糖數A x D，求吃K(K=1~N)個時的最少加權含糖數是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先由題目需求得知，在吃X個的情況下一定是挑含糖數最少的X個出來，並且由高的開始吃，得出的就是K=X時的最少含糖數，因此先排序得到陣列A。計算累加陣列S，S[i]等於A[0]~A[i]的總和。現在要求陣列K，記錄所有答案，觀察後得知，K[i] = K[i – M] + S[i]，如下一頁所示，將陣列輸出就是答案。<br><img src="A.PNG" alt="A"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0a2cb1dad996580b67cf36a5a37bc11c.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> math </tag>
            
            <tag> 一般 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gas Pipeline</title>
      <link href="/Gas-Pipeline/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1207/C" target="_blank" rel="noopener">CodeForces 1207C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>用0/1表示一條街道的一個區段不是/是路口，在路口時管線必須立在離地兩單位高的柱上供路口通行，非路口時則沒有限制。現在輸入N、A、B，表示道路的區段數量、一單位長的管線的成本、一單位高的柱子成本，保證頭尾的區段都是非路口，問在道路頭尾的柱子都是1單位高時花費的最低成本是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用柱子來看，前一根柱子到這一根柱子的成本有四種，高度1到1、高度1到2、高度2到1、高度2到2四種，因此知道前一根柱子的高度1和2的最低成本，就可以算出這根柱子高度1和2時的最低成本。加上第一根根最後一根柱子高度限制為1的條件後，從第一根柱子開始推算就可以得出最後的最低成本。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/f150287a1b3ee14609c68fcfe3aa0131.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> greedy </tag>
            
            <tag> 一般 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Brick Wall Patterns</title>
      <link href="/Brick-Wall-Patterns/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/9/900.pdf" target="_blank" rel="noopener">UVA 900</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你N個磚頭，問你有幾種排列方式。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>仔細觀察數列時會發現有規律，1的時候1、2的時候2、3的時候3、4的時候5….，第三項會是前兩項的和，因此我們可以先建一個表將所有答案算出來，之後利用查表來輸出答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/d3dd936f31d55be2205f5f8be4576bff.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Wrong Subtraction</title>
      <link href="/Wrong-Subtraction-1/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/977/A" target="_blank" rel="noopener">CodeForces 977A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他給你一個N然後可以有K次操作。<br>操作條件:<br>● if the last digit of the number is non-zero, she decreases the number by one.(如果他不為0則減一)</p><p>● if the last digit of the number is zero, she divides the number by 10 (i.e. removes the last digit).(如果他為0就除以10)</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每次將N模10看看於數是不是0如果不是就減1，其餘除10。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/be92977c98e9f69528282fcd181111e3.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bear and Big Brother</title>
      <link href="/Bear-and-Big-Brother/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/791/A" target="_blank" rel="noopener">CodeForces 791A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>一開始給你小熊和牠哥哥的體型，牠每一年增加三倍，而牠哥哥增加兩倍。題目問你說至少要幾年小熊才能超過哥哥的體重。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每過一年看小熊有沒有超過哥哥，如果有就輸出經過了幾年。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/50b0886876cbe645a45e48babe260d6a.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Single Push</title>
      <link href="/Single-Push/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1253/A" target="_blank" rel="noopener">CodeForces 1253A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你兩條字串問你兩條字串是否相等，而你可以將連續的區間加上一個N使的兩個字串相等，例如a=[3,7,1,4,1,2], b=[3,7,3,6,3,2]， 所以你可以把a[2]~a[4]加上2兩條數列就會一樣，可以相等輸出YES否則NO(如果a陣列有數字大於b也是輸出NO)。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將兩數列相減後的結果存在一個陣列內，接著比對前後相不相等，不相等的話ok++，如果ok大於等於2的話代表有超過2次不一樣，所以一定不可能將一個區間加上一個數就可以相等。如果是負的話直接加10讓他超過2。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a66ce2a9835ca967ca1fa19211c5fd2b.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Functions again</title>
      <link href="/Functions-again/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/788/A" target="_blank" rel="noopener">CodeForces 788A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N及N個數字，求依照公式時最大的區段和是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>觀察公式後，得知在區段中每一項差的絕對值會由+-+-+-…的規律加起來，因此除了第一個，要取的話就一次取兩個，不然只取-的會變小。先將所有的差的絕對值存起來，接著對偶數起點和奇數起點都做一次跨度為2的子區段最大和，最後得到的最大值就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5ea9f2ecdcafdc4a7fdb8dc98a590879.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 普通 </tag>
            
            <tag> two pointers </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mashmokh and ACM</title>
      <link href="/Mashmokh-and-ACM/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/414/B" target="_blank" rel="noopener">CodeForces 414B</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N、K，指定數列長度K，其中所有元素都在1~N之間，且每一個元素都可以整除下一個元素，問有幾種數列滿足條件？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>當數列長度為x，結尾為y時，要增長數列的方法就是在數列尾端增加一個是y的倍數的元素，因此這個數列可以衍伸出y、2y、3y…ty，ty &lt;= N，共t個數列。以這個想法下去建置一個陣列，紀錄當前長度結尾為x(x=1~N)的數列有幾個，逐次增加長度，跑完後就是答案。<br><img src="A.PNG" alt="A"><br><img src="B.PNG" alt="B"><br><img src="C.PNG" alt="C"><br><img src="D.PNG" alt="D"><br><img src="E.PNG" alt="E"><br><img src="/images/placeholder.png" alt="F" data-src="F.PNG" class="lazyload"><br><img src="/images/placeholder.png" alt="G" data-src="G.PNG" class="lazyload"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/4c631d92b0f0aec4e4e887ca67ded26a.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> 普通 </tag>
            
            <tag> combinatorics </tag>
            
            <tag> number theory </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>In Search of an Easy Problem</title>
      <link href="/In-Search-of-an-Easy-Problem/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1030/A" target="_blank" rel="noopener">CodeForces 1030A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>數列如果出現1就輸出HARD，沒有則輸出EASY。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每次輸入都判斷。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/458756d5630a34eee9f99914c973f7c5.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Dice I</title>
      <link href="/Dice-I/"/>
      <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_11_A" target="_blank" rel="noopener">AOJ ITP1_11_A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一顆骰子，然後翻轉骰子後，問你朝上的那面數字為多少。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先建一個東南西北轉完結果的”位子表”，將骰子骰完後的結果存到新的骰子，再將原本色子覆蓋掉重複地做。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fdd20a2347cfacc7bcc6f8fa78818726.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lose it</title>
      <link href="/Lose-it/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1176/C" target="_blank" rel="noopener">CodeForces 1176C</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>找出集合中有幾個序列為[4,8,15,16,23,42]的序列</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依照題意，可以得到說順序不能變，故由前向後搜，開始統計每個數字的個數，當碰到前面數字個數&gt;後面字數個數時表示可以形成序列，最後統計有多少個序列後計算n-6*序列數。</p><p>例如:<br>[4,8,4,15,16,8,23,15,16,42,23,42]</p><p>第一個為4，並且4為序列的第一個，故 sequence_count[0]++;<br>第二個為8，為序列中第二個，判斷序列中第一個是否有個數，有則 sequence_count[1]++;sequence_count[0]–;將前面的抵銷。<br>以此類推<br>sequence_count[0]++<br>sequence_count[2]++;sequence_count[1]–;<br>.<br>.<br>.</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/d83328cdf1580e2bed0b468b045ac0bd.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> dp </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Payment Without Change</title>
      <link href="/Payment-Without-Change/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1256/A" target="_blank" rel="noopener">CodeForces 1256A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你4個輸入a, n, b, s，他有a個硬幣幣值為n，b個硬幣幣值為1，題目問你可不可以湊出S這個數字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先算出S/N看看有A沒有超過最大的換硬幣數量，如果有就把他的最大直設為A，接著再檢查減掉後的數有沒有超過B，沒有超過就代表可以換出來S。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/4bda315b7e12083def4362b3d4eb7b03.js"></script>]]></content>
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Data Center</title>
      <link href="/Data-Center/"/>
      <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1250/F" target="_blank" rel="noopener">CodeForces 1250F</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個面積找出最小的周長。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將所又可能跑過一遍，每次比較找出最小的周長。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/38b3b785990804ed7b59cea69e1bafc8.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
            <tag> brute force </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>A Twisty Movement</title>
      <link href="/A-Twisty-Movement/"/>
      <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/933/A" target="_blank" rel="noopener">CodeForces 933A</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入一串由1和2組成的數列，可以左右翻轉任意的範圍一次，問最長的非遞減子序列是多長？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>觀察後得知，題目是在求將數列分成4段之後(每一段的長度可以是0)，第1段1的數量+第2段2的數量+第3段1的數量+第4段2的數量的最大值是多少。因此創個陣列邊輸入邊維持最大值，[1]紀錄只有第1段時的最大值、[2]紀錄只有第1段及第2段時的最大值、[3]跟[4]同理，因次跑完後輸出[4]就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/7ed0e505140cd7796ab9db94fe515dec.js"></script>]]></content>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Is it multiple of 3</title>
      <link href="/Is-it-multiple-of-3/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/131/13178.pdf" target="_blank" rel="noopener">UVA 13178</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>連續的1234567891011這樣的字串幫他檢查是否是3的倍數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>根據規則(k-1) % 3 == 0輸出NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9df8f124a87eff28e2500d52dd3a1a01.js"></script>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How old are you</title>
      <link href="/How-old-are-you/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/112/11219.pdf" target="_blank" rel="noopener">UVA 11219</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>檢查歲數有沒有問題。<br>• ‘Invalid birth date’, if the calculated age is impossible (still going to be born).<br>• ‘Check birth date’, if the calculated age is more than 130.<br>• the calculated age (years old only), otherwise.<br>• If the two dates are the same, the output should be ‘0’.</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>檢查年月日按照上面規則逐一做出來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/32722835e89a939908d24db15261995a.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>You can say 11</title>
      <link href="/You-can-say-11/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/109/10929.pdf" target="_blank" rel="noopener">UVA 10929</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>檢查這數字是否是11的倍數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>奇數項加起來A，偶數項加起來B，檢查abs(A - B) % 11 == 0。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0f1f31a49fd5a25ee5e9988f57ee4910.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>One-Two-Three</title>
      <link href="/One-Two-Three/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/101/10107.pdf" target="_blank" rel="noopener">UVA 10107</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>找中位數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每次都排序然後計算，如果是偶數就(ary[k/2-1] + ary[k/2]) / 2，奇數就直接印ary[k/2]。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/e746a371f7628ac2bec3bda186854e9c.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jumping Mario</title>
      <link href="/Jumping-Mario/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/117/11764.pdf" target="_blank" rel="noopener">UVA 11764</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他檢查馬力歐往上跳幾格，往下跳幾格。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>一個一個檢查左邊大於右邊h++，小於l++，等於continue。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/829c3118699f58d68f304196da026974.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lumberjack Sequencing</title>
      <link href="/Lumberjack-Sequencing/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/119/11942.pdf" target="_blank" rel="noopener">UVA 11942</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他檢查數列是否由大到小或小到大排。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>由左檢查道右看看左邊有沒有大於右邊，然後再檢查回來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/512bf476494b003db28eb225e0ffd375.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ring</title>
      <link href="/Ring/"/>
      <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_8_D" target="_blank" rel="noopener">Aizu ITP1_8_D</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他找出A字串在不再B字串裡面，需要連續的。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先複製一個字串在源自串後面模仿一個環的樣子，然後逐一檢查一樣的話計數器加一，檢查完後檢查計數器的長度是否跟原自串一樣長，一樣就不檢查然後印答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fa4b745d816d676bac397dcd0d05b2bd.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>All in All</title>
      <link href="/All-in-All/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/103/10340.pdf" target="_blank" rel="noopener">UVA10340</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他找出A字串在不再B字串裡面，沒有連續沒關西。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>逐一檢查有沒有匹配到相同的字，如果有就換下一個字直到然後次數加一，最後檢查相同的次數等不等於原本的長度，就可以知道答案了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/8f601b9d5c30cf3a6bd30a1c93650b31.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WERTYU</title>
      <link href="/WERTYU/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/100/10082.pdf" target="_blank" rel="noopener">UVA10082</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他請你幫他解密，規則是他敲的鍵盤左邊那個才是原本的答案，例如他敲O你要輸出I這樣。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們可以先建一個鍵盤的表，然後逐一搜尋，找到一樣的我就取他左邊那個，空白的話就直接印。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/13b38d45451133452556dd4e7fd5cdaa.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/Hello-World/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/116/11636.pdf" target="_blank" rel="noopener">UVA11636</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有個人他很懶，他懶得打這麼多個Hello World所以他只用複製的，假如他要印7個Hello World!，他要複製3次，因為第一次他複製他打好的一個Hello World，變2個，然後再複製便4個，然後再複製3個變7個。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們可以先建出一個答案表提供我們查詢以免超時，i是他需要印的數量，而每次複製我都檢查複製出來的最大值有沒有小於等於複製出來的數量，像是上面範例5、6、7、8都只需要複製3次，因為複製到三次的時候最大值複製數是8個，以此類推往下建表把所有答案都列出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c9a27cb1bb5ca17fe0914ef6dcc0cfd4.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Print a Frame</title>
      <link href="/Print-a-Frame/"/>
      <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_5_B" target="_blank" rel="noopener">Aizu ITP1_5_B</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他印出一個N*M的農場</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>把他切成三塊來印，先印一排#，在印中間部分，最後在印出#，一步一步時做出來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5e547e5c108bdb7fa47d5036c02f5f2d.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hashmat the Brave Warrior</title>
      <link href="/Hashmat-the-Brave-Warrior/"/>
      <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/100/10055.pdf" target="_blank" rel="noopener">UVA10055</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫忙計算兵力差距</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>相減加絕對值，記得要long long不然會爆掉。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c247b18829e24fb33734da0e4fab51b8.js"></script>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Report</title>
      <link href="/Report/"/>
      <content type="html"><![CDATA[<p>Each month Blake gets the report containing main economic indicators of the company “Blake Technologies”.</p><a id="more"></a><p>There are n commodities produced by the company. For each of them there is exactly one integer in the final report, that denotes corresponding revenue.</p><p>Before the report gets to Blake, it passes through the hands of m managers. Each of them may reorder the elements in some order. Namely, the i-th manager either sorts first r<sub>i</sub> numbers in non-descending or non-ascending order and then passes the report to the manager i + 1, or directly to Blake (if this manager has number i = m).</p><p>Employees of the “Blake Technologies” are preparing the report right now. You know the initial sequence a<sub>i</sub> of length n and the description of each manager, that is value r<sub>i</sub> and his favourite order. You are asked to speed up the process and determine how the final report will look like.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains two integers n and m (1 ≤ n, m ≤ 200,000) — the number of commodities in the report and the number of managers, respectively.</p><p>The second line contains n integers a<sub>i</sub> (|a<sub>i</sub>| ≤ 10<sup>9</sup>) — the initial report before it gets to the first manager.</p><p>Then follow m lines with the descriptions of the operations managers are going to perform. The i-th of these lines contains two integers ti and r<sub>i</sub> (t<sub>i</sub> ∈ {1, 2}, 1 ≤ r<sub>i</sub> ≤ n), meaning that the i-th manager sorts the first r<sub>i</sub> numbers either in the non-descending (if t<sub>i</sub> = 1) or non-ascending (if t<sub>i</sub> = 2) order.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n integers — the final report, which will be passed to Blake by manager number m.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br><span class="line">1 2 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1 3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 2 4 3</span><br><span class="line">2 3</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4 1 3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, the initial report looked like: 1 2 3. After the first manager the first two numbers were transposed: 2 1 3. The report got to Blake in this form.</p><p>In the second sample the original report was like this: 1 2 4 3. After the first manager the report changed to: 4 2 1 3. After the second manager the report changed to: 2 4 1 3. This report was handed over to Blake.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>它會給你一組數列有n個數，而你要依據它的t做判斷是否為升序或降序，再從頭到r做排列，共有m組t和r。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找出最大的r做排序，從剩下沒被排序的數先儲存起來，再從剩下的t和r組，找尋最大的r，然後看上一個最大的r和t為升序或者是降序決定儲存方向t[i-1]和長度r[i-1]-r[i]。</p><p>*建議直接把程式碼複製執行被註解掉的cout會比較清楚。</p><p>ex:<br>4 2<br>1 2 4 3<br>2 3<br>1 2</p><p>4   2   1 |3  :數列<br>-&gt; &lt;- &lt;-    :方向t[i-1],和長度r[i-1] - r[i]<br>2   3   1     :儲存順序</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fc83ef23d16f8afc81b2d1fb8c5bb658.js"></script><p><a href="https://chucs.github.io/site/">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> data structures </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Two Buttons</title>
      <link href="/Two-Buttons/"/>
      <content type="html"><![CDATA[<p>Vasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer. </p><a id="more"></a><p>After clicking the red button, device multiplies the displayed number by two. After clicking the blue button, device subtracts one from the number on the display. </p><p>If at some point the number stops being positive, the device breaks down. The display can show arbitrarily large numbers. Initially, the display shows number n.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first and the only line of the input contains two distinct integers n and m (1 ≤ n, m ≤ 10<sup>4</sup>), separated by a space .</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single number — the minimum number of times one needs to push the button required to get the number m out of number n.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example you need to push the blue button once, and then push the red button once.</p><p>In the second example, doubling the number is unnecessary, so we need to push the blue button nine times.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>它給你兩個按鈕和一個數值n，一個做數值*2的動作，另一個則做數值-1的動作，試問最少需要案幾次按鈕才能到達目標值n。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>2(2((2n)+1)) = m  –&gt;  n = (((m/2)-1)/2)/2<br>使用類似反矩陣的概念，去讓m接近n，因為在n做運算時必定為整數則反之亦然，所以m做運算時絕對不能出現小數點，意思是m做除以2的運算時必須為偶數。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/775e4e0b3a627e88d921dea99c9d424a.js"></script><p><a href="https://chucs.github.io/site/">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> greedy </tag>
            
            <tag> graphs </tag>
            
            <tag> math </tag>
            
            <tag> dfs and similar </tag>
            
            <tag> shortest paths </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Duff in Love</title>
      <link href="/Duff-in-Love/"/>
      <content type="html"><![CDATA[<p>Duff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a &gt; 1 such that a2 is a divisor of x.</p><a id="more"></a><p>Malek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.</p><p>Malek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first and only line of input contains one integer, n (1 ≤ n ≤ 10<sup>12</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the answer in one line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn’t divisible by any perfect square, so 10 is lovely.</p><p>In second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4 = 2<sup>2</sup>, so 12 is not lovely, while 6 is indeed lovely.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入它給你一個數字n，它因數分解的集合的因數分解不希望有任何可以被開根號的因數。如果有，希望你能把他丟棄，然後再組成新的數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>n做出質因數分解，把重複出現的數去除，再把集合裡的數相乘，這樣就不會有可以被開根號的因數了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fc37c058fd2adfcffbd5b71e68747a2e.js"></script><p><a href="https://codeforces.com/contest/588/problem/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Pipeline</title>
      <link href="/Pipeline/"/>
      <content type="html"><![CDATA[<p>Vova, the Ultimate Thule new shaman, wants to build a pipeline. As there are exactly n houses in Ultimate Thule, Vova wants the city to have exactly n pipes, each such pipe should be connected to the water supply. </p><a id="more"></a><p>A pipe can be connected to the water supply if there’s water flowing out of it. Initially Vova has only one pipe with flowing water. Besides, Vova has several splitters.</p><p>A splitter is a construction that consists of one input (it can be connected to a water pipe) and x output pipes. When a splitter is connected to a water pipe, water flows from each output pipe. You can assume that the output pipes are ordinary pipes. For example, you can connect water supply to such pipe if there’s water flowing out from it. At most one splitter can be connected to any water pipe.</p><p><img src="A.PNG" alt="A"></p><p>Vova has one splitter of each kind: with 2, 3, 4, …, k outputs. Help Vova use the minimum number of splitters to build the required pipeline or otherwise state that it’s impossible.</p><p>Vova needs the pipeline to have exactly n pipes with flowing out water. Note that some of those pipes can be the output pipes of the splitters.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers n and k (1 ≤ n ≤ 10<sup>18</sup>, 2 ≤ k ≤ 10<sup>9</sup>).</p><p>Please, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the minimum number of splitters needed to build the pipeline. If it is impossible to build a pipeline with the given splitters, print -1.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>Vova希望在一個叫the Ultimate Thule new shaman的城市建立一條管道，城市中有n座房子，因此Vova希望剛好有n條管道，因此每條這樣的管道都應連接到供水系統。如果有水流出，則可以將管道連接到供水系統。最初，Vova只有一根流水的管道。此外，Vova有幾個分離器。</p><p>Vova有每種分配器：具有2、3、4，…，k個輸出。幫助Vova使用最少數量的拆分器來構建所需的管道，或者以其他方式聲明這是不可能的。</p><p>Vova需要管道中有正好n根流出水的管道。其中一些管道可以是分配器的輸出管道。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為分離器是2,3,4,…,k個輸出，則在正常情況下只要不超過所有分離器組合起來的輸出總數就一定能滿足條件，尋找n到k的分離器組合的輸出總數，如超過目標值或等於目標值，則答案為(k-n+1)個。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/e95472b21f34e1b7ca5440a4a11da55a.js"></script><p><a href="https://codeforces.com/problemset/problem/287/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> binary search </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ice Skating</title>
      <link href="/Ice-Skating/"/>
      <content type="html"><![CDATA[<p>Bajtek is learning to skate on ice. He’s a beginner, so his only mode of transportation is pushing off from a snow drift to the north, east, south or west and sliding until he lands in another snow drift. He has noticed that in this way it’s impossible to get from some snow drifts to some other by any sequence of moves. He now wants to heap up some additional snow drifts, so that he can get from any snow drift to any other one. He asked you to find the minimal number of snow drifts that need to be created.</p><p>We assume that Bajtek can only heap up snow drifts at integer coordinates.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of input contains a single integer n (1 ≤ n ≤ 100) — the number of snow drifts. Each of the following n lines contains two integers x<sub>i</sub> and y<sub>i</sub> (1 ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 1000) — the coordinates of the i-th snow drift.</p><p>Note that the north direction coinсides with the direction of Oy axis, so the east direction coinсides with the direction of the Ox axis. All snow drift’s locations are distinct.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the minimal number of snow drifts that need to be created in order for Bajtek to be able to reach any snow drift from any other one.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 1</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 1</span><br><span class="line">4 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>Bajtek是一個滑雪的初心者，而它只能滑行四個方向(東南西北)，在滑行的途中它無法停下，除非撞到雪堆它才能停下改變行滑行的方向(或不改變)，而他需要堆積額外的雪堆來確保每個雪堆他都能前往。他問最少需要多少額外的雪堆。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>在輸入時會給你雪堆數和它在平面的座標，而現有的雪堆能組成多個區塊(單一或複數個雪堆，無法前往其他雪堆或能相互前往)，我們需要找出共有幾個區塊並計數，假設共為n個區塊，則最少需要(n-1)個雪堆來組成統一的大區塊，而(n-1)就是我們要的答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/ec5c3671547a0f0dff77dbacaafbe7ec.js"></script><p><a href="https://codeforces.com/contest/217/problem/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> graphs </tag>
            
            <tag> brute force </tag>
            
            <tag> dfs and similar </tag>
            
            <tag> dus </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Binary Number</title>
      <link href="/Binary-Number/"/>
      <content type="html"><![CDATA[<p>Little walrus Fangy loves math very much. That’s why when he is bored he plays with a number performing some operations.</p><a id="more"></a><p>Fangy takes some positive integer x and wants to get a number one from it. While x is not equal to 1, Fangy repeats the following action: if x is odd, then he adds 1 to it, otherwise he divides x by 2. Fangy knows that for any positive integer number the process ends in finite time.</p><p>How many actions should Fangy perform to get a number one from number x?</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a positive integer x in a binary system. It is guaranteed that the first digit of x is different from a zero and the number of its digits does not exceed 106.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the required number of actions.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1001001</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101110</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Let’s consider the third sample. Number 101110 is even, which means that we should divide it by 2. After the dividing Fangy gets an odd number 10111 and adds one to it. Number 11000 can be divided by 2 three times in a row and get number 11. All that’s left is to increase the number by one (we get 100), and then divide it by 2 two times in a row. As a result, we get 1.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他給你一個二進制碼，而當他為偶數時除以2，反之加1，直到數字為1為止，計算他總共做了幾次更動。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用字串儲存數字，判斷最後的位數如果是1，進位往前直到0，經過的位數做更改，如果進位超出範圍在前面加上1，如果是0消除它，以上做一次判斷計數加1。直到整個字串為1</p><p>進階:<br>一樣用字串儲存做一次迴圈確認為1的字元大於等於2個，成立在右到左第1個1字元之後的0，確認有幾個加上1再加上整個字串的長度就是答案了。<br>不成立則是屬出0的個數就是答案了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fcb178773a50568b10ba9fe62829f502.js"></script><p><a href="https://codeforces.com/problemset/problem/92/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>The 3n + 1 problem</title>
      <link href="/The-3n-1-problem/"/>
      <content type="html"><![CDATA[<p>Problems in Computer Science are often classified as belonging to a certain class of problems (e.g.,NP, Unsolvable, Recursive). In this problem you will be analyzing a property of an algorithm whose classification is not known for all possible inputs.</p><a id="more"></a><p>Consider the following algorithm:</p><ol><li>input n</li><li>print n</li><li>if n = 1 then STOP</li><li>if n is odd then n ←− 3n + 1</li><li>else n ←− n/2</li><li>GOTO 2</li></ol><p>Given the input 22, the following sequence of numbers will be printed<br>22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1</p><p>It is conjectured that the algorithm above will terminate (when a 1 is printed) for any integral input value. Despite the simplicity of the algorithm, it is unknown whether this conjecture is true. It has been verified, however, for all integers n such that 0 &lt; n &lt; 1, 000, 000 (and, in fact, for many morenumbers than this.)</p><p>Given an input n, it is possible to determine the number of numbers printed before and including the 1 is printed. For a given n this is called the cycle-length of n. In the example above, the cycle length of 22 is 16.</p><p>For any two numbers i and j you are to determine the maximum cycle length over all numbers between and including both i and j.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input will consist of a series of pairs of integers i and j, one pair of integers per line. All integers will be less than 10,000 and greater than 0.</p><p>You should process all pairs of integers and for each pair determine the maximum cycle length over all integers between and including i and j.</p><p>You can assume that no operation overflows a 32-bit integer.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>For each pair of input integers i and j you should output i, j, and the maximum cycle length for integers between and including i and j. </p><p>These three numbers should be separated by at least one space with all three numbers on one line and with one line of output for each line of input. </p><p>The integers i and j must appear in the output in the same order in which they appeared in the input and should be followed by the maximum cycle length (on the same line).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br><span class="line">100 200</span><br><span class="line">201 210</span><br><span class="line">900 1000</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10 20</span><br><span class="line">100 200 125</span><br><span class="line">201 210 89</span><br><span class="line">900 1000 174</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>就在i到j之間經過上面的演算法做一串數列計算它的長度取其中的最大值。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>把循環的演算法先寫出來回傳它的長度，在i到j的數計算每個數進入演算法重複的次數，取最大的一個，把i，j和最大的數印出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/63c386f78060c514d21dd5db59bfc802.js"></script><p><a href="https://onlinejudge.org/external/1/100.pdf" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Little Elephant and Numbers</title>
      <link href="/Little-Elephant-and-Numbers/"/>
      <content type="html"><![CDATA[<p>The Little Elephant loves numbers.</p><p>He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations.</p><p>Help the Little Elephant to find the described number.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>A single line contains a single integer x (1 ≤ x ≤ 10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print an integer — the answer to the problem.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N，問你所有N的因數中，有幾個因數有使用到N本身使用過的數字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找因數只需要找到平方根就好。另一邊的因數可以用除的得知。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/572bf3a7c7b6f81a7a57a5831208c312.js"></script><p><a href="https://codeforces.com/problemset/problem/221/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Magical Boxes</title>
      <link href="/Magical-Boxes/"/>
      <content type="html"><![CDATA[<p>Emuskald is a well-known illusionist. One of his trademark tricks involves a set of magical boxes. The essence of the trick is in packing the boxes inside other boxes.</p><p>From the top view each magical box looks like a square with side length equal to 2<sup>k</sup> (k is an integer, k ≥ 0) units. A magical box v can be put inside a magical box u, if side length of v is strictly less than the side length of u. In particular, Emuskald can put 4 boxes of side length 2<sup>k - 1</sup> into one box of side length 2<sup>k</sup>, or as in the following figure:</p><a id="more"></a><p><img src="A.PNG" alt="A"><br>Emuskald is about to go on tour performing around the world, and needs to pack his magical boxes for the trip. He has decided that the best way to pack them would be inside another magical box, but magical boxes are quite expensive to make. Help him find the smallest magical box that can fit all his boxes.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of input contains an integer n (1 ≤ n ≤ 10<sup>5</sup>), the number of different sizes of boxes Emuskald has. Each of following n lines contains two integers k<sub>i</sub> and a<sub>i</sub> (0 ≤ k<sub>i</sub> ≤ 10<sup>9</sup>, 1 ≤ a<sub>i</sub> ≤ 10<sup>9</sup>), which means that Emuskald has ai boxes with side length 2<sup>k<sub>i</sub></sup>. It is guaranteed that all of ki are distinct.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output a single integer p, such that the smallest magical box that can contain all of Emuskald’s boxes has side length 2<sup>p</sup>.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">0 3</span><br><span class="line">1 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">0 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 10</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Picture explanation. If we have 3 boxes with side length 2 and 5 boxes with side length 1, then we can put all these boxes inside a box with side length 4, for example, as shown in the picture.</p><p>In the second test case, we can put all four small boxes into a box with side length 2.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N，再輸入N種箱子的尺寸跟數量， 1個箱子可以裝1~4個比自己小一號的箱子，問你需要一個多大的箱子才能裝得下全部的箱子。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>1個箱子可以裝4個比自己小一號的箱子，所以先把輸入的箱子按尺寸大到小排序，記錄現在最大的尺寸，計算可不可以裝得下那些比較小的，要注意的是同一尺寸的箱子最多只會有1000000000個，所以可以裝超過這個數字就不用判斷了，一定裝的下；裝不下的就計算需要幾個目前最大的箱子才裝得下，先記著。</p><p>最後跑完全部後再用需要幾個目前最大的箱子來算需要多大的箱子。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/ffe732aec0bdd1ce3ec815518e180d71.js"></script><p><a href="https://codeforces.com/problemset/problem/269/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> math </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Snow Footprints</title>
      <link href="/Snow-Footprints/"/>
      <content type="html"><![CDATA[<p>There is a straight snowy road, divided into n blocks. The blocks are numbered from 1 to n from left to right. If one moves from the i-th block to the (i + 1)-th block, he will leave a right footprint on the i-th block. Similarly, if one moves from the i-th block to the (i - 1)-th block, he will leave a left footprint on the i-th block. If there already is a footprint on the i-th block, the new footprint will cover the old one.</p><a id="more"></a><p><img src="A.PNG" alt="A"><br>At the beginning, there were no footprints. Then polar bear Alice starts from the s-th block, makes a sequence of moves and ends in the t-th block. It is known that Alice never moves outside of the road.</p><p>You are given the description of Alice’s footprints. Your task is to find a pair of possible values of s, t by looking at the footprints.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains integer n (3 ≤ n ≤ 1000).</p><p>The second line contains the description of the road — the string that consists of n characters. Each character will be either “.” (a block without footprint), or “L” (a block with a left footprint), “R” (a block with a right footprint).</p><p>It’s guaranteed that the given string contains at least one character not equal to “.”. Also, the first and the last character will always be “.”. It’s guaranteed that a solution exists.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two space-separated integers — the values of s and t. If there are several possible solutions you can print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">..RRLL...</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">.RRRLLLLL..</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 5</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first test sample is the one in the picture.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入一串腳印，問你其中一種可能的起點跟終點是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>● 分析一下可以得知實際上只會有三種模式</p><ol><li>只有R</li><li>只有L</li><li>左邊任意個R接右邊任意個L。</li></ol><p>● 先記錄R區間跟L區間的頭尾，沒有L區間就是模式1，直接輸出答案；沒有R區間就是模式2，直接輸出答案；兩個都有就視為從最左邊走到最右邊再走回來到交界。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fa722ac9d242d3ee030746ce5cec083c.js"></script><p><a href="https://codeforces.com/problemset/problem/298/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Multiplication-Table</title>
      <link href="/Multiplication-Table/"/>
      <content type="html"><![CDATA[<p>Petya studies positional notations. He has already learned to add and subtract numbers in the systems of notations with different radices and has moved on to a more complicated action — multiplication. To multiply large numbers one has to learn the multiplication table. Unfortunately, in the second grade students learn only the multiplication table of decimals (and some students even learn it in the first grade). Help Petya make a multiplication table for numbers in the system of notations with the radix k.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer k (2 ≤ k ≤ 10) — the radix of the system.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the multiplication table for the system of notations with the radix k. The table must contain k - 1 rows and k - 1 columns. The element on the crossing of the i-th row and the j-th column is equal to the product of i and j in the system of notations with the radix k. Each line may have any number of spaces between the numbers (the extra spaces in the samples are put for clarity).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1  2  3  4  5  6  7  8  9</span><br><span class="line">2  4  6  8 10 12 14 16 18</span><br><span class="line">3  6  9 12 15 18 21 24 27</span><br><span class="line">4  8 12 16 20 24 28 32 36</span><br><span class="line">5 10 15 20 25 30 35 40 45</span><br><span class="line">6 12 18 24 30 36 42 48 54</span><br><span class="line">7 14 21 28 35 42 49 56 63</span><br><span class="line">8 16 24 32 40 48 56 64 72</span><br><span class="line">9 18 27 36 45 54 63 72 81</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1  2</span><br><span class="line">2 11</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>製作一個乘法表，而這個乘法表會是 (k-1)*(k-1) 的形式，而成出的數都是K進位，試著列出乘法表的數 (k不會大於10)。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>建立乘法表，唯一的難點在轉進位，其他應該沒甚麼問題。</p><p>轉進位只需要用10進位不斷的對要轉的進位取餘數之後逆著串起來就行了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/f1cf5795fd72cf54ac86b3643bcccc45.js"></script><p><a href="https://codeforces.com/problemset/problem/39/H" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Rectangles</title>
      <link href="/Rectangles/"/>
      <content type="html"><![CDATA[<p>You are given n rectangles on a plane with coordinates of their bottom left and upper right points. Some (n−1) of the given n rectangles have some common point. A point belongs to a rectangle if this point is strictly inside the rectangle or belongs to its boundary.</p><p>Find any point with integer coordinates that belongs to at least (n−1) given rectangles.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (2≤n≤132674) — the number of given rectangles.</p><p>Each the next n lines contains four integers x1, y1, x2 and y2 (−10<sup>9</sup>≤x1&lt;x2≤10<sup>9</sup>, −10<sup>9</sup>≤y1&lt;y2≤10<sup>9</sup>) — the coordinates of the bottom left and upper right corners of a rectangle.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two integers x and y — the coordinates of any point that belongs to at least (n−1) given rectangles.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 0 1 1</span><br><span class="line">1 1 2 2</span><br><span class="line">3 0 4 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 0 1 1</span><br><span class="line">0 1 1 2</span><br><span class="line">1 0 2 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">0 0 5 5</span><br><span class="line">0 0 4 4</span><br><span class="line">1 1 4 4</span><br><span class="line">1 1 4 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">0 0 10 8</span><br><span class="line">1 2 6 7</span><br><span class="line">2 3 5 6</span><br><span class="line">3 4 4 5</span><br><span class="line">8 1 9 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The picture below shows the rectangles in the first and second samples. The possible answers are highlighted.<br><img src="A.PNG" alt="A"><br>The picture below shows the rectangles in the third and fourth samples.<br><img src="B.PNG" alt="B"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>提供n個矩形，其坐標分別為左下角和右上角。 給定的n個矩形中的某些（n-1）個具有一些公共點。 如果某點嚴格位於矩形內或屬於其邊界，則該點屬於矩形。</p><p>找具有至少屬於（n-1）個給定矩形的整數坐標的任何點。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>要在N−1個矩形中，因此只要一個一個刪去後，判斷剩下的N−1 個矩形有沒有套在一起就可以了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9bd6c597f308d42107b1326c4e318330.js"></script><p><a href="https://codeforces.com/problemset/problem/1028/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> 普通 </tag>
            
            <tag> geometry </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Plant</title>
      <link href="/Plant/"/>
      <content type="html"><![CDATA[<p>Dwarfs have planted a very interesting plant, which is a triangle directed “upwards”. This plant has an amusing feature. After one year a triangle plant directed “upwards” divides into four triangle plants: three of them will point “upwards” and one will point “downwards”. After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.</p><a id="more"></a><p><img src="A.PNG" alt="A"><br>Help the dwarfs find out how many triangle plants that point “upwards” will be in n years.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (0 ≤ n ≤ 10<sup>18</sup>) — the number of full years when the plant grew.</p><p>Please do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specifier.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the remainder of dividing the number of plants that will point “upwards” in n years by 1000000007 (10<sup>9</sup> + 7).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>觀察後可以得到N=1時向上的三角形有1+2=3個，N=2時有1+2+3+4=1+2+…+2<sup>2</sup>=10個，因此推導出輸入N時有1+…+2N=((2<sup>N</sup>+1) 2<sup>N</sup>)/2個三角形，因此題目可以等價為求((2<sup>N</sup>+1) 2<sup>N</sup>)/2%1000000007<br>另外一個要知道的數學知識是:<br>(a<em>b</em>c*d)%e≡((a%e)∙(b%e)∙(c%e)∙(d%e))%e</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們現在需要求出2<sup>𝑁</sup>%1000000007是多少，將2<sup>N</sup>分解開並分別求出餘數後用前面的方式求出乘起來後的餘數，然後再算出最後的餘數就是答案，例如2<sup>11</sup>=2<sup>8</sup>∙2<sup>2</sup>∙2<sup>1</sup>  </p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/74951133f40de6bd5ff946f1de27f2f9.js"></script><p><a href="https://codeforces.com/problemset/problem/185/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> math </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DIY Wooden Ladder</title>
      <link href="/DIY-Wooden-Ladder/"/>
      <content type="html"><![CDATA[<p>Let’s denote a k-step ladder as the following structure: exactly k+2 wooden planks, of which</p><p>● two planks of length at least k+1 — the base of the ladder;<br>● k planks of length at least 1 — the steps of the ladder;</p><p>Note that neither the base planks, nor the steps planks are required to be equal.</p><p>For example, ladders 1 and 3 are correct 2-step ladders and ladder 2 is a correct 1-step ladder. On the first picture the lengths of planks are [3,3] for the base and [1] for the step. On the second picture lengths are [3,3] for the base and [2] for the step. On the third picture lengths are [3,4] for the base and [2,3] for the steps.</p><a id="more"></a><p><img src="A.PNG" alt="A"><br>You have n planks. The length of the i-th planks is a<sub>i</sub>. You don’t have a saw, so you can’t cut the planks you have. Though you have a hammer and nails, so you can assemble the improvised “ladder” from the planks.</p><p>The question is: what is the maximum number k such that you can choose some subset of the given planks and assemble a k-step ladder using them?</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer T (1≤T≤100) — the number of queries. The queries are independent.</p><p>Each query consists of two lines. The first line contains a single integer n (2≤n≤10<sup>5</sup>) — the number of planks you have.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (1≤a<sub>i</sub>≤10<sup>5</sup>) — the lengths of the corresponding planks.</p><p>It’s guaranteed that the total number of planks from all queries doesn’t exceed 105.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print T integers — one per query. The i-th integer is the maximum number k, such that you can choose some subset of the planks given in the i-th query and assemble a k-step ladder using them.</p><p>Print 0 if you can’t make even 1-step ladder from the given set of planks.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br><span class="line">1 3 1 3</span><br><span class="line">3</span><br><span class="line">3 3 2</span><br><span class="line">5</span><br><span class="line">2 3 3 4 2</span><br><span class="line">3</span><br><span class="line">1 1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>第一個輸入為T個木梯<br>第二個輸入為N個木條<br>接著輸入a<sub>1</sub>….a<sub>n</sub>個木條長度</p><p>題目問你他要請你幫他隨便造出一個木梯，但是因為沒有工具，所以木頭不行切割，利用這些木頭可以造出幾個階梯的木梯?(木頭間格距離為1)</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>在輸入的過程中尋找第一長的木條max1與第二長的木條max2，將第二長的木條長度減去1，因為最上面木梯不能建階梯，接著我們把第二長木條長度和剩餘的木條數相比,如果木條數較小,代表他無法把階梯建造完全,會在中途用光木條數,此時木條數就是最多可以造出幾個階梯數,如果木條數大於第二常木條長度,表示他可以完全建造完畢,所以此時第二長的木條長度-1即是可以造出的階梯數.</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/6b5a155e8e6747f7dd817d186437a46c.js"></script><p><a href="http://codeforces.com/problemset/problem/1197/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lunar New Year and Number Division</title>
      <link href="/Lunar-New-Year-and-Number-Division/"/>
      <content type="html"><![CDATA[<p>Lunar New Year is approaching, and Bob is struggling with his homework – a number division problem.</p><p>There are n positive integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> on Bob’s homework paper, where n is always an even number. Bob is asked to divide those numbers into groups, where each group must contain at least 2 numbers. Suppose the numbers are divided into m groups, and the sum of the numbers in the j-th group is s<sub>j</sub>. Bob’s aim is to minimize the sum of the square of s<sub>j</sub>.<br>Bob is puzzled by this hard problem. Could you please help him solve it?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains an even integer n (2≤n≤3⋅10<sup>5</sup>), denoting that there are n integers on Bob’s homework paper.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (1≤a<sub>i</sub>≤104), describing the numbers you need to deal with.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>A single line containing one integer, denoting the minimum of the sum of the square of s<sub>j</sub>.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">8 5 2 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">164</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 1 1 2 2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">27</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, one of the optimal solutions is to divide those 4 numbers into 2 groups {2,8},{5,3}. Thus the answer is (2+8)<sup>2</sup>+(5+3)<sup>2</sup>=164.</p><p>In the second sample, one of the optimal solutions is to divide those 6 numbers into 3 groups {1,2},{1,2},{1,2}. Thus the answer is (1+2)<sup>2</sup>+(1+2)<sup>2</sup>+(1+2)<sup>2</sup>=27.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>把最大跟最小的數字家再一起然後平方。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>收先就是排序，排序完後就把頭跟尾的數字相加並平方直到N/2。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9523718e99c9196b294b8f269eb4d696.js"></script><p><a href="https://codeforces.com/problemset/problem/1106/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bakery</title>
      <link href="/Bakery/"/>
      <content type="html"><![CDATA[<p>Masha wants to open her own bakery and bake muffins in one of the n cities numbered from 1 to n. There are m bidirectional roads, each of whose connects some pair of cities.</p><p>To bake muffins in her bakery, Masha needs to establish flour supply from some storage. There are only k storages, located in different cities numbered a<sub>1</sub>, a<sub>2</sub>, …, a<sub>k</sub>.</p><p>Unforunately the law of the country Masha lives in prohibits opening bakery in any of the cities which has storage located in it. She can open it only in one of another n - k cities, and, of course, flour delivery should be paid — for every kilometer of path between storage and bakery Masha should pay 1 ruble.</p><p>Formally, Masha will pay x roubles, if she will open the bakery in some city b (a<sub>i</sub> ≠ b for every 1 ≤ i ≤ k) and choose a storage in some city s (s = aj for some 1 ≤ j ≤ k) and b and s are connected by some path of roads of summary length x (if there are more than one path, Masha is able to choose which of them should be used).</p><p>Masha is very thrifty and rational. She is interested in a city, where she can open her bakery (and choose one of k storages and one of the paths between city with bakery and city with storage) and pay minimum possible amount of rubles for flour delivery. Please help Masha find this amount.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains three integers n, m and k (1 ≤ n, m ≤ 10<sup>5</sup>, 0 ≤ k ≤ n) — the number of cities in country Masha lives in, the number of roads between them and the number of flour storages respectively.</p><p>Then m lines follow. Each of them contains three integers u, v and l (1 ≤ u, v ≤ n, 1 ≤ l ≤ 10<sup>9</sup>, u ≠ v) meaning that there is a road between cities u and v of length of l kilometers .</p><p>If k &gt; 0, then the last line of the input contains k distinct integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>k</sub> (1 ≤ a<sub>i</sub> ≤ n) — the number of cities having flour storage located in. If k = 0 then this line is not presented in the input.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum possible amount of rubles Masha should pay for flour delivery in the only line.</p><p>If the bakery can not be opened (while satisfying conditions) in any of the n cities, print  - 1 in the only line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 4 2</span><br><span class="line">1 2 5</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">1 4 10</span><br><span class="line">1 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 1 1</span><br><span class="line">1 2 3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 9</span><br><span class="line">42 42 42 42 42 42 42 42 42</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p><img src="A.PNG" alt="A"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N個人跟M包食物，再輸入這M包食物的種類。現在規定每個人指定一種食物，每天只能吃一樣種類的食物，沒有每個人都要指定一樣或不一樣的種類，問你這些食物最多能吃幾天？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法搜尋天數d，判斷食物夠不夠吃d天。先統計食物的出現次數，出現次數除以天數就等於能給幾個人吃d天，加總所有食物能供給的人數，若是大於等於N就表示這些食物可以吃d天。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fcc80ed825820de5d02df437d0351496.js"></script><p><a href="https://codeforces.com/problemset/problem/707/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> 簡單 </tag>
            
            <tag> graphs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Planning The Expedition</title>
      <link href="/Planning-The-Expedition/"/>
      <content type="html"><![CDATA[<p>Natasha is planning an expedition to Mars for n people. One of the important tasks is to provide food for each participant.</p><p>The warehouse has m daily food packages. Each package has some food type a<sub>i</sub>.</p><p>Each participant must eat exactly one food package each day. Due to extreme loads, each participant must eat the same food type throughout the expedition. Different participants may eat different (or the same) types of food.</p><p>Formally, for each participant j Natasha should select his food type b<sub>j</sub> and each day j-th participant will eat one food package of type b<sub>j</sub>. The values b<sub>j</sub> for different participants may be different.</p><p>What is the maximum possible number of days the expedition can last, following the requirements above?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (1≤n≤100, 1≤m≤100) — the number of the expedition participants and the number of the daily food packages available.</p><p>The second line contains sequence of integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>m</sub>(1≤a<sub>i</sub>≤100), where ai is the type of i-th food package.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the single integer — the number of days the expedition can last. If it is not possible to plan the expedition for even one day, print 0.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 10</span><br><span class="line">1 5 2 1 1 1 2 5 7 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100 1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 9</span><br><span class="line">42 42 42 42 42 42 42 42 42</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, Natasha can assign type 1 food to the first participant, the same type 1 to the second, type 5 to the third and type 2 to the fourth. In this case, the expedition can last for 2 days, since each participant can get two food packages of his food type (there will be used 4 packages of type 1, two packages of type 2 and two packages of type 5).</p><p>In the second example, there are 100 participants and only 1 food package. In this case, the expedition can’t last even 1 day.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N個人跟M包食物，再輸入這M包食物的種類。現在規定每個人指定一種食物，每天只能吃一樣種類的食物，沒有每個人都要指定一樣或不一樣的種類，問你這些食物最多能吃幾天？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法搜尋天數d，判斷食物夠不夠吃d天。先統計食物的出現次數，出現次數除以天數就等於能給幾個人吃d天，加總所有食物能供給的人數，若是大於等於N就表示這些食物可以吃d天。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/df2e49ff2e71f26223bf4be6dce43c51.js"></script><p><a href="https://codeforces.com/problemset/problem/1011/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Alyona and Mex</title>
      <link href="/Alyona-and-Mex/"/>
      <content type="html"><![CDATA[<p>Alyona’s mother wants to present an array of n non-negative integers to Alyona. The array should be special.</p><p>Alyona is a capricious girl so after she gets the array, she inspects m of its subarrays. Subarray is a set of some subsequent elements of the array. The i-th subarray is described with two integers l<sub>i</sub> and r<sub>i</sub>, and its elements are a[l<sub>i</sub>], a[l<sub>i</sub> + 1], …, a[r<sub>i</sub>].</p><p>Alyona is going to find mex for each of the chosen subarrays. Among these m mexes the girl is going to find the smallest. She wants this minimum mex to be as large as possible.</p><p>You are to find an array a of n elements so that the minimum mex among those chosen by Alyona subarrays is as large as possible.</p><p>The mex of a set S is a minimum possible non-negative integer that is not in S.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (1 ≤ n, m ≤ 10<sup>5</sup>).</p><p>The next m lines contain information about the subarrays chosen by Alyona. The i-th of these lines contains two integers l<sub>i</sub> and r<sub>i</sub> (1 ≤ l<sub>i</sub> ≤ r<sub>i</sub> ≤ n), that describe the subarray a[l<sub>i</sub>], a[l<sub>i</sub> + 1], …, a[r<sub>i</sub>].</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In the first line print single integer — the maximum possible minimum mex.</p><p>In the second line print n integers — the array a. All the elements in a should be between 0 and 10<sup>9</sup>.</p><p>It is guaranteed that there is an optimal answer in which all the elements in a are between 0 and 10<sup>9</sup>.</p><p>If there are multiple solutions, print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 3</span><br><span class="line">2 5</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 0 2 1 0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 4</span><br><span class="line">2 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5 2 0 1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first example: the mex of the subarray (1, 3) is equal to 3, the mex of the subarray (2, 5) is equal to 3, the mex of the subarray (4, 5) is equal to 2 as well, thus the minumal mex among the subarrays chosen by Alyona is equal to 2.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個陣列，現在可以對每一個元素分別將他變小，最後選出沒在陣列中出現過的正數中最小的，問你這個數值的最大值是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>輸入完後從小排到大，先將答案設為1，然後跑整個陣列，若是當前數字大於等於答案，則表示這個數字能變成答案，那就表示可以將沒出現的數字(答案)加1，跑完陣列後輸出答案即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/64e67f626854df2b130243b23d4b678f.js"></script><p><a href="https://codeforces.com/problemset/problem/739/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jzzhu and Sequences</title>
      <link href="/Jzzhu-and-Sequences/"/>
      <content type="html"><![CDATA[<p>Jzzhu has invented a kind of sequences, they meet the following property:<br><img src="A.PNG" alt="A"><br>You are given x and y, please calculate f<sub>n</sub> modulo 1000000007 (10<sup>9</sup> + 7).</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers x and y (|x|, |y| ≤ 10<sup>9</sup>). The second line contains a single integer n (1 ≤ n ≤ 2·10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output a single integer representing f<sub>n</sub> modulo 1000000007 (10<sup>9</sup> + 7).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 -1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000006</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, f<sub>2</sub> = f<sub>1</sub> + f<sub>3</sub>, 3 = 2 + f<sub>3</sub>, f<sub>3</sub> = 1.</p><p>In the second sample, f<sub>2</sub> =  - 1;  - 1 modulo (10<sup>9</sup> + 7) equals (10<sup>9</sup> + 6).</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入X跟Y作為一個數列的前兩項，並給你數列的規則，問你第N項對100000007取餘數後的值是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將規則用X跟Y繼續列舉，發現每6項數值會有一個循環，因此先將前6項計算好，再計算第N項是6項中的第幾項後就可以取餘數了，要注意的是餘數是負數的時候要加回正數。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/050a756b7c15a39d45e2148f120cc259.js"></script><p><a href="https://codeforces.com/problemset/problem/450/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> math </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Luxurious Houses</title>
      <link href="/Luxurious-Houses/"/>
      <content type="html"><![CDATA[<p>The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row.</p><p>Let’s enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number of floors in it is strictly greater than in all the houses with larger numbers. In other words, a house is luxurious if the number of floors in it is strictly greater than in all the houses, which are located to the right from it. In this task it is assumed that the heights of floors in the houses are the same.</p><p>The new architect is interested in n questions, i-th of them is about the following: “how many floors should be added to the i-th house to make it luxurious?” (for all i from 1 to n, inclusive). You need to help him cope with this task.</p><p>Note that all these questions are independent from each other — the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains a single number n (1 ≤ n ≤ 10<sup>5</sup>) — the number of houses in the capital of Berland.</p><p>The second line contains n space-separated positive integers h<sub>i (1 ≤ h<sub>i</sub> ≤ 10<sup>9</sup>), where hi equals the number of floors in the i-th house. </sub></p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub>, where number a<sub>i</sub> is the number of floors that need to be added to the house number i to make it luxurious. If the house is already luxurious and nothing needs to be added to it, then a<sub>i</sub> should be equal to zero.</p><p>All houses are numbered from left to right, starting from one.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 0 2 0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 1 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 0</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你N間房子的高度，從左到右。一間房子若是比他右邊所有的房子都要高的話就能稱為奢華，問你每一間房子各自若要變的奢華的話還要再增高多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>從最右邊開始，記錄到目前為止最高的高度，然後若是自己比最高的高度還矮或是一樣，就加高，不然不用加。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/50eceb9a682e44901b10ccabb961c6a8.js"></script><p><a href="https://codeforces.com/problemset/problem/581/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Game 23</title>
      <link href="/Game-23/"/>
      <content type="html"><![CDATA[<p>Polycarp plays “Game 23”. Initially he has a number n and his goal is to transform it to m. In one move, he can multiply n by 2 or multiply n by 3. He can perform any number of moves.</p><p>Print the number of moves needed to transform n<br>to m. Print -1 if it is impossible to do so.</p><p>It is easy to prove that any way to transform n to m contains the same number of moves (i.e. number of moves doesn’t depend on the way of transformation).</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line of the input contains two integers n and m (1≤n≤m≤5⋅108).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the number of moves to transform n to m, or -1 if there is no solution.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">120 51840</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">42 42</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48 72</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, the possible sequence of moves is: 120→240→720→1440→4320→12960→25920→51840. The are 7 steps in total.</p><p>In the second example, no moves are needed. Thus, the answer is 0.</p><p>In the third example, it is impossible to transform 48 to 72.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入n、m，你現在每一步可以將n乘以2或3，問你需要幾步可以將n變成m？不能的話輸出-1。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先判斷能不能n整除m，不能就輸出-1，可以的話直接除，然後將商質因數分解，看有幾個2跟3，有2跟3以外的因數就輸出-1，不然個數加起來就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/55eb8af27dbbcb1e6383f0c1fbe38cf1.js"></script><p><a href="https://chucs.github.io/site/">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Patrick and Shopping</title>
      <link href="/Patrick-and-Shopping/"/>
      <content type="html"><![CDATA[<p>Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d1 meter long road between his house and the first shop and a d2 meter long road between his house and the second shop. Also, there is a road of length d3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house.<br><img src="A.PNG" alt="A"><br>Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn’t mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains three integers d<sub>1</sub>, d<sub>2</sub>, d<sub>3</sub> (1 ≤ d<sub>1</sub>, d<sub>2</sub>, d<sub>3</sub> ≤ 10<sup>8</sup>) — the lengths of the paths.</p><blockquote><blockquote><p>● d<sub>1</sub> is the length of the path connecting Patrick’s house and the first shop.<br>● d<sub>2</sub> is the length of the path connecting Patrick’s house and the second shop.<br>● d<sub>3</sub> is the length of the path connecting both shops. </p></blockquote></blockquote><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum distance that Patrick will have to walk in order to visit both shops and return to his house.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 20 30</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">60</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first sample is shown on the picture in the problem statement. One of the optimal routes is: house -&gt; first -&gt; shop -&gt; second -&gt; shop house.</p><p>In the second sample one of the optimal routes is: house -&gt; first -&gt; shop -&gt; house -&gt; second -&gt; shop -&gt; house.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入家到商店1、家到商店2和商店1到商店2的距離，問你從家開始，去過兩間商店，在回到家中的最短距離是多少？可以重複經過同一條路或同一個點。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>比較繞一圈或不走其中一條路的走法哪個最短即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/6b0632575d93f2313d96708316709aa8.js"></script><p><a href="https://codeforces.com/problemset/problem/599/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hulk</title>
      <link href="/Hulk/"/>
      <content type="html"><![CDATA[<p>Dr. Bruce Banner hates his enemies (like others don’t). As we all know, he can barely talk when he turns into the incredible Hulk. That’s why he asked you to help him to express his feelings.</p><p>Hulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on…</p><p>For example if n = 1, then his feeling is “I hate it” or if n = 2 it’s “I hate that I love it”, and if n = 3 it’s “I hate that I love that I hate it” and so on.</p><p>Please help Dr. Banner.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line of the input contains a single integer n (1 ≤ n ≤ 100) — the number of layers of love and hate.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print Dr.Banner’s feeling in one line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate it</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate that I love it</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate that I love that I hate it</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入的數字n，依照n輸出指定層的字串，第一層是hate，第二層是love，第三層是hate，以此類推。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依照規則輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0ae912ae1970a1db2ecb903b3427de1c.js"></script><p><a href="https://codeforces.com/problemset/problem/705/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Metro</title>
      <link href="/Metro/"/>
      <content type="html"><![CDATA[<p>Alice has a birthday today, so she invited home her best friend Bob. Now Bob needs to find a way to commute to the Alice’s home.</p><p>In the city in which Alice and Bob live, the first metro line is being built. This metro line contains n<br>stations numbered from 1 to n. Bob lives near the station with number 1, while Alice lives near the station with number s. The metro line has two tracks. Trains on the first track go from the station 1 to the station n</p><p>and trains on the second track go in reverse direction. Just after the train arrives to the end of its track, it goes to the depot immediately, so it is impossible to travel on it after that.</p><p>Some stations are not yet open at all and some are only partially open — for each station and for each track it is known whether the station is closed for that track or not. If a station is closed for some track, all trains going in this track’s direction pass the station without stopping on it.</p><p>When the Bob got the information on opened and closed stations, he found that traveling by metro may be unexpectedly complicated. Help Bob determine whether he can travel to the Alice’s home by metro or he should search for some other transport.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and s (2≤s≤n≤1000) — the number of stations in the metro and the number of the station where Alice’s home is located. Bob lives at station 1.</p><p>Next lines describe information about closed and open stations.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (a<sub>i</sub>=0 or a<sub>i</sub>=1). If a<sub>i</sub>=1, then the i-th station is open on the first track (that is, in the direction of increasing station numbers). Otherwise the station is closed on the first track.</p><p>The third line contains n integers b<sub>1</sub>,b<sub>2</sub>,…,b<sub>n</sub> (b<sub>i</sub>=0 or b<sub>i</sub>=1). If b<sub>i</sub>=1, then the i-th station is open on the second track (that is, in the direction of decreasing station numbers). Otherwise the station is closed on the second track.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print “YES” (quotes for clarity) if Bob will be able to commute to the Alice’s home by metro and “NO” (quotes for clarity) otherwise.</p><p>You can print each letter in any case (upper or lower).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 1 1 1 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 4</span><br><span class="line">1 0 0 0 1</span><br><span class="line">0 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br><span class="line">0 1 1 1 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, all stations are opened, so Bob can simply travel to the station with number 3.</p><p>In the second example, Bob should travel to the station 5<br>first, switch to the second track and travel to the station 4 then.</p><p>In the third example, Bob simply can’t enter the train going in the direction of Alice’s home.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你兩條軌道各自會停靠的站點，一條只能往後，一條只能往前，問你能不能從第1站搭到第S站？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先看第一條能不能直達第S站，不能的話找第k站，第一條從第k站轉搭第二條到第S站。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/493c55ecd43681443a4363ceda9a1f69.js"></script><p><a href="https://codeforces.com/problemset/problem/1055/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>K-Dominant Character</title>
      <link href="/K-Dominant-Character/"/>
      <content type="html"><![CDATA[<p>You are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.</p><p>You have to find minimum k such that there exists at least one k-dominant character.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains string s consisting of lowercase Latin letters (1 ≤ |s| ≤ 100000).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print one number — the minimum value of k such that there exists at least one k-dominant character.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abacaba</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzzzz</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcde</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個字串，當所有長度為K的子字串都有至少一個共同字元c時，則c在此字串中稱為K-Dominant 。現在c未定，但至少要有一個c存在K-Dominant ，問你K最小可以是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法依照規則搜尋子字串長度。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a14ccf51ce05c20cd0948abbd3425b79.js"></script><p><a href="https://codeforces.com/problemset/problem/888/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
            <tag> two pointers </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Buggy Sorting</title>
      <link href="/Buggy-Sorting/"/>
      <content type="html"><![CDATA[<p>Little boy Valera studies an algorithm of sorting an integer array. After studying the theory, he went on to the practical tasks. As a result, he wrote a program that sorts an array of n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> in the non-decreasing order. The pseudocode of the program, written by Valera, is given below. The input of the program gets number n and array a.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loop integer variable i from 1 to n - 1</span><br><span class="line">    loop integer variable j from i to n - 1</span><br><span class="line">        if (aj &gt; aj + 1), then swap the values of elements aj and aj + 1</span><br></pre></td></tr></table></figure><p>But Valera could have made a mistake, because he hasn’t yet fully learned the sorting algorithm. If Valera made a mistake in his program, you need to give a counter-example that makes his program work improperly (that is, the example that makes the program sort the array not in the non-decreasing order). If such example for the given value of n doesn’t exist, print -1.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>You’ve got a single integer n (1 ≤ n ≤ 50) — the size of the sorted array.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n space-separated integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 100) — the counter-example, for which Valera’s algorithm won’t work correctly. If the counter-example that meets the described conditions is impossible to give, print -1.</p><p>If there are several counter-examples, consisting of n numbers, you are allowed to print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個排序法，目標是將陣列排序成非遞減的格式，但是這排序法有錯誤，現在輸入陣列長度，你是否能舉例出一個會排序錯誤的陣列？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>陣列從位置0排到最後，但是卻先移除位置0，因此長度在3以上時，最後一個一定移不到位置0，因此長度在3以上時將最後一個輸出最小的，其他情況輸出-1即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/bb7804303d64985fd6da2a32dcff7dfe.js"></script><p><a href="https://codeforces.com/problemset/problem/246/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Semifinals</title>
      <link href="/Semifinals/"/>
      <content type="html"><![CDATA[<p>Two semifinals have just been in the running tournament. Each semifinal had n participants. There are n participants advancing to the finals, they are chosen as follows: from each semifinal, we choose k people (0 ≤ 2k ≤ n) who showed the best result in their semifinals and all other places in the finals go to the people who haven’t ranked in the top k in their semifinal but got to the n - 2k of the best among the others.</p><p>The tournament organizers hasn’t yet determined the k value, so the participants want to know who else has any chance to get to the finals and who can go home.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (1 ≤ n ≤ 10<sup>5</sup>) — the number of participants in each semifinal.</p><p>Each of the next n lines contains two integers a<sub>i</sub> and b<sub>i</sub> (1 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ 10<sup>9</sup>) — the results of the i-th participant (the number of milliseconds he needs to cover the semifinals distance) of the first and second semifinals, correspondingly. All results are distinct. Sequences a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> and b<sub>1</sub>, b<sub>2</sub>, …, b<sub>n</sub> are sorted in ascending order, i.e. in the order the participants finished in the corresponding semifinal.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two strings consisting of n characters, each equals either “0” or “1”. The first line should correspond to the participants of the first semifinal, the second line should correspond to the participants of the second semifinal. The i-th character in the j-th line should equal “1” if the i-th participant of the j-th semifinal has any chances to advance to the finals, otherwise it should equal a “0”.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">9840 9920</span><br><span class="line">9860 9980</span><br><span class="line">9930 10020</span><br><span class="line">10040 10090</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1110</span><br><span class="line">1100</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">9900 9850</span><br><span class="line">9940 9930</span><br><span class="line">10000 10020</span><br><span class="line">10060 10110</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1100</span><br><span class="line">1100</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Consider the first sample. Each semifinal has 4 participants. The results of the first semifinal are 9840, 9860, 9930, 10040. The results of the second semifinal are 9920, 9980, 10020, 10090.</p><blockquote><blockquote><p>● If k = 0, the finalists are determined by the time only, so players 9840, 9860, 9920 and 9930 advance to the finals.<br>● If k = 1, the winners from both semifinals move to the finals (with results 9840 and 9920), and the other places are determined by the time (these places go to the sportsmen who run the distance in 9860 and 9930 milliseconds).<br>●If k = 2, then first and second places advance from each seminfial, these are participants with results 9840, 9860, 9920 and 9980 milliseconds. </p></blockquote></blockquote><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你兩次比賽的成績，兩邊可以各錄取K名進入決賽(0≤2K≤N)，剩下的名次用成績決定(不會有一樣的成績)，現在K未定，問你那些人是有機會進入決賽的？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>兩邊的前N/2名都有可能，剩下的名次則是到總成績的第N名有可能，將兩種綜合即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/aa4d5499ee399a951c3844b6cd5db293.js"></script><p><a href="https://codeforces.com/problemset/problem/378/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Towers</title>
      <link href="/Towers/"/>
      <content type="html"><![CDATA[<p>Little Vasya has received a young builder’s kit. The kit consists of several wooden bars, the lengths of all of them are known. The bars can be put one on the top of the other if their lengths are the same.</p><p>Vasya wants to construct the minimal number of towers from the bars. Help Vasya to use the bars in the best way possible.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains an integer N (1 ≤ N ≤ 1000) — the number of bars at Vasya’s disposal. The second line contains N space-separated integers l<sub>i</sub> — the lengths of the bars. All the lengths are natural numbers not exceeding 1000.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In one line output two numbers — the height of the largest tower and their total number. Remember that Vasya should use all the bars.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">6 5 6 7</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你N根木棒，長度一樣的會疊在一起，每一疊稱為一座塔，問你最高的塔是多高和總共有幾座塔？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>排序後計算每個數字各出現幾次，紀錄最大值；計算出現幾種數字。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fa84e180769bcd1b2ba6b72bd859c455.js"></script><p><a href="https://codeforces.com/problemset/problem/37/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lunch Rush</title>
      <link href="/Lunch-Rush/"/>
      <content type="html"><![CDATA[<p>Having written another programming contest, three Rabbits decided to grab some lunch. The coach gave the team exactly k time units for the lunch break.</p><p>The Rabbits have a list of n restaurants to lunch in: the i-th restaurant is characterized by two integers f<sub>i</sub> and t<sub>i</sub>. Value t<sub>i</sub> shows the time the Rabbits need to lunch in the i-th restaurant. If time t<sub>i</sub> exceeds the time k that the coach has given for the lunch break, then the Rabbits’ joy from lunching in this restaurant will equal f<sub>i</sub> - (t<sub>i</sub> - k). Otherwise, the Rabbits get exactly f<sub>i</sub> units of joy.</p><p>Your task is to find the value of the maximum joy the Rabbits can get from the lunch, depending on the restaurant. The Rabbits must choose exactly one restaurant to lunch in. Note that the joy value isn’t necessarily a positive value. </p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers — n (1 ≤ n ≤ 10<sup>4</sup>) and k (1 ≤ k ≤ 10<sup>9</sup>) — the number of restaurants in the Rabbits’ list and the time the coach has given them to lunch, correspondingly. Each of the next n lines contains two space-separated integers — f<sub>i</sub> (1 ≤ f<sub>i</sub> ≤ 10<sup>9</sup>) and ti (1 ≤ t<sub>i</sub> ≤ 10<sup>9</sup>) — the characteristics of the i-th restaurant.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print a single integer — the maximum joy value that the Rabbits will get from the lunch. </p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">3 3</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br><span class="line">5 8</span><br><span class="line">3 6</span><br><span class="line">2 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 5</span><br><span class="line">1 7</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有休息時間K可以去吃午餐，只能選一間餐廳，每間餐廳需花費t<sub>i</sub>時間吃飯，得到f<sub>i</sub>的快樂值，若是時間不夠的話則是得到f<sub>i</sub>-(t<sub>i</sub>-K)的快樂值，問你快樂值最大是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>根據公式紀錄最大值，要注意的是會超過int的值域以及有可能會有負數。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/912deec3e5ca92ecb803eaa07b4b6fef.js"></script><p><a href="https://chucs.github.io/site/">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fox And Snake</title>
      <link href="/Fox-And-Snake/"/>
      <content type="html"><![CDATA[<p>Fox Ciel starts to learn programming. The first task is drawing a fox! However, that turns out to be too hard for a beginner, so she decides to draw a snake instead.</p><p>A snake is a pattern on a n by m table. Denote c-th cell of r-th row as (r, c). The tail of the snake is located at (1, 1), then it’s body extends to (1, m), then goes down 2 rows to (3, m), then goes left to (3, 1) and so on.</p><p>Your task is to draw this snake for Fox Ciel: the empty cells should be represented as dot characters (‘.’) and the snake cells should be filled with number signs (‘#’).</p><p>Consider sample tests in order to understand the snake pattern.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line contains two integers: n and m (3 ≤ n, m ≤ 50).</p><p>n is an odd number.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output n lines. Each line should contain a string consisting of m characters. Do not output spaces.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">..#</span><br><span class="line">###</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">####</span><br><span class="line">...#</span><br><span class="line">####</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line">..#</span><br><span class="line">###</span><br><span class="line">#..</span><br><span class="line">###</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9 9</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#########</span><br><span class="line">........#</span><br><span class="line">#########</span><br><span class="line">#........</span><br><span class="line">#########</span><br><span class="line">........#</span><br><span class="line">#########</span><br><span class="line">#........</span><br><span class="line">#########</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入NxM的大小，請你依照蛇行的規則畫蛇出來。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>照規則畫。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0cd43d28896aa503e19becd092fef0bd.js"></script><p><a href="https://codeforces.com/problemset/problem/510/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LOVE A</title>
      <link href="/LOVE-A/"/>
      <content type="html"><![CDATA[<p>Alice has a string s. She really likes the letter “a”. She calls a string good if strictly more than half of the characters in that string are “a”s. For example “aaabb”, “axaa” are good strings, and “baca”, “awwwa”, “” (empty string) are not.</p><p>Alice can erase some characters from her string s. She would like to know what is the longest string remaining after erasing some characters (possibly zero) to get a good string. It is guaranteed that the string has at least one “a” in it, so the answer always exists.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a string s (1≤|s|≤50) consisting of lowercase English letters. It is guaranteed that there is at least one “a” in s.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer, the length of the longest good string that Alice can get after erasing some characters from s.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xaxxxxa</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaabaa</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, it’s enough to erase any four of the “x”s. The answer is 3 since that is the maximum number of characters that can remain.</p><p>In the second example, we don’t need to erase any characters.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>可以刪掉字元，問當前字串要有超過一半的字元是a的話最長是多長？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先計算a的數量，再取最長為2 * a - 1的長度即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/f14306201ff1412f10cfd80800e55d46.js"></script><p><a href="https://codeforces.com/contest/1146/problem/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> sortings </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Benches</title>
      <link href="/Benches/"/>
      <content type="html"><![CDATA[<p>There are n benches in the Berland Central park. It is known that ai people are currently sitting on the i-th bench. Another m people are coming to the park and each of them is going to have a seat on some bench out of n available.</p><p>Let k be the maximum number of people sitting on one bench after additional m people came to the park. Calculate the minimum possible k and the maximum possible k.</p><p>Nobody leaves the taken seat during the whole process.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (1≤n≤100) — the number of benches in the park.</p><p>The second line contains a single integer m (1≤m≤10000) — the number of people additionally coming to the park.</p><p>Each of the next n lines contains a single integer a<sub>i</sub> (1≤a<sub>i</sub>≤100) — the initial number of people on the i-th bench.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum possible k and the maximum possible k, where k is the maximum number of people sitting on one bench after additional m people came to the park.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">6</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 7</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">10</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15 15</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">1</span><br><span class="line">6</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6 12</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">7</span><br><span class="line">1</span><br><span class="line">6</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 13</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, each of four benches is occupied by a single person. The minimum k is 3. For example, it is possible to achieve if two newcomers occupy the first bench, one occupies the second bench, one occupies the third bench, and two remaining — the fourth bench. The maximum k is 7. That requires all six new people to occupy the same bench.</p><p>The second example has its minimum k equal to 15 and maximum k equal to 15, as there is just a single bench in the park and all 10 people will occupy it.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有n張椅子，上面各有ai個人，現在又來了m個人，問你所有人都坐上椅子後，最多人的椅子最少跟最多會有多少人？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先記錄原本最多人的椅子(假設有x人)，在加入m個人後，最多人的椅子最少不可能比原本最多的少(x)，最多就是m個人都做到原本最多人的椅子上(x+m)。因此用二分搜尋法搜尋x~x+m，紀錄最小值。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5aaf8dd05e85a842d69a5733a2277a67.js"></script><p><a href="https://codeforces.com/problemset/problem/1042/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Two Cakes</title>
      <link href="/Two-Cakes/"/>
      <content type="html"><![CDATA[<p>It’s New Year’s Eve soon, so Ivan decided it’s high time he started setting the table. Ivan has bought two cakes and cut them into pieces: the first cake has been cut into a pieces, and the second one — into b pieces.</p><p>Ivan knows that there will be n people at the celebration (including himself), so Ivan has set n plates for the cakes. Now he is thinking about how to distribute the cakes between the plates. Ivan wants to do it in such a way that all following conditions are met:</p><blockquote><blockquote><ol><li>Each piece of each cake is put on some plate;</li><li>Each plate contains at least one piece of cake;</li><li>No plate contains pieces of both cakes.</li></ol></blockquote></blockquote><p>To make his guests happy, Ivan wants to distribute the cakes in such a way that the minimum number of pieces on the plate is maximized. Formally, Ivan wants to know the maximum possible number x such that he can distribute the cakes according to the aforementioned conditions, and each plate will contain at least x pieces of cake.</p><p>Help Ivan to calculate this number x!</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains three integers n, a and b (1 ≤ a, b ≤ 100, 2 ≤ n ≤ a + b) — the number of plates, the number of pieces of the first cake, and the number of pieces of the second cake, respectively.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the maximum possible number x such that Ivan can distribute the cake in such a way that each plate will contain at least x pieces of cake.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 2 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 7 10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example there is only one way to distribute cakes to plates, all of them will have 1 cake on it.</p><p>In the second example you can have two plates with 3 and 4 pieces of the first cake and two plates both with 5 pieces of the second cake. Minimal number of pieces is 3.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有兩大塊蛋糕各自分成a片和b片，要分給n個人，有3個條件，(1)每片蛋糕都要分出去；(2)每個人至少有1片蛋糕；(3)一個人只能有一種蛋糕。問你被分到最少片蛋糕的那個人，他最多能拿到幾片蛋糕？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為一塊蛋糕最多分成100片，因此用二分搜尋找1~100，記住最大值輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/514ffd6016100eaa0ee60e4e42edc292.js"></script><p><a href="https://codeforces.com/problemset/problem/911/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sale</title>
      <link href="/Sale/"/>
      <content type="html"><![CDATA[<p>Once Bob got to a sale of old TV sets. There were n TV sets at that sale. TV set with index i costs ai bellars. Some TV sets have a negative price — their owners are ready to pay Bob if he buys their useless apparatus. Bob can «buy» any TV sets he wants. Though he’s very strong, Bob can carry at most m TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers n and m (1 ≤ m ≤ n ≤ 100) — amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains n space-separated integers ai ( - 1000 ≤ a<sub>i</sub> ≤ 1000) — prices of the TV sets.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the only number — the maximum sum of money that Bob can earn, given that he can carry at most m TV sets.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">-6 0 35 -2 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">7 0 0 -7</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有n個商品及售價，你最多拿得動m個，問你最多可以賺多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為只有負的可以賺，所以從小的開始拿最多m個負的累加即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/31b38649f55b7f93e7e46ccafe952bee.js"></script><p><a href="https://codeforces.com/problemset/problem/34/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Dragons</title>
      <link href="/Dragons/"/>
      <content type="html"><![CDATA[<p>Kirito is stuck on a level of the MMORPG he is playing now. To move on in the game, he’s got to defeat all n dragons that live on this level. Kirito and the dragons have strength, which is represented by an integer. In the duel between two opponents the duel’s outcome is determined by their strength. Initially, Kirito’s strength equals s.</p><p>If Kirito starts duelling with the i-th (1 ≤ i ≤ n) dragon and Kirito’s strength is not greater than the dragon’s strength x<sub>i</sub>, then Kirito loses the duel and dies. But if Kirito’s strength is greater than the dragon’s strength, then he defeats the dragon and gets a bonus strength increase by y<sub>i</sub>.</p><p>Kirito can fight the dragons in any order. Determine whether he can move on to the next level of the game, that is, defeat all dragons without a single loss.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers s and n (1 ≤ s ≤ 10<sup>4</sup>, 1 ≤ n ≤ 10<sup>3</sup>). Then n lines follow: the i-th line contains space-separated integers xi and yi (1 ≤ x<sub>i</sub> ≤ 10<sup>4</sup>, 0 ≤ y<sub>i</sub> ≤ 10<sup>4</sup>) — the i-th dragon’s strength and the bonus for defeating it.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>On a single line print “YES” (without the quotes), if Kirito can move on to the next level and print “NO” (without the quotes), if he can’t.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 2</span><br><span class="line">1 99</span><br><span class="line">100 0</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 1</span><br><span class="line">100 100</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample Kirito’s strength initially equals 2. As the first dragon’s strength is less than 2, Kirito can fight it and defeat it. After that he gets the bonus and his strength increases to 2 + 99 = 101. Now he can defeat the second dragon and move on to the next level.</p><p>In the second sample Kirito’s strength is too small to defeat the only dragon and win.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一開始的力量跟每頭龍的力量和打倒後增加的力量，當你的力量大於龍的力量時可以打倒他並增加力量，問你能不能打倒所有龍？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>從力量小的龍開始打，能打到最後就可以，否則不行。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/01d749d51e34af8688dac86000dff39e.js"></script><p><a href="https://codeforces.com/problemset/problem/230/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Months and Years</title>
      <link href="/Months-and-Years/"/>
      <content type="html"><![CDATA[<p>Everybody in Russia uses Gregorian calendar. In this calendar there are 31 days in January, 28 or 29 days in February (depending on whether the year is leap or not), 31 days in March, 30 days in April, 31 days in May, 30 in June, 31 in July, 31 in August, 30 in September, 31 in October, 30 in November, 31 in December.</p><p>A year is leap in one of two cases: either its number is divisible by 4, but not divisible by 100, or is divisible by 400. For example, the following years are leap: 2000, 2004, but years 1900 and 2018 are not leap.</p><p>In this problem you are given n (1 ≤ n ≤ 24) integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub>, and you have to check if these integers could be durations in days of n consecutive months, according to Gregorian calendar. Note that these months could belong to several consecutive years. In other words, check if there is a month in some year, such that its duration is a<sub>1</sub> days, duration of the next month is a<sub>2</sub> days, and so on.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains single integer n (1 ≤ n ≤ 24) — the number of integers.</p><p>The second line contains n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (28 ≤ a<sub>i</sub> ≤ 31) — the numbers you are to check.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>If there are several consecutive months that fit the sequence, print “YES” (without quotes). Otherwise, print “NO” (without quotes).</p><p>You can print each letter in arbitrary case (small or large).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">31 31 30 31</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">30 30</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">29 31 30 31 30</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">31 28 30</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">31 31 28</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example the integers can denote months July, August, September and October.</p><p>In the second example the answer is no, because there are no two consecutive months each having 30 days.</p><p>In the third example the months are: February (leap year) — March — April – May — June.</p><p>In the fourth example the number of days in the second month is 28, so this is February. March follows February and has 31 days, but not 30, so the answer is NO.</p><p>In the fifth example the months are: December — January — February (non-leap year).</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個連續的月份天數，問你這個連續的月份有沒有可能出現？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先創一個正常年份的天數陣列，接著是閏年的2月處理，因為只輸入最多24個月(2年)，因此不可能出現兩個閏年，因此紀錄29天的次數，超過1次就不可能。其他情況可以把閏年順移到平年，因此直接把29當28處理，接著將所有月份當起點試試能不能滿足輸入即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a21f1a4f07f6179796e9e9878219b838.js"></script><p><a href="https://codeforces.com/problemset/problem/899/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lara Croft and the New Game</title>
      <link href="/Lara-Croft-and-the-New-Game/"/>
      <content type="html"><![CDATA[<p>You might have heard about the next game in Lara Croft series coming out this year. You also might have watched its trailer. Though you definitely missed the main idea about its plot, so let me lift the veil of secrecy.</p><p>Lara is going to explore yet another dangerous dungeon. Game designers decided to use good old 2D environment. The dungeon can be represented as a rectangle matrix of n rows and m columns. Cell (x, y) is the cell in the x-th row in the y-th column. Lara can move between the neighbouring by side cells in all four directions.</p><p>Moreover, she has even chosen the path for herself to avoid all the traps. She enters the dungeon in cell (1, 1), that is top left corner of the matrix. Then she goes down all the way to cell (n, 1) — the bottom left corner. Then she starts moving in the snake fashion — all the way to the right, one cell up, then to the left to the cell in 2-nd column, one cell up. She moves until she runs out of non-visited cells. n and m given are such that she always end up in cell (1, 2).</p><p>Lara has already moved to a neighbouring cell k times. Can you determine her current position?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line contains three integers n, m and k (2 ≤ n, m ≤ 10<sup>9</sup>, n is always even, 0 ≤ k &lt; n·m). Note that k doesn’t fit into 32-bit integer type!</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the cell (the row and the column where the cell is situated) where Lara ends up after she moves k times.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3 0</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3 11</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3 11</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Here is her path on matrix 4 by 3:<br><img src="A.PNG" alt="A"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個矩形棋盤，走法是先走最左邊一排，再蛇行往上。問你在第k步時的座標是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先計算是不是在最左邊那排，不是的話再計算他從最下面往上走了幾排又幾格。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/86b71f83f8144585dee9e5ae223c527b.js"></script><p><a href="https://codeforces.com/problemset/problem/976/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 簡單 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Army</title>
      <link href="/Army/"/>
      <content type="html"><![CDATA[<p>The Berland Armed Forces System consists of n ranks that are numbered using natural numbers from 1 to n, where 1 is the lowest rank and n is the highest rank.</p><p>One needs exactly di years to rise from rank i to rank i + 1. Reaching a certain rank i having not reached all the previous i - 1 ranks is impossible.</p><p>Vasya has just reached a new rank of a, but he dreams of holding the rank of b. Find for how many more years Vasya should serve in the army until he can finally realize his dream.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first input line contains an integer n (2 ≤ n ≤ 100). The second line contains n - 1 integers d<sub>i</sub> (1 ≤ d<sub>i</sub> ≤ 100). The third input line contains two integers a and b (1 ≤ a &lt; b ≤ n). The numbers on the lines are space-separated.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the single number which is the number of years that Vasya needs to rise from rank a to rank b.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5 6</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5 6</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你所有階級升級的需要年數，問你從a階升到b階要多少年？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>直接累加。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c83a93cdf39d598e109761dbb0bd09f1.js"></script><p><a href="https://codeforces.com/problemset/problem/38/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Frog Jumping</title>
      <link href="/Frog-Jumping/"/>
      <content type="html"><![CDATA[<p>A frog is currently at the point 0 on a coordinate axis Ox. It jumps by the following algorithm: the first jump is a units to the right, the second jump is b units to the left, the third jump is a units to the right, the fourth jump is b units to the left, and so on.</p><p>Formally:</p><blockquote><blockquote><p>● if the frog has jumped an even number of times (before the current jump), it jumps from its current position x to position x+a;<br>● otherwise it jumps from its current position x to position x−b.<br>Your task is to calculate the position of the frog after k jumps.</p></blockquote></blockquote><p>But… One more thing. You are watching t different frogs so you have to answer t independent queries.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains one integer t (1≤t≤1000) — the number of queries.</p><p>Each of the next t lines contain queries (one query per line).</p><p>The query is described as three space-separated integers a,b,k (1≤a,b,k≤10<sup>9</sup>) — the lengths of two types of jumps and the number of jumps, respectively.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print t integers. The i-th integer should be the answer for the i-th query.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">5 2 3</span><br><span class="line">100 1 4</span><br><span class="line">1 10 5</span><br><span class="line">1000000000 1 6</span><br><span class="line">1 1 1000000000</span><br><span class="line">1 1 999999999</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">198</span><br><span class="line">-17</span><br><span class="line">2999999997</span><br><span class="line">0</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first query frog jumps 5 to the right, 2 to the left and 5 to the right so the answer is 5−2+5=8.</p><p>In the second query frog jumps 100 to the right, 1 to the left, 100 to the right and 1 to the left so the answer is 100−1+100−1=198.</p><p>In the third query the answer is 1−10+1−10+1=−17.</p><p>In the fourth query the answer is 10<sup>9</sup>−1+10<sup>9</sup>−1+10<sup>9</sup>−1=2999999997.</p><p>In the fifth query all frog’s jumps are neutralized by each other so the answer is 0.</p><p>The sixth query is the same as the fifth but without the last jump so the answer is 1.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>青蛙第一次會向右跳a，第二次會向右跳b，問你跳k伺候青蛙位在多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>兩次一組，往右跳a-b。因此偶數就直接算有幾組，奇數就再多加一次往右。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c8eb39f4bd6f8f38e7543246ec609cf9.js"></script><p><a href="https://codeforces.com/problemset/problem/1077/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Magnets</title>
      <link href="/Magnets/"/>
      <content type="html"><![CDATA[<p>Mad scientist Mike entertains himself by arranging rows of dominoes. He doesn’t need dominoes, though: he uses rectangular magnets instead. Each magnet has two poles, positive (a “plus”) and negative (a “minus”). If two magnets are put together at a close distance, then the like poles will repel each other and the opposite poles will attract each other.</p><p>Mike starts by laying one magnet horizontally on the table. During each following step Mike adds one more magnet horizontally to the right end of the row. Depending on how Mike puts the magnet on the table, it is either attracted to the previous one (forming a group of multiple magnets linked together) or repelled by it (then Mike lays this magnet at some distance to the right from the previous one). We assume that a sole magnet not linked to others forms a group of its own.<br><img src="A.PNG" alt="A"><br>Mike arranged multiple magnets in a row. Determine the number of groups that the magnets formed.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains an integer n (1 ≤ n ≤ 100000) — the number of magnets. Then n lines follow. The i-th line (1 ≤ i ≤ n) contains either characters “01”, if Mike put the i-th magnet in the “plus-minus” position, or characters “10”, if Mike put the magnet in the “minus-plus” position.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>On the single line of the output print the number of groups of magnets.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">10</span><br><span class="line">01</span><br><span class="line">10</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">01</span><br><span class="line">01</span><br><span class="line">10</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first testcase corresponds to the figure. The testcase has three groups consisting of three, one and two magnets.</p><p>The second testcase has two groups, each consisting of two magnets.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N段的磁鐵，相連的可能會吸引在一起，問最後排成一列的磁鐵有幾段？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>輸入時判斷跟前一個是否一樣，不一樣的不會吸在一起，段數加1。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/7a91611f2f7f3efad84d67e8014ab433.js"></script><p><a href="https://codeforces.com/problemset/problem/344/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Anton and Polyhedrons</title>
      <link href="/Anton-and-Polyhedrons/"/>
      <content type="html"><![CDATA[<p>Anton’s favourite geometric figures are regular polyhedrons. Note that there are five kinds of regular polyhedrons:</p><blockquote><blockquote><p>● Tetrahedron. Tetrahedron has 4 triangular faces.<br>● Cube. Cube has 6 square faces.<br>● Octahedron. Octahedron has 8 triangular faces.<br>● Dodecahedron. Dodecahedron has 12 pentagonal faces.<br>● Icosahedron. Icosahedron has 20 triangular faces.<br>All five kinds of polyhedrons are shown on the picture below:<br><img src="A.PNG" alt="A"><br>Anton has a collection of n polyhedrons. One day he decided to know, how many faces his polyhedrons have in total. Help Anton and find this number!</p></blockquote></blockquote><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains a single integer n (1 ≤ n ≤ 200 000) — the number of polyhedrons in Anton’s collection.<br>Each of the following n lines of the input contains a string s<sub>i</sub> — the name of the i-th polyhedron in Anton’s collection.<br>The string can look like this:</p><blockquote><blockquote><p>● “Tetrahedron” (without quotes), if the i-th polyhedron in Anton’s collection is a tetrahedron.<br>● “Cube” (without quotes), if the i-th polyhedron in Anton’s collection is a cube.<br>● “Octahedron” (without quotes), if the i-th polyhedron in Anton’s collection is an octahedron.<br>● “Dodecahedron” (without quotes), if the i-th polyhedron in Anton’s collection is a dodecahedron.<br>● “Icosahedron” (without quotes), if the i-th polyhedron in Anton’s collection is an icosahedron.</p></blockquote></blockquote><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output one number — the total number of faces in all the polyhedrons in Anton’s collection.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">Icosahedron</span><br><span class="line">Cube</span><br><span class="line">Tetrahedron</span><br><span class="line">Dodecahedron</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">42</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">Dodecahedron</span><br><span class="line">Octahedron</span><br><span class="line">Octahedron</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">28</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample Anton has one icosahedron, one cube, one tetrahedron and one dodecahedron. Icosahedron has 20 faces, cube has 6faces, tetrahedron has 4 faces and dodecahedron has 12 faces. In total, they have 20 + 6 + 4 + 12 = 42 faces.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>計算輸入的多面體總共面數是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>根據輸入的字串累加對應的面即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/549840b54864ea08c6b80c319837adee.js"></script><p><a href="https://codeforces.com/problemset/problem/785/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> 新手 </tag>
            
            <tag> string </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Eugeny and Play List</title>
      <link href="/Eugeny-and-Play-List/"/>
      <content type="html"><![CDATA[<p>Eugeny loves listening to music. He has n songs in his play list. We know that song number i has the duration of t<sub>i</sub> minutes. Eugeny listens to each song, perhaps more than once. He listens to song number i c<sub>i</sub> times. Eugeny’s play list is organized as follows: first song number 1 plays c<sub>1</sub> times, then song number 2 plays c<sub>2</sub> times, …, in the end the song number n plays cn times.</p><p>Eugeny took a piece of paper and wrote out m moments of time when he liked a song. Now for each such moment he wants to know the number of the song that played at that moment. The moment x means that Eugeny wants to know which song was playing during the x-th minute of his listening to the play list.</p><p>Help Eugeny and calculate the required numbers of songs.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n, m (1 ≤ n, m ≤ 10<sup>5</sup>). The next n lines contain pairs of integers. The i-th line contains integers c<sub>i</sub>, t<sub>i</sub> (1 ≤ c<sub>i</sub>, t<sub>i</sub> ≤ 10<sup>9</sup>) — the description of the play list. It is guaranteed that the play list’s total duration doesn’t exceed 10<sup>9</sup>.</p><p>The next line contains m positive integers v<sub>1</sub>, v<sub>2</sub>, …, v<sub>m</sub>, that describe the moments Eugeny has written out. It is guaranteed that there isn’t such moment of time v<sub>i</sub>, when the music doesn’t play any longer. It is guaranteed that v<sub>i</sub> &lt; v<sub>i</sub> + 1 (i &lt; m).</p><p>The moment of time v<sub>i</sub> means that Eugeny wants to know which song was playing during the v<sub>i</sub>-th munite from the start of listening to the playlist.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print m integers — the i-th number must equal the number of the song that was playing during the v<sub>i</sub>-th minute after Eugeny started listening to the play list.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">2 8</span><br><span class="line">1 16</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4 9</span><br><span class="line">1 2</span><br><span class="line">2 1</span><br><span class="line">1 1</span><br><span class="line">2 2</span><br><span class="line">1 2 3 4 5 6 7 8 9</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">4</span><br><span class="line">4</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有n首歌，每首歌會撥放ci次，每次ti分鐘長，當聽到喜歡的歌時會做下筆記。現在有m次做下筆記的時間，問你這m次分別是第幾首歌？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先做出每首歌的累加長度陣列，再對每次的筆記在陣列中做二分搜尋即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a131929a6eff93a0bb4e3e48f44ce349.js"></script><p><a href="https://codeforces.com/problemset/problem/302/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Let&#39;s Watch Football</title>
      <link href="/Let-s-Watch-Football/"/>
      <content type="html"><![CDATA[<p>Valeric and Valerko missed the last Euro football game, so they decided to watch the game’s key moments on the Net. They want to start watching as soon as possible but the connection speed is too low. If they turn on the video right now, it will “hang up” as the size of data to watch per second will be more than the size of downloaded data per second.</p><p>The guys want to watch the whole video without any pauses, so they have to wait some integer number of seconds for a part of the video to download. After this number of seconds passes, they can start watching. Waiting for the whole video to download isn’t necessary as the video can download after the guys started to watch.</p><p>Let’s suppose that video’s length is c seconds and Valeric and Valerko wait t seconds before the watching. Then for any moment of time t<sub>0</sub>, t ≤ t<sub>0</sub> ≤ c + t, the following condition must fulfill: the size of data received in t<sub>0</sub> seconds is not less than the size of data needed to watch t<sub>0</sub> - t seconds of the video.</p><p>Of course, the guys want to wait as little as possible, so your task is to find the minimum integer number of seconds to wait before turning the video on. The guys must watch the video without pauses.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains three space-separated integers a, b and c (1 ≤ a, b, c ≤ 1000, a &gt; b). The first number (a) denotes the size of data needed to watch one second of the video. The second number (b) denotes the size of data Valeric and Valerko can download from the Net per second. The third number (c) denotes the video’s length in seconds.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single number — the minimum integer number of seconds that Valeric and Valerko must wait to watch football without pauses.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 3 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13 12 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample video’s length is 1 second and it is necessary 4 units of data for watching 1 second of video, so guys should download 4 · 1 = 4 units of data to watch the whole video. The most optimal way is to wait 3 seconds till 3 units of data will be downloaded and then start watching. While guys will be watching video 1 second, one unit of data will be downloaded and Valerik and Valerko will have 4 units of data by the end of watching. Also every moment till the end of video guys will have more data then necessary for watching.</p><p>In the second sample guys need 2 · 10 = 20 units of data, so they have to wait 5 seconds and after that they will have 20 units before the second second ends. However, if guys wait 4 seconds, they will be able to watch first second of video without pauses, but they will download 18 units of data by the end of second second and it is less then necessary.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在想看網路影片，但是撥放需要的流量(每秒A)比下載需要的流量(每秒B)還大，但是他們可以先等t秒，然後再開始看總長C秒的影片，問你t最少是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>要找的是當(A<em>C &lt;= B</em> (C + t))的最小t，因此用二分搜尋找0~(A * C / B + 1)就好。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0d3a4bd6acd4ec4bf08cf6f7bb206f7c.js"></script><p><a href="https://codeforces.com/problemset/problem/195/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Watering System</title>
      <link href="/Watering-System/"/>
      <content type="html"><![CDATA[<p>Arkady wants to water his only flower. Unfortunately, he has a very poor watering system that was designed for n flowers and so it looks like a pipe with n holes. Arkady can only use the water that flows from the first hole.</p><p>Arkady can block some of the holes, and then pour A liters of water into the pipe. After that, the water will flow out from the non-blocked holes proportionally to their sizes s<sub>1</sub>,s<sub>2</sub>,…,s<sub>n</sub>. In other words, if the sum of sizes of non-blocked holes is S, and the i-th hole is not blocked, (s<sub>i</sub>*A)/S liters of water will flow out of it.</p><p>What is the minimum number of holes Arkady should block to make at least B liters of water flow out of the first hole?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains three integers n, A, B (1≤n≤100000, 1≤B≤A≤10<sup>4</sup>) — the number of holes, the volume of water Arkady will pour into the system, and the volume he wants to get out of the first hole.</p><p>The second line contains n integers s<sub>1</sub>,s<sub>2</sub>,…,s<sub>n</sub> (1≤s<sub>i</sub>≤10<sup>4</sup>) — the sizes of the holes.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the number of holes Arkady should block.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 10 3</span><br><span class="line">2 2 2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 80 20</span><br><span class="line">3 2 1 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 10 10</span><br><span class="line">1000 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example Arkady should block at least one hole. After that, (10*2)/6≈3.333 liters of water will flow out of the first hole, and that suits Arkady.</p><p>In the second example even without blocking any hole, (80*3)/10=24 liters will flow out of the first hole, that is not less than 20.</p><p>In the third example Arkady has to block all holes except the first to make all water flow out of the first hole.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有A公升的水，會流到n個洞中，每個洞的流量會根據佔洞口的總尺寸比例而佔據等比例的流量，現在問你假設1號洞要流過B公升以上的水時，最少要把幾個洞堵起來？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>為了讓1號洞的流量上升，就必須要把其他洞堵起來，而堵的洞愈大，就會因為佔總面積愈大上升的愈多，因此將2~n號洞排序後由大的開始堵。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/90d9bdcc8d2015c0ddf60c339600b94f.js"></script><p><a href="https://codeforces.com/problemset/problem/967/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nastya and an Array</title>
      <link href="/Nastya-and-an-Array/"/>
      <content type="html"><![CDATA[<p>Nastya owns too many arrays now, so she wants to delete the least important of them. However, she discovered that this array is magic! Nastya now knows that the array has the following properties:</p><p>In one second we can add an arbitrary (possibly negative) integer to all elements of the array that are not equal to zero.<br>When all elements of the array become equal to zero, the array explodes.<br>Nastya is always busy, so she wants to explode the array as fast as possible. Compute the minimum time in which the array can be exploded.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (1 ≤ n ≤ 10<sup>5</sup>) — the size of the array.</p><p>The second line contains n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> ( - 10<sup>5</sup> ≤ a<sub>i<sub> ≤ 10<sup>5</sup>) — the elements of the array.</sub></sub></p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the minimum number of seconds needed to make all elements of the array equal to zero.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2 0 -1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">5 -6 -5 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example you can add  - 1 to all non-zero elements in one second and make them equal to zero.</p><p>In the second example you can add  - 2 on the first second, then the array becomes equal to [0, 0,  - 3]. On the second second you can add 3 to the third (the only non-zero) element.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在一次行動可以將一個陣列的非0數字都加上某個數字，問你需要幾次行動才能將陣列全部歸0？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>題目等於是判斷現在陣列裡面有幾種數字，因此將陣列排序後，判斷非0的數字有幾種。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/7560d8637db8515e9a9320738b5bcace.js"></script><p><a href="https://codeforces.com/problemset/problem/992/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ilya and Bank Account</title>
      <link href="/Ilya-and-Bank-Account/"/>
      <content type="html"><![CDATA[<p>Ilya is a very clever lion, he lives in an unusual city ZooVille. In this city all the animals have their rights and obligations. Moreover, they even have their own bank accounts. The state of a bank account is an integer. The state of a bank account can be a negative number. This means that the owner of the account owes the bank money.</p><p>Ilya the Lion has recently had a birthday, so he got a lot of gifts. One of them (the gift of the main ZooVille bank) is the opportunity to delete the last digit or the digit before last from the state of his bank account no more than once. For example, if the state of Ilya’s bank account is -123, then Ilya can delete the last digit and get his account balance equal to -12, also he can remove its digit before last and get the account balance equal to -13. Of course, Ilya is permitted not to use the opportunity to delete a digit from the balance.</p><p>Ilya is not very good at math, and that’s why he asks you to help him maximize his bank account. Find the maximum state of the bank account that can be obtained using the bank’s gift.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The single line contains integer n (10 ≤ |n| ≤ 10<sup>9</sup>) — the state of Ilya’s bank account.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print an integer — the maximum state of the bank account that Ilya can get.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2230</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2230</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-100003</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-10000</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first test sample Ilya doesn’t profit from using the present.</p><p>In the second test sample you can delete digit 1 and get the state of the account equal to 0.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在可以將一個數字的最後一位或最後第二位去掉，問你最後數字最大的可能性是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>大於0的就不用去掉了，不會比較大；負的就兩種都試，挑大的。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/aedaa10ae14ccf681566a4ffaaf98a53.js"></script><p><a href="https://codeforces.com/problemset/problem/313/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Presents</title>
      <link href="/Presents/"/>
      <content type="html"><![CDATA[<p>Little Petya very much likes gifts. Recently he has received a new laptop as a New Year gift from his mother. He immediately decided to give it to somebody else as what can be more pleasant than giving somebody gifts. And on this occasion he organized a New Year party at his place and invited n his friends there.</p><p>If there’s one thing Petya likes more that receiving gifts, that’s watching others giving gifts to somebody else. Thus, he safely hid the laptop until the next New Year and made up his mind to watch his friends exchanging gifts while he does not participate in the process. He numbered all his friends with integers from 1 to n. Petya remembered that a friend number i gave a gift to a friend number p<sub>i</sub>. He also remembered that each of his friends received exactly one gift.</p><p>Now Petya wants to know for each friend i the number of a friend who has given him a gift.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains one integer n (1 ≤ n ≤ 100) — the quantity of friends Petya invited to the party. The second line contains n space-separated integers: the i-th number is p<sub>i</sub> — the number of a friend who gave a gift to friend number i. It is guaranteed that each friend received exactly one gift. It is possible that some friends do not share Petya’s ideas of giving gifts to somebody else. Those friends gave the gifts to themselves.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n space-separated integers: the i-th number should equal the number of the friend who gave a gift to friend number i.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2 3 4 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 1 2 3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 3 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3 2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>每個人都會送禮給人，可以送給自己，並保證每個人都會收到一份禮物，現在問收到的禮物是誰送的？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>創一個陣列紀錄來源就好。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/6781fdcf78ff6632f995a1b145d9bb3e.js"></script><p><a href="https://codeforces.com/problemset/problem/136/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Squares and Segments</title>
      <link href="/Squares-and-Segments/"/>
      <content type="html"><![CDATA[<p>Little Sofia is in fourth grade. Today in the geometry lesson she learned about segments and squares. On the way home, she decided to draw n squares in the snow with a side length of 1. For simplicity, we assume that Sofia lives on a plane and can draw only segments of length 1, parallel to the coordinate axes, with vertices at integer points.</p><p>In order to draw a segment, Sofia proceeds as follows. If she wants to draw a vertical segment with the coordinates of the ends (x,y)and (x,y+1). Then Sofia looks if there is already a drawn segment with the coordinates of the ends (x′,y) and (x′,y+1) for some x′. If such a segment exists, then Sofia quickly draws a new segment, using the old one as a guideline. If there is no such segment, then Sofia has to take a ruler and measure a new segment for a long time. Same thing happens when Sofia wants to draw a horizontal segment, but only now she checks for the existence of a segment with the same coordinates x, x+1 and the differing coordinate y.</p><a id="more"></a><p>For example, if Sofia needs to draw one square, she will have to draw two segments using a ruler:<br><img src="A.png" alt="A"><br>After that, she can draw the remaining two segments, using the first two as a guide:<br><img src="B.PNG" alt="B"><br>If Sofia needs to draw two squares, she will have to draw three segments using a ruler:<br><img src="C.PNG" alt="C"><br>After that, she can draw the remaining four segments, using the first three as a guide:<br><img src="D.PNG" alt="D"><br>Sofia is in a hurry, so she wants to minimize the number of segments that she will have to draw with a ruler without a guide. Help her find this minimum number.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line of input contains a single integer n (1≤n≤10<sup>9</sup>), the number of squares that Sofia wants to draw.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print single integer, the minimum number of segments that Sofia will have to draw with a ruler without a guide in order to draw n squares in the manner described above.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在可以用手畫長度為1的垂直或水平線段，並且畫了之後可以用工具複製它的平行線段，當現在要畫n個正方形的時候問你最少需要用手畫幾條線段？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>可以用二分搜尋法或是用數學方法求解。</p><p>二分搜尋法:<br>先求得𝐾=2⌈√𝑛⌉，即是搜尋上限，接著以二分搜尋法搜尋0~K，mid為偶數時最多有個(𝑚𝑖𝑑/2)<sup>2</sup>方形，奇數時最多有個𝑚𝑖𝑑/2×(𝑚𝑖𝑑+1)/2方形。</p><p>數學方法:<br>線段跟方形的增加關係如下圖，因此題測資不夠大，可以直接硬解。<br><img src="E.png" alt="E"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/040f422ce2524c8cbb5ca11da07ec0e4.js"></script><p><a href="https://codeforces.com/problemset/problem/1099/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> math </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Interesting drink</title>
      <link href="/Interesting-drink/"/>
      <content type="html"><![CDATA[<p>Vasiliy likes to rest after a hard work, so you may often meet him in some bar nearby. As all programmers do, he loves the famous drink “Beecola”, which can be bought in n different shops in the city. It’s known that the price of one bottle in the shop i is equal to x<sub>i</sub> coins.</p><p>Vasiliy plans to buy his favorite drink for q consecutive days. He knows, that on the i-th day he will be able to spent m<sub>i</sub> coins. Now, for each of the days he want to know in how many different shops he can buy a bottle of “Beecola”.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains a single integer n (1 ≤ n ≤ 100 000) — the number of shops in the city that sell Vasiliy’s favourite drink.</p><p>The second line contains n integers xi (1 ≤ x<sub>i</sub> ≤ 100 000) — prices of the bottles of the drink in the i-th shop.</p><p>The third line contains a single integer q (1 ≤ q ≤ 100 000) — the number of days Vasiliy plans to buy the drink.</p><p>Then follow q lines each containing one integer mi (1 ≤ m<sub>i</sub> ≤ 10<sup>9</sup>) — the number of coins Vasiliy can spent on the i-th day.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print q integers. The i-th of them should be equal to the number of shops where Vasiliy will be able to buy a bottle of the drink on the i-th day.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 10 8 6 11</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">10</span><br><span class="line">3</span><br><span class="line">11</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>On the first day, Vasiliy won’t be able to buy a drink in any of the shops.</p><p>On the second day, Vasiliy can buy a drink in the shops 1, 2, 3 and 4.</p><p>On the third day, Vasiliy can buy a drink only in the shop number 1.</p><p>Finally, on the last day Vasiliy can buy a drink in any shop.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有n間商店，各自賣蜜蜂可樂xi元，你知道你接下來q天會各自有mi元，沒花完不會累積，問每一天有幾間商店是買得起的？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先將n間商店依售價從小排到大，接下來輸入每個mi時做二分搜尋法即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a67e4431ea72f8dae5ebc9b935fa6b50.js"></script><p><a href="https://codeforces.com/problemset/problem/706/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sushi for Two</title>
      <link href="/Sushi-for-Two/"/>
      <content type="html"><![CDATA[<p>Arkady invited Anna for a dinner to a sushi restaurant. The restaurant is a bit unusual: it offers n pieces of sushi aligned in a row, and a customer has to choose a continuous subsegment of these sushi to buy.</p><p>The pieces of sushi are of two types: either with tuna or with eel. Let’s denote the type of the i-th from the left sushi as t<sub>i</sub>, where t<sub>i</sub>=1 means it is with tuna, and t<sub>i</sub>=2 means it is with eel.</p><p>Arkady does not like tuna, Anna does not like eel. Arkady wants to choose such a continuous subsegment of sushi that it has equal number of sushi of each type and each half of the subsegment has only sushi of one type. For example, subsegment [2,2,2,1,1,1] is valid, but subsegment [1,2,1,2,1,2] is not, because both halves contain both types of sushi.</p><p>Find the length of the longest continuous subsegment of sushi Arkady can buy.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (2≤n≤100000) — the number of pieces of sushi.</p><p>The second line contains nintegers t<sub>1</sub>, t<sub>2</sub>, …, t<sub>n</sub> (t<sub>i</sub>=1, denoting a sushi with tuna or t<sub>i</sub>=2, denoting a sushi with eel), representing the types of sushi from left to right.</p><p>It is guaranteed that there is at least one piece of sushi of each type. Note that it means that there is at least one valid continuous segment.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the maximum length of a valid continuous segment.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">2 2 2 1 1 2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 2 1 2 1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">2 2 1 1 1 2 2 2 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example Arkady can choose the subsegment [2,2,1,1] or the subsegment [1,1,2,2] with length 4.</p><p>In the second example there is no way but to choose one of the subsegments [2,1] or [1,2] with length 2.</p><p>In the third example Arkady’s best choice is the subsegment [1,1,1,2,2,2].</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>2個人去吃壽司，台上只有一排n個的壽司，有鮪魚和鰻魚兩種，壽司店只願意賣連續的一組壽司。其中一個人只想吃鮪魚，另一個人只想吃鰻魚，而且還希望能剛好每個半邊都是一樣的壽司方便分配，問你他們可以買的壽司最長是幾個？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法搜尋寬度，要注意的是長度必須是偶數，因此先將搜尋上限調整至大於等於n的2的冪次方較方便。確定可不可以的時候使用雙指標的方法搜尋較為快速。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/88d3e3247eccead6d05d0232156e110e.js"></script><p><a href="https://codeforces.com/problemset/problem/1138/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
            <tag> two pointers </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Maxim and Discounts</title>
      <link href="/Maxim-and-Discounts/"/>
      <content type="html"><![CDATA[<p>Maxim always goes to the supermarket on Sundays. Today the supermarket has a special offer of discount systems.</p><p>There are m types of discounts. We assume that the discounts are indexed from 1 to m. To use the discount number i, the customer takes a special basket, where he puts exactly q<sub>i</sub> items he buys. Under the terms of the discount system, in addition to the items in the cart the customer can receive at most two items from the supermarket for free. The number of the “free items” (0, 1 or 2) to give is selected by the customer. The only condition imposed on the selected “free items” is as follows: each of them mustn’t be more expensive than the cheapest item out of the q<sub>i</sub> items in the cart.</p><p>Maxim now needs to buy n items in the shop. Count the minimum sum of money that Maxim needs to buy them, if he use the discount system optimally well.</p><p>Please assume that the supermarket has enough carts for any actions. Maxim can use the same discount multiple times. Of course, Maxim can buy items without any discounts.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains integer m (1 ≤ m ≤ 105) — the number of discount types. The second line contains m integers: q1, q2, …, qm (1 ≤ qi ≤ 105).</p><p>The third line contains integer n (1 ≤ n ≤ 105) — the number of items Maxim needs. The fourth line contains n integers: a1, a2, …, an (1 ≤ ai ≤ 104) — the items’ prices.</p><p>The numbers in the lines are separated by single spaces.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print a single integer — the answer to the problem.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">50 50 100 100</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">200</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">5</span><br><span class="line">50 50 50 50 50</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">150</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br><span class="line">7</span><br><span class="line">1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample Maxim needs to buy two items that cost 100 and get a discount for two free items that cost 50. In that case, Maxim is going to pay 200.</p><p>In the second sample the best strategy for Maxim is to buy 3 items and get 2 items for free using the discount. In that case, Maxim is going to pay 150.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有m種折扣，可以在買了qi個東西後免費拿最多2個各自單價不超過這qi個東西中最低單價東西的東西，折扣可以重複使用。想買的東西有n個，各自的單價是ai，問你買這n個東西最少的花費是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為折扣可以重複使用，所以只要挑一個需要買最少的就好了，然後將n個東西從貴排到便宜，依序購買即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/284debb4252f7dc5f76255af89e079de.js"></script><p><a href="https://codeforces.com/problemset/problem/261/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Songs Compression</title>
      <link href="/Songs-Compression/"/>
      <content type="html"><![CDATA[<p>Ivan has n songs on his phone. The size of the i-th song is a<sub>i</sub> bytes. Ivan also has a flash drive which can hold at most m bytes in total. Initially, his flash drive is empty.</p><p>Ivan wants to copy all n songs to the flash drive. He can compress the songs. If he compresses the i-th song, the size of the i-th song reduces from a<sub>i</sub> to b<sub>i</sub> bytes (b<sub>i</sub> &lt; a<sub>i</sub>).</p><p>Ivan can compress any subset of the songs (possibly empty) and copy all the songs to his flash drive if the sum of their sizes is at most m. He can compress any subset of the songs (not necessarily contiguous).</p><p>Ivan wants to find the minimum number of songs he needs to compress in such a way that all his songs fit on the drive (i.e. the sum of their sizes is less than or equal to m).</p><p>If it is impossible to copy all the songs (even if Ivan compresses all the songs), print “-1”. Otherwise print the minimum number of songs Ivan needs to compress.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains two integers n and m (1≤n≤10<sup>5</sup>,1≤m≤10<sup>9</sup>) — the number of the songs on Ivan’s phone and the capacity of Ivan’s flash drive.</p><p>The next n lines contain two integers each: the i-th line contains two integers ai and bi (1≤a<sub>i</sub>,b<sub>i</sub>≤10<sup>9</sup>, a<sub>i</sub>&gt;b<sub>i</sub>) — the initial size of the i-th song and the size of the i-th song after compression.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>If it is impossible to compress a subset of the songs in such a way that all songs fit on the flash drive, print “-1”. Otherwise print the minimum number of the songs to compress.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 21</span><br><span class="line">10 8</span><br><span class="line">7 4</span><br><span class="line">3 1</span><br><span class="line">5 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 16</span><br><span class="line">10 8</span><br><span class="line">7 4</span><br><span class="line">3 1</span><br><span class="line">5 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example Ivan can compress the first and the third songs so after these moves the sum of sizes will be equal to 8+7+1+5=21≤21. Also Ivan can compress the first and the second songs, then the sum of sizes will be equal 8+4+3+5=20≤21. Note that compressing any single song is not sufficient to copy all the songs on the flash drive (for example, after compressing the second song the sum of sizes will be equal to 10+4+3+5=22&gt;21).</p><p>In the second example even if Ivan compresses all the songs the sum of sizes will be equal 8+4+1+4=17&gt;16<br>.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有n首歌，要放進容量為m的隨身碟裡，考慮到容量問題，歌可以進行壓縮，從原本的容量ai壓縮成bi，現在問你最少要壓縮幾首歌才能將歌全部塞進隨身碟中，或是不可能塞進去？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先將a加總，得到未壓縮的總容量max；將b加總，得到全壓縮的總容量min。當max&lt;=m時無須壓縮；當min&gt;m時不可能；剩下的情況將每1首歌的壓縮容量差距記起來，依差距從大排到小，從差距大的開始壓縮，壓縮到容量可以後停止就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/d228c2a19a77b9da421e25e87cd3e3d9.js"></script><p><a href="https://codeforces.com/problemset/problem/1015/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Teams Forming</title>
      <link href="/Teams-Forming/"/>
      <content type="html"><![CDATA[<p>One day n students come to the stadium. They want to play football, and for that they need to split into teams, the teams must have an equal number of people.</p><p>We know that this group of people has archenemies. Each student has at most two archenemies. Besides, if student A is an archenemy to student B, then student B is an archenemy to student A.</p><p>The students want to split so as no two archenemies were in one team. If splitting in the required manner is impossible, some students will have to sit on the bench.</p><p>Determine the minimum number of students you will have to send to the bench in order to form the two teams in the described manner and begin the game at last.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (2 ≤ n ≤ 100, 1 ≤ m ≤ 100) — the number of students and the number of pairs of archenemies correspondingly.</p><p>Next m lines describe enmity between students. Each enmity is described as two numbers ai and bi (1 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ n, a<sub>i</sub> ≠ b<sub>i</sub>) — the indexes of the students who are enemies to each other. Each enmity occurs in the list exactly once. It is guaranteed that each student has no more than two archenemies.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the minimum number of students you will have to send to the bench in order to start the game.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5 4</span><br><span class="line">1 2</span><br><span class="line">2 4</span><br><span class="line">5 3</span><br><span class="line">1 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 4</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6 6</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 1</span><br><span class="line">4 5</span><br><span class="line">5 6</span><br><span class="line">6 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>n個學生要分成n/2組，每1組保證正好2個人，每個人都有各自的程式技能等級ai，你可以挑1個人來解掉1題題目讓他的程式技能等級提升1級，現在問你最少要讓學生總共解掉多少題目來使得每一組的2個人間彼此的程式技能等級都是一樣的？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>把所有人依技能等級從大到小排序，兩兩一組，把低的拉到跟高的一樣，加總差距就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/bc6568329876e43c5ddbf19948035b6f.js"></script><p><a href="https://codeforces.com/problemset/problem/216/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sagheer and Crossroads</title>
      <link href="/Sagheer-and-Crossroads/"/>
      <content type="html"><![CDATA[<p>Sagheer is walking in the street when he comes to an intersection of two roads. Each road can be represented as two parts where each part has 3 lanes getting into the intersection (one for each direction) and 3 lanes getting out of the intersection, so we have 4 parts in total. Each part has 4 lights, one for each lane getting into the intersection (l — left, s — straight, r — right) and a light p for a pedestrian crossing. </p><a id="more"></a><p><img src="A.PNG" alt="A"><br>An accident is possible if a car can hit a pedestrian. This can happen if the light of a pedestrian crossing of some part and the light of a lane that can get to or from that same part are green at the same time.</p><p>Now, Sagheer is monitoring the configuration of the traffic lights. Your task is to help him detect whether an accident is possible.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input consists of four lines with each line describing a road part given in a counter-clockwise order.</p><p>Each line contains four integers l, s, r, p — for the left, straight, right and pedestrian lights, respectively. The possible values are 0 for red light and 1 for green light.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>On a single line, print “YES” if an accident is possible, and “NO” otherwise.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 0 1</span><br><span class="line">0 1 0 0</span><br><span class="line">0 0 1 0</span><br><span class="line">0 0 0 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 1 1 0</span><br><span class="line">1 0 1 0</span><br><span class="line">1 1 0 0</span><br><span class="line">0 0 0 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 0 0 0</span><br><span class="line">0 0 0 1</span><br><span class="line">0 0 0 0</span><br><span class="line">1 0 1 0</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, some accidents are possible because cars of part 1 can hit pedestrians of parts 1 and 4. Also, cars of parts 2 and 3 can hit pedestrians of part 4.</p><p>In the second example, no car can pass the pedestrian crossing of part 4 which is the only green pedestrian light. So, no accident can occur.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有個十字路口，每個路口都用l、r、s、p的4個狀態表示3個車道加1個行人穿越道的燈號狀態，1表示綠燈；0表示紅燈。從南開始逆時針依序輸入四個路口的燈號狀態，問你有沒有路口有可能發生人跟車的事故？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依序比較每個方向的每個車道跟目的地的行人穿越道的燈號就可以了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/7144cb5d6c8af5c7db3a1405a970a185.js"></script><p><a href="https://codeforces.com/problemset/problem/812/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>The number of positions</title>
      <link href="/The-number-of-positions/"/>
      <content type="html"><![CDATA[<p>Petr stands in line of n people, but he doesn’t know exactly which position he occupies. He can say that there are no less than a people standing in front of him and no more than b people standing behind him. Find the number of different positions Petr can occupy.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line contains three integers n, a and b (0 ≤ a, b &lt; n ≤ 100).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the single number — the number of the sought positions.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 2 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The possible positions in the first sample are: 2 and 3 (if we number the positions starting with 1).</p><p>In the second sample they are 3, 4 and 5.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>在n個人的隊列中，他前面有不小於a個的人；後面有不多於b個的人，問你他有幾個可能的位置？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將隊列以編號[1,n]來看，則前面有不小於a個的人表示他在[a+1,n]的位置；後面有不多於b個的人表示他在[n-b,n]的位置，取兩者的交集即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/7d368f649a7201e7031fea98970cb0bf.js"></script><p><a href="https://codeforces.com/problemset/problem/124/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sereja and Mugs</title>
      <link href="/Sereja-and-Mugs/"/>
      <content type="html"><![CDATA[<p>Sereja showed an interesting game to his friends. The game goes like that. Initially, there is a table with an empty cup and n water mugs on it. Then all players take turns to move. During a move, a player takes a non-empty mug of water and pours all water from it into the cup. If the cup overfills, then we assume that this player lost.</p><p>As soon as Sereja’s friends heard of the game, they wanted to play it. Sereja, on the other hand, wanted to find out whether his friends can play the game in such a way that there are no losers. You are given the volumes of all mugs and the cup. Also, you know that Sereja has (n - 1) friends. Determine if Sereja’s friends can play the game so that nobody loses. </p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains integers n and s (2 ≤ n ≤ 100; 1 ≤ s ≤ 1000) — the number of mugs and the volume of the cup. The next line contains n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 10). Number ai means the volume of the i-th mug.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line, print “YES” (without the quotes) if his friends can play in the described manner, and “NO” (without the quotes) otherwise.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">3 1 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">4 4 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>n個杯子，n-1個人各選一個，總容量要不超過s，問有可能達成嗎？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>只問有沒有可能，不是一定要，所以只要考慮n-1個數的最小值就好，因此把最大的拿掉後看看行不行就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0df5bb1e098e637055883d57254a1812.js"></script><p><a href="https://codeforces.com/problemset/problem/426/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fafa and his Company</title>
      <link href="/Fafa-and-his-Company/"/>
      <content type="html"><![CDATA[<p>Fafa owns a company that works on huge projects. There are n employees in Fafa’s company. Whenever the company has a new project to start working on, Fafa has to divide the tasks of this project among all the employees.</p><p>Fafa finds doing this every time is very tiring for him. So, he decided to choose the best l employees in his company as team leaders. Whenever there is a new project, Fafa will divide the tasks among only the team leaders and each team leader will be responsible of some positive number of employees to give them the tasks. To make this process fair for the team leaders, each one of them should be responsible for the same number of employees. Moreover, every employee, who is not a team leader, has to be under the responsibility of exactly one team leader, and no team leader is responsible for another team leader.</p><p>Given the number of employees n, find in how many ways Fafa could choose the number of team leaders l in such a way that it is possible to divide employees between them evenly.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input consists of a single line containing a positive integer n (2 ≤ n ≤ 10<sup>5</sup>) — the number of employees in Fafa’s company.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer representing the answer to the problem.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the second sample Fafa has 3 ways:</p><blockquote><blockquote><p>● choose only 1 employee as a team leader with 9 employees under his responsibility.<br>● choose 2 employees as team leaders with 4 employees under the responsibility of each of them.<br>● choose 5 employees as team leaders with 1 employee under the responsibility of each of them. </p></blockquote></blockquote><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有n個員工，要被分成小組，一個小組一定要有1個組長和1個以上的組員，而且每一組的人數必須一樣，問現在有幾種分法？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>題目等同於問n有幾個2以上的因數，1不行不用管；n一定是，先加1；從2開始，能整除就加2，因為因數是成對出現的，這樣可以只檢查到平方根就好；例外的平方根要注意，平方根能整除也只加1。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/dec4d3138b5eb87b0df108f844503fcb.js"></script><p><a href="https://codeforces.com/problemset/problem/935/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Frodo and pillows</title>
      <link href="/Frodo-and-pillows/"/>
      <content type="html"><![CDATA[<p>n hobbits are planning to spend the night at Frodo’s house. Frodo has n beds standing in a row and m pillows (n ≤ m). Each hobbit needs a bed and at least one pillow to sleep, however, everyone wants as many pillows as possible. Of course, it’s not always possible to share pillows equally, but any hobbit gets hurt if he has at least two pillows less than some of his neighbors have.</p><p>Frodo will sleep on the k-th bed in the row. What is the maximum number of pillows he can have so that every hobbit has at least one pillow, every pillow is given to some hobbit and no one is hurt?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line contain three integers n, m and k (1 ≤ n ≤ m ≤ 10<sup>9</sup>, 1 ≤ k ≤ n) — the number of hobbits, the number of pillows and the number of Frodo’s bed.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print single integer — the maximum number of pillows Frodo can have so that no one is hurt.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 6 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 10 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 6 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example Frodo can have at most two pillows. In this case, he can give two pillows to the hobbit on the first bed, and one pillow to each of the hobbits on the third and the fourth beds.</p><p>In the second example Frodo can take at most four pillows, giving three pillows to each of the others.</p><p>In the third example Frodo can take three pillows, giving two pillows to the hobbit in the middle and one pillow to the hobbit on the third bed.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有n個哈比人要睡在Frodo的家中，現在有排成一列的n張床和m個枕頭，每個哈比人都需要1張床和至少1個枕頭，但他們都想要盡量多的枕頭，卻又會因為假如隔壁的哈比人比他多2個以上的枕頭而傷心。Frodo睡在第k床上，他最多可以拿到幾個枕頭又沒有讓任何一個哈比人傷心？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>m個枕頭分配給n個哈比人，至少每人1個一定是可以的，最多不可能超過m個，因此在0~m中搜尋Frodo的枕頭數量。這題的重點除了基本的二分搜尋法概念以外，就是該如何計算枕頭總數，如果用累加的有可能會因為測資較大而超時，因此要用數學方式計算總數。</p><p>假設k拿3個，則分布可能會如下面的圖，則計算總數的方式分為4個區段：<br>a<del>b：計算方式同長方形，高度為1。<br>b</del>c：計算方式同梯型。<br>c<del>d：計算方式同梯型<br>d</del>e：計算方式同長方形，高度為1。<br><img src="A.PNG" alt="A"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/b3b1589cfc0f43b71fc38eb642ee2b4e.js"></script><p><a href="https://codeforces.com/problemset/problem/760/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> math </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Amr and Music</title>
      <link href="/Amr-and-Music/"/>
      <content type="html"><![CDATA[<p>Amr is a young coder who likes music a lot. He always wanted to learn how to play music but he was busy coding so he got an idea.</p><p>Amr has n instruments, it takes a<sub>i</sub> days to learn i-th instrument. Being busy, Amr dedicated k days to learn how to play the maximum possible number of instruments.</p><p>Amr asked for your help to distribute his free days between instruments so that he can achieve his goal.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two numbers n, k (1 ≤ n ≤ 100, 0 ≤ k ≤ 10 000), the number of instruments and number of days respectively.</p><p>The second line contains n integers ai (1 ≤ a<sub>i</sub> ≤ 100), representing number of days required to learn the i-th instrument.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In the first line output one integer m representing the maximum number of instruments Amr can learn.</p><p>In the second line output m space-separated integers: the indices of instruments to be learnt. You may output indices in any order.</p><p>if there are multiple optimal solutions output any. It is not necessary to use all days for studying.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 10</span><br><span class="line">4 3 1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 6</span><br><span class="line">4 3 1 1 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 3 4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first test Amr can learn all 4 instruments.</p><p>In the second test other possible solutions are: {2, 3, 5} or {3, 4, 5}.</p><p>In the third test Amr doesn’t have enough time to learn the only presented instrument.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在有k天的時間，他想要盡量學一些樂器，學第i種樂器的時間需要a<sub>i</sub>天，請問最多可以學幾種樂器，分別是哪幾種？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為需要印出是哪幾種，所以不能直接排序，新建一個struct，存編號跟天數，然後再依據天數由小排到大。然後一直減k，直到沒得減了或k小於0了為止，最後輸出答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9f680592a720d787b000254aefbb2d03.js"></script><p><a href="https://codeforces.com/problemset/problem/507/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Burning Midnight Oil</title>
      <link href="/Burning-Midnight-Oil/"/>
      <content type="html"><![CDATA[<p>One day a highly important task was commissioned to Vasya — writing a program in a night. The program consists of n lines of code. Vasya is already exhausted, so he works like that: first he writes v lines of code, drinks a cup of tea, then he writes as much as ⌊v/k⌋ lines, drinks another cup of tea, then he writes ⌊v/k<sup>2</sup>⌋ lines and so on: ⌊v/k<sup>3</sup>⌋ , ⌊v/k<sup>4</sup>⌋ , ⌊v/k<sup>5</sup>⌋ , …</p><p>The expression ⌊a/b⌋is regarded as the integral part from dividing number a by number b.</p><p>The moment the current value ⌊v/k<sup>p</sup>⌋ equals 0, Vasya immediately falls asleep and he wakes up only in the morning, when the program should already be finished.</p><p>Vasya is wondering, what minimum allowable value v can take to let him write not less than n lines of code before he falls asleep.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input consists of two integers n and k, separated by spaces — the size of the program in lines and the productivity reduction coefficient, 1 ≤ n ≤ 10<sup>9</sup>, 2 ≤ k ≤ 10.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the only integer — the minimum value of v that lets Vasya write the program in one night.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59 9</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">54</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample the answer is v = 4. Vasya writes the code in the following portions: first 4 lines, then 2, then 1, and then Vasya falls asleep. Thus, he manages to write 4 + 2 + 1 = 7 lines in a night and complete the task.</p><p>In the second sample the answer is v = 54. Vasya writes the code in the following portions: 54, 6. The total sum is 54 + 6 = 60, that’s even more than n = 59.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他現在快睡著了，寫了v行程式碼之後就必須喝一杯茶，然後就能繼續寫⌊𝑣/𝑘⌋行程式碼；再喝一杯茶，能再寫⌊𝑣/𝑘<sup>2</sup>⌋行程式碼，當⌊𝑣/𝑘<sup>𝑝</sup>⌋等於0的時候就會立刻睡著。現在問你假如他必須寫出至少n行程式碼的話，v最少要是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>需要n行，因此v=0時一定不行，v=n時一定可以，所以在0~n中做二分搜尋法必定可以找到答案。<br>● 若是v=mid時算出來的行數等於n，則mid就是最小值。<br>● 若是v=mid時算出來的行數大於n，則mid有可能是答案，將最小值記起來再減少上限找看看有沒有可能更小。<br>● 若是v=mid時算出來的行數小於n，則mid不可能是答案，增加下限找看看有沒有可能的答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9316d78bd8016b0996ffd5fceeb75ffd.js"></script><p><a href="https://chucs.github.io/site/">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>USB Flash Drives</title>
      <link href="/USB-Flash-Drives/"/>
      <content type="html"><![CDATA[<p>Sean is trying to save a large file to a USB flash drive. He has n USB flash drives with capacities equal to a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> megabytes. The file size is equal to m megabytes.</p><p>Find the minimum number of USB flash drives needed to write Sean’s file, if he can split the file between drives.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains positive integer n (1 ≤ n ≤ 100) — the number of USB flash drives.</p><p>The second line contains positive integer m (1 ≤ m ≤ 10<sup>5</sup>) — the size of Sean’s file.</p><p>Each of the next n lines contains positive integer a<sub>i</sub> (1 ≤ a<sub>i</sub> ≤ 1000) — the sizes of USB flash drives in megabytes.</p><p>It is guaranteed that the answer exists, i. e. the sum of all a<sub>i</sub> is not less than m.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum number of USB flash drives to write Sean’s file, if he can split the file between drives.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example Sean needs only two USB flash drives — the first and the third.</p><p>In the second example Sean needs all three USB flash drives.</p><p>In the third example Sean needs only one USB flash drive and he can use any available USB flash drive — the first or the second.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有n個隨身碟的容量是a<sub>1</sub>、a<sub>2</sub>、…、a<sub>n</sub>，有筆資料的容量是m，問你最少要幾個隨身碟才裝得下？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>排序後由大的開始扣，容量扣完或全部用完了的時候就結束。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/796d0bc74e046275763493f76b904146.js"></script><p><a href="https://codeforces.com/problemset/problem/609/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> greedy </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Water Buying</title>
      <link href="/Water-Buying/"/>
      <content type="html"><![CDATA[<p>Polycarp wants to cook a soup. To do it, he needs to buy exactly n liters of water.</p><p>There are only two types of water bottles in the nearby shop — 1-liter bottles and 2-liter bottles. There are infinitely many bottles of these two types in the shop.</p><p>The bottle of the first type costs a burles and the bottle of the second type costs b burles correspondingly.</p><p>Polycarp wants to spend as few money as possible. Your task is to find the minimum amount of money (in burles) Polycarp needs to buy exactly n<br>liters of water in the nearby shop if the bottle of the first type costs a burles and the bottle of the second type costs b burles.</p><p>You also have to answer q independent queries.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains one integer q (1≤q≤500) — the number of queries.</p><p>The next n lines contain queries. The i-th query is given as three space-separated integers n<sub>i</sub>, a<sub>i</sub> and b<sub>i</sub> (1≤n<sub>i<sub>≤10<sup>12</sup>,1≤a<sub>i</sub>,b<sub>i</sub>≤1000) — how many liters Polycarp needs in the i-th query, the cost (in burles) of the bottle of the first type in the i-th query and the cost (in burles) of the bottle of the second type in the i-th query, respectively.</sub></sub></p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print q integers. The i-th integer should be equal to the minimum amount of money (in burles) Polycarp needs to buy exactly n<sub>i</sub> liters of water in the nearby shop if the bottle of the first type costs a<sub>i</sub> burles and the bottle of the second type costs b<sub>i</sub> burles.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">10 1 3</span><br><span class="line">7 3 2</span><br><span class="line">1 1000 1</span><br><span class="line">1000000000000 42 88</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">9</span><br><span class="line">1000</span><br><span class="line">42000000000000</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>現在想買正好n公升的水，只有賣兩種瓶裝水 – 1公升裝跟2公升裝的，分別是a元與b元，請問最少要花多少才買得到n公升的水？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先判斷n是奇數還是偶數，奇數的話就先買一罐1公升的把n變成偶數。剩下的就以2公升為單位買，看是2罐一公升的便宜還是1罐2公升的便宜。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/8c6fc90e3bb7af3af4a1f2cb3744b6ff.js"></script><p><a href="https://codeforces.com/contest/1118/problem/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Drinks</title>
      <link href="/Drinks/"/>
      <content type="html"><![CDATA[<p>Little Vasya loves orange juice very much. That’s why any food and drink in his kitchen necessarily contains orange juice. There are n drinks in his fridge, the volume fraction of orange juice in the i-th drink equals p<sub>i</sub> percent.</p><p>One day Vasya decided to make himself an orange cocktail. He took equal proportions of each of the n drinks and mixed them. Then he wondered, how much orange juice the cocktail has.</p><p>Find the volume fraction of orange juice in the final drink.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first input line contains a single integer n (1 ≤ n ≤ 100) — the number of orange-containing drinks in Vasya’s fridge. The second line contains n integers pi (0 ≤ p<sub>i</sub> ≤ 100) — the volume fraction of orange juice in the i-th drink, in percent. The numbers are separated by a space.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the volume fraction in percent of orange juice in Vasya’s cocktail. The answer will be considered correct if the absolute or relative error does not exceed 10<sup>-4</sup>.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">50 50 100</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">66.666666666667</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">0 25 50 75</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">37.500000000000</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p><img src="A.PNG" alt="A"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有n種飲料，第i種飲料的柳橙汁含量比例是百分之p<sub>i</sub>。現在將n種飲料等比例的混合做成綜合柳橙汁，最後的柳橙汁含量百分比是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>加總平均。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/b9a845e27cfb68cdf7fc52926580f9bc.js"></script><p><a href="https://codeforces.com/problemset/problem/200/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>T-primes</title>
      <link href="/T-primes/"/>
      <content type="html"><![CDATA[<p>We know that prime numbers are positive integers that have exactly two distinct positive divisors. Similarly, we’ll call a positive integer t Т-prime, if t has exactly three distinct positive divisors.</p><p>You are given an array of n positive integers. For each of them determine whether it is Т-prime or not.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single positive integer, n (1 ≤ n ≤ 10<sup>5</sup>), showing how many numbers are in the array. The next line contains n space-separated integers x<sub>i</sub> (1 ≤ x<sub>i</sub> ≤ 10<sup>12</sup>).</p><p>Please, do not use the %lld specifier to read or write 64-bit integers in С++. It is advised to use the cin, cout streams or the %I64d specifier.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n lines: the i-th line should contain “YES” (without the quotes), if number xi is Т-prime, and “NO” (without the quotes), if it isn’t.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4 5 6</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The given test has three numbers. The first number 4 has exactly three divisors — 1, 2 and 4, thus the answer for this number is “YES”. The second number 5 has two divisors (1 and 5), and the third number 6 has four divisors (1, 2, 3, 6), hence the answer for them is “NO”.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>題目定義一個數只有三個不同的因數，叫做T-Prime。現在給你N個數，問你他們各自是不是T-Prime。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為只有三個因數，1跟自己就佔了兩個，所以剩下的一個一定是你的平方根，而且而且平方根還不能有其他因數，因此平方根必須是質數。2跟4是唯二的特例，例外處理，其他的偶數不必處理。先建立質數表，然後用二分搜尋法查找他平方根在的那格是不是質數就可以了。</p><p><img src="A.PNG" alt="A"><br><img src="B.PNG" alt="B"><br><img src="C.PNG" alt="C"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/6fdd04e43ec13a0d17c5164bca48fefb.js"></script><p><a href="https://codeforces.com/problemset/problem/230/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> math </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Worms</title>
      <link href="/Worms/"/>
      <content type="html"><![CDATA[<p>It is lunch time for Mole. His friend, Marmot, prepared him a nice game for lunch.</p><p>Marmot brought Mole n ordered piles of worms such that i-th pile contains ai worms. He labeled all these worms with consecutive integers: worms in first pile are labeled with numbers 1 to a<sub>1</sub>, worms in second pile are labeled with numbers a<sub>1</sub> + 1 to a<sub>1</sub> + a<sub>2</sub> and so on. See the example for a better understanding.</p><p>Mole can’t eat all the worms (Marmot brought a lot) and, as we all know, Mole is blind, so Marmot tells him the labels of the best juicy worms. Marmot will only give Mole a worm if Mole says correctly in which pile this worm is contained.</p><p>Poor Mole asks for your help. For all juicy worms said by Marmot, tell Mole the correct answers.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (1 ≤ n ≤ 10<sup>5</sup>), the number of piles.</p><p>The second line contains n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 10<sup>3</sup>, a<sub>1</sub> + a<sub>2</sub> + … + a<sub>n</sub> ≤ 10<sup>6</sup>), where ai is the number of worms in the i-th pile.</p><p>The third line contains single integer m (1 ≤ m ≤ 10<sup>5</sup>), the number of juicy worms said by Marmot.</p><p>The fourth line contains m integers q<sub>1</sub>, q<sub>2</sub>, …, qm (1 ≤ q<sub>i</sub> ≤ a<sub>1</sub> + a<sub>2</sub> + … + a<sub>n</sub>), the labels of the juicy worms.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print m lines to the standard output. The i-th line should contain an integer, representing the number of the pile where the worm labeled with the number q<sub>i</sub> is.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">2 7 3 4 9</span><br><span class="line">3</span><br><span class="line">1 25 11</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">5</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>For the sample input:</p><p>● The worms with labels from [1, 2] are in the first pile.<br>● The worms with labels from [3, 9] are in the second pile.<br>● The worms with labels from [10, 12] are in the third pile.<br>● The worms with labels from [13, 16] are in the fourth pile.<br>● The worms with labels from [17, 25] are in the fifth pile.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有隻鼴鼠正準備吃午餐，有另一隻鼴鼠幫他將N隻蟲，照編號頭尾相連的排成了一列，座標從第一隻蟲的最左邊為1開始延續，然後跟他講M次他該吃座標多少的蟲。現在問你他每一次吃的蟲是編號幾號的蟲？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>建一個陣列，將蟲的長度累加，陣列中的第i格存的是編號i的蟲的尾巴座標是多少。接著將每次輸入的座標用二分搜尋法查找蟲的編號。<br><img src="A.PNG" alt="A"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/b3c379b0cf5a291cb9f2a117b6a6c1a2.js"></script><p><a href="https://codeforces.com/problemset/problem/474/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bear and Three Balls</title>
      <link href="/Bear-and-Three-Balls/"/>
      <content type="html"><![CDATA[<p>Limak is a little polar bear. He has n balls, the i-th ball has size t<sub>i</sub>.</p><p>Limak wants to give one ball to each of his three friends. Giving gifts isn’t easy — there are two rules Limak must obey to make friends happy:</p><p>● No two friends can get balls of the same size.<br>● No two friends can get balls of sizes that differ by more than 2.<br>For example, Limak can choose balls with sizes 4, 5 and 3, or balls with sizes 90, 91 and 92. But he can’t choose balls with sizes 5, 5 and 6 (two friends would get balls of the same size), and he can’t choose balls with sizes 30, 31 and 33 (because sizes 30 and 33 differ by more than 2).</p><p>Your task is to check whether Limak can choose three balls that satisfy conditions above.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains one integer n (3 ≤ n ≤ 50) — the number of balls Limak has.</p><p>The second line contains n integers t<sub>1</sub>, t<sub>2</sub>, …, t<sub>n</sub> (1 ≤ t<sub>i</sub> ≤ 1000) where ti denotes the size of the i-th ball.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print “YES” (without quotes) if Limak can choose three balls of distinct sizes, such that any two of them differ by no more than 2. Otherwise, print “NO” (without quotes).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">18 55 16 17</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">40 41 43 44 44 44</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">5 972 3 4 1 4 970 971</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, there are 4 balls and Limak is able to choose three of them to satisfy the rules. He must must choose balls with sizes 18, 16 and 17.</p><p>In the second sample, there is no way to give gifts to three friends without breaking the rules.</p><p>In the third sample, there is even more than one way to choose balls:</p><blockquote><blockquote><ol><li>Choose balls with sizes 3, 4 and 5.</li><li>Choose balls with sizes 972, 970, 971.</li></ol></blockquote></blockquote><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>一隻熊要送他的三個朋友各一顆球，有兩個條件，(a)不能一樣大，(b)不能有兩個人的球的大小差距超過2。給你一些球，問你能不能挑出符合條件的三顆球？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>綜合兩個條件，唯一能符合的球的大小就是N，N+1，N+2，因此先小到大排序，然後從小的開始找有沒有出現三個連續大小的球。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/20b935d0b2db96a90f0c8265f25e0cfb.js"></script><p><a href="https://codeforces.com/problemset/problem/653/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Squares</title>
      <link href="/Squares/"/>
      <content type="html"><![CDATA[<p>Vasya has found a piece of paper with a coordinate system written on it. There are n distinct squares drawn in this coordinate system. Let’s number the squares with integers from 1 to n. It turned out that points with coordinates (0, 0) and (ai, ai) are the opposite corners of the i-th square.</p><p>Vasya wants to find such integer point (with integer coordinates) of the plane, that belongs to exactly k drawn squares. We’ll say that a point belongs to a square, if the point is located either inside the square, or on its boundary.</p><p>Help Vasya find a point that would meet the described limits.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers n, k (1 ≤ n, k ≤ 50). The second line contains space-separated integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (1 ≤ a<sub>i</sub>≤ 10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print two space-separated integers x and y (0 ≤ x, y ≤ 10<sup>9</sup>) — the coordinates of the point that belongs to exactly k squares. If there are multiple answers, you are allowed to print any of them.</p><p>If there is no answer, print “-1” (without the quotes).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">5 1 3 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br><span class="line">2 4 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 50</span><br><span class="line">5 1 10 2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>在平面上有N個正方形，左下點都對齊(0, 0)，請你找一個點，這個點剛好在K個正方形內，邊長保證都不會重複。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為左下角都對齊了，而且是正方型又不會重複，所以只要從大的開始往小的找K個，假設他的邊長為L，則(L, 0)就是答案。<br><img src="A.PNG" alt="A"></p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a765b492ae4bf0e41cceabef430761ea.js"></script><p><a href="https://codeforces.com/problemset/problem/263/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HQ9+</title>
      <link href="/HQ9/"/>
      <content type="html"><![CDATA[<p>HQ9+ is a joke programming language which has only four one-character instructions:</p><p>● “H” prints “Hello, World!”,<br>● “Q” prints the source code of the program itself,<br>● “9” prints the lyrics of “99 Bottles of Beer” song,<br>● “+” increments the value stored in the internal accumulator.</p><p>Instructions “H” and “Q” are case-sensitive and must be uppercase. The characters of the program which are not instructions are ignored.</p><p>You are given a program written in HQ9+. You have to figure out whether executing this program will produce any output.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input will consist of a single line p which will give a program in HQ9+. String p will contain between 1 and 100 characters, inclusive. ASCII-code of each character of p will be between 33 (exclamation mark) and 126 (tilde), inclusive.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output “YES”, if executing the program will produce any output, and “NO” otherwise.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi!</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Codeforces</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first case the program contains only one instruction — “H”, which prints “Hello, World!”.</p><p>In the second case none of the program characters are language instructions.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>字串中有H、Q、9時印出指定的內容，+增加內部數值。給你一串字串，問你這串字串會不會讓你印出東西？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為只有HQ9會印出東西，所以把字串全部跑一次，有HQ9其中一個字出現就是YES，否則就是NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/8f84f817c66175e00695130cfced0619.js"></script><p><a href="https://codeforces.com/problemset/problem/133/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Elephant</title>
      <link href="/Elephant/"/>
      <content type="html"><![CDATA[<p>An elephant decided to visit his friend. It turned out that the elephant’s house is located at point 0 and his friend’s house is located at point x(x &gt; 0) of the coordinate line. In one step the elephant can move 1, 2, 3, 4 or 5 positions forward. Determine, what is the minimum number of steps he need to make in order to get to his friend’s house.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains an integer x (1 ≤ x ≤ 1 000 000) — The coordinate of the friend’s house.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum number of steps that elephant needs to make to get from point 0 to point x.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample the elephant needs to make one step of length 5 to reach the point x.</p><p>In the second sample the elephant can get to point x if he moves by 3, 5 and 4. There are other ways to get the optimal answer but the elephant cannot reach x in less than three moves.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>字串中有H、Q、9時印出指定的內容，+增加內部數值。給你一串字串，問你這串字串會不會讓你印出東西？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為只有HQ9會印出東西，所以把字串全部跑一次，有HQ9其中一個字出現就是YES，否則就是NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/a3c788a465878f6d9badc51d1728422a.js"></script><p><a href="https://codeforces.com/problemset/problem/617/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Battleship</title>
      <link href="/Battleship/"/>
      <content type="html"><![CDATA[<p>Arkady is playing Battleship. The rules of this game aren’t really important.</p><p>There is a field of n×n cells. There should be exactly one k-decker on the field, i. e. a ship that is k cells long oriented either horizontally or vertically. However, Arkady doesn’t know where it is located. For each cell Arkady knows if it is definitely empty or can contain a part of the ship.</p><p>Consider all possible locations of the ship. Find such a cell that belongs to the maximum possible number of different locations of the ship.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and k (1≤k≤n≤100) — the size of the field and the size of the ship.</p><p>The next n lines contain the field. Each line contains n characters, each of which is either ‘#’ (denotes a definitely empty cell) or ‘.’ (denotes a cell that can belong to the ship).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output two integers — the row and the column of a cell that belongs to the maximum possible number of different locations of the ship.</p><p>If there are multiple answers, output any of them. In particular, if no ship can be placed on the field, you can output any cell.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">#..#</span><br><span class="line">#.#.</span><br><span class="line">....</span><br><span class="line">.###</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 4</span><br><span class="line">#....##...</span><br><span class="line">.#...#....</span><br><span class="line">..#..#..#.</span><br><span class="line">...#.#....</span><br><span class="line">.#..##.#..</span><br><span class="line">.....#...#</span><br><span class="line">...#.##...</span><br><span class="line">.#...#.#..</span><br><span class="line">.....#..#.</span><br><span class="line">...#.#...#</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">19 6</span><br><span class="line">##..............###</span><br><span class="line">#......#####.....##</span><br><span class="line">.....#########.....</span><br><span class="line">....###########....</span><br><span class="line">...#############...</span><br><span class="line">..###############..</span><br><span class="line">.#################.</span><br><span class="line">.#################.</span><br><span class="line">.#################.</span><br><span class="line">.#################.</span><br><span class="line">#####....##....####</span><br><span class="line">####............###</span><br><span class="line">####............###</span><br><span class="line">#####...####...####</span><br><span class="line">.#####..####..#####</span><br><span class="line">...###........###..</span><br><span class="line">....###########....</span><br><span class="line">.........##........</span><br><span class="line">#.................#</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 8</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The picture below shows the three possible locations of the ship that contain the cell (3,2) in the first sample.<br><img src="A.PNG" alt="A"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他給你一個海域圖，井號是礁石(‘#’)，點點是海(‘.’)，輸入N(海域大小N x N) K(船的長度 1 x K)，問你船出現機率最高的是哪個點(可參考範例一的圖)。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/b068dc00eaa347c4818011b1a8912375.js"></script><p><a href="https://codeforces.com/problemset/problem/965/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>They Are Everywhere</title>
      <link href="/They-Are-Everywhere/"/>
      <content type="html"><![CDATA[<p>Sergei B., the young coach of Pokemons, has found the big house which consists of n flats ordered in a row from left to right. It is possible to enter each flat from the street. It is possible to go out from each flat. Also, each flat is connected with the flat to the left and the flat to the right. Flat number 1 is only connected with the flat number 2 and the flat number n is only connected with the flat number n - 1.</p><p>There is exactly one Pokemon of some type in each of these flats. Sergei B. asked residents of the house to let him enter their flats in order to catch Pokemons. After consulting the residents of the house decided to let Sergei B. enter one flat from the street, visit several flats and then go out from some flat. But they won’t let him visit the same flat more than once.</p><p>Sergei B. was very pleased, and now he wants to visit as few flats as possible in order to collect Pokemons of all types that appear in this house. Your task is to help him and determine this minimum number of flats he has to visit.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains the integer n (1 ≤ n ≤ 100 000) — the number of flats in the house.</p><p>The second line contains the row s with the length n, it consists of uppercase and lowercase letters of English alphabet, the i-th letter equals the type of Pokemon, which is in the flat number i.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum number of flats which Sergei B. should visit in order to catch Pokemons of all types which there are in the house.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">AaA</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">bcAAcbc</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">aaBCCe</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first test Sergei B. can begin, for example, from the flat number 1 and end in the flat number 2.</p><p>In the second test Sergei B. can begin, for example, from the flat number 4 and end in the flat number 6.</p><p>In the third test Sergei B. must begin from the flat number 2 and end in the flat number 6.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>本題題意是給你ㄧ串字母(只包含a-zA-Z)，你要選一段子字串”包含所有出現過的字母”，問你最短的子字串是多長，也就是最短且出現過母字串所有的字母。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/d78d6145cc18240f8586230ea46b906c.js"></script><p><a href="https://codeforces.com/problemset/problem/701/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
            <tag> two pointers </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Micro-World</title>
      <link href="/Micro-World/"/>
      <content type="html"><![CDATA[<p>You have a Petri dish with bacteria and you are preparing to dive into the harsh micro-world. But, unfortunately, you don’t have any microscope nearby, so you can’t watch them.</p><p>You know that you have n bacteria in the Petri dish and size of the i-th bacteria is a<sub>i</sub>. Also you know intergalactic positive integer constant K.</p><p>The i-th bacteria can swallow the j-th bacteria if and only if a<sub>i</sub>&gt;a<sub>j</sub> and a<sub>i</sub>≤a<sub>j</sub>+K. The j-th bacteria disappear, but the i-th bacteria doesn’t change its size. The bacteria can perform multiple swallows. On each swallow operation any bacteria i can swallow any bacteria j if a<sub>i</sub>a<sub>j</sub> and a<sub>i</sub>≤a<sub>j</sub>+K. The swallow operations go one after another.</p><p>For example, the sequence of bacteria sizes a=[101,53,42,102,101,55,54] and K=1. The one of possible sequences of swallows is: [101,53,42,102,(101),55,54] → [101,(53),42,102,55,54] → [(101),42,102,55,54] → [42,102,55,(54)] → [42,102,55]. In total there are 3 bacteria remained in the Petri dish.</p><p>Since you don’t have a microscope, you can only guess, what the minimal possible number of bacteria can remain in your Petri dish when you finally will find any microscope.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space separated positive integers n and K (1≤n≤2⋅10<sup>5</sup>, 1≤K≤10<sup>6</sup>) — number of bacteria and intergalactic constant K.</p><p>The second line contains n space separated integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (1≤a<sub>i</sub>≤10<sup>6</sup>) — sizes of bacteria you have.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the only integer — minimal possible number of bacteria can remain.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 1</span><br><span class="line">101 53 42 102 101 55 54</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 5</span><br><span class="line">20 15 10 15 20 25</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 1000000</span><br><span class="line">1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first example is clarified in the problem statement.</p><p>In the second example an optimal possible sequence of swallows is: [20,15,10,15,(20),25] → [20,15,10,(15),25] → [20,15,(10),25] → [20,(15),25] → [(20),25] → [25].</p><p>In the third example no bacteria can swallow any other bacteria.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>這題再說有N個細菌，每個細菌大小為ai，細菌ai可以吃其他細菌aj不過只有兩個規則，一個規則是ai &gt; aj 而且 ai &lt;= aj + k 才可以吃掉。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們就先存好同樣尺寸的細菌，然後把全部細菌排序，之後符合規則的細菌我就一次吃掉。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/ea7da7267654c3a79516b4bb44aac686.js"></script><p><a href="https://codeforces.com/problemset/problem/990/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Lucky Division</title>
      <link href="/Lucky-Division/"/>
      <content type="html"><![CDATA[<p>Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.</p><p>Petya calls a number almost lucky if it could be evenly divided by some lucky number. Help him find out if the given number n is almost lucky.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The single line contains an integer n (1 ≤ n ≤ 1000) — the number that needs to be checked.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In the only line print “YES” (without the quotes), if number n is almost lucky. Otherwise, print “NO” (without the quotes).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">47</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">78</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Note that all lucky numbers are almost lucky as any number is evenly divisible by itself.</p><p>In the first sample 47 is a lucky number. In the second sample 16 is divisible by 4.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>找出信幸運數字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>這題再找一個幸運的數字，因為N小於1000所以我們直接把1000以內幸運數字存在陣列裡面，題目也說道如果有數字可以被幸運數字整除，那麼它也是幸運數字。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/79c825a14fee509b9061b7d4fae97c74.js"></script><p><a href="https://codeforces.com/problemset/problem/122/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>One-dimensional Japanese Crossword</title>
      <link href="/One-dimensional-Japanese-Crossword/"/>
      <content type="html"><![CDATA[<p>Recently Adaltik discovered japanese crosswords. Japanese crossword is a picture, represented as a table sized a × b squares, and each square is colored white or black. There are integers to the left of the rows and to the top of the columns, encrypting the corresponding row or column. The number of integers represents how many groups of black squares there are in corresponding row or column, and the integers themselves represents the number of consecutive black squares in corresponding group (you can find more detailed explanation in Wikipedia <a href="https://en.wikipedia.org/wiki/Japanese_crossword" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Japanese_crossword</a>).</p><p>Adaltik decided that the general case of japanese crossword is too complicated and drew a row consisting of n squares (e.g. japanese crossword sized 1 × n), which he wants to encrypt in the same way as in japanese crossword.<br><img src="A.PNG" alt="A"><br>Help Adaltik find the numbers encrypting the row he drew.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains a single integer n (1 ≤ n ≤ 100) — the length of the row. The second line of the input contains a single string consisting of n characters ‘B’ or ‘W’, (‘B’ corresponds to black square, ‘W’ — to white square in the row that Adaltik drew).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>The first line should contain a single integer k — the number of integers encrypting the row, e.g. the number of groups of black squares in the row.</p><p>The second line should contain k integers, encrypting the row, e.g. corresponding to sizes of groups of consecutive black squares in the order from left to right.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">BBW</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">BWBWB</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">WWWW</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">BBBB</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">WBBBBWWBWBBBW</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4 1 3</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The last sample case correspond to the picture in the statement.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>這題簡單來說呢就是找出有多少個連續’B’的區間，第一行輸出總共這條字串有幾組連續’B’的區間，第二行則輸出每組區間’B’得數量。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/b18a15fe05325da585fab6348f062d1c.js"></script><p><a href="https://codeforces.com/problemset/problem/721/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Insomnia cure</title>
      <link href="/Insomnia-cure/"/>
      <content type="html"><![CDATA[<p>«One dragon. Two dragon. Three dragon», — the princess was counting. She had trouble falling asleep, and she got bored of counting lambs when she was nine.</p><p>However, just counting dragons was boring as well, so she entertained herself at best she could. Tonight she imagined that all dragons were here to steal her, and she was fighting them off. Every k-th dragon got punched in the face with a frying pan. Every l-th dragon got his tail shut into the balcony door. Every m-th dragon got his paws trampled with sharp heels. Finally, she threatened every n-th dragon to call her mom, and he withdrew in panic.</p><p>How many imaginary dragons suffered moral or physical damage tonight, if the princess counted a total of d dragons?</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>Input data contains integer numbers k, l, m, n and d, each number in a separate line (1 ≤ k, l, m, n ≤ 10, 1 ≤ d ≤ 10<sup>5</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the number of damaged dragons.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">24</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first case every first dragon got punched with a frying pan. Some of the dragons suffered from other reasons as well, but the pan alone would be enough.</p><p>In the second case dragons 1, 7, 11, 13, 17, 19 and 23 escaped unharmed.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>計算龍的攻擊。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>Every k-th dragon got punched in the face with a frying pan: 每K隻龍就攻擊一遍<br>Every l-th dragon got his tail shut into the balcony door.<br>Every m-th dragon got his paws trampled with sharp heels.<br>Finally, she threatened every n-th dragon to call her mom, and he withdrew in panic.</p><p>依此類推每??隻龍就攻擊(k ,l ,m ,n)<br>解法是開一個陣列去紀錄哪一些龍被攻擊了，最後再用一個for迴圈去統計有多少隻龍受到傷害</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ex:</span><br><span class="line"> Every k-th dragon got punched in the face with a frying pan ,k &#x3D; 2 (有12隻龍)</span><br><span class="line"> </span><br><span class="line"> 開一個陣列: □ □ □ □ □ □ □ □ □ □ □ □ (12個) </span><br><span class="line"> </span><br><span class="line"> 因為是每兩隻龍就攻擊一次所以陣列每數到2就標記一次:</span><br><span class="line"> </span><br><span class="line"> 1 2 1 2 1 2 1 2 1 2 1 2</span><br><span class="line"> □ ■ □ ■ □ ■ □ ■ □ ■ □ ■</span><br><span class="line"> </span><br><span class="line"> 最後做統計，有標記的就是被攻擊過的:</span><br><span class="line"> </span><br><span class="line">   1   2   3   4   5   6</span><br><span class="line"> □ ■ □ ■ □ ■ □ ■ □ ■ □ ■</span><br><span class="line"> </span><br><span class="line"> 所以被攻擊過的龍就是6隻。</span><br></pre></td></tr></table></figure><p>題目有 k ,l ,m ,n依此類推都是這樣去標記，最後在做一次統計</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0cd0e5027094ec5738df365d8f2b38cc.js"></script><p><a href="https://codeforces.com/problemset/problem/148/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> sortings </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Present from Lena</title>
      <link href="/Present-from-Lena/"/>
      <content type="html"><![CDATA[<p>Vasya’s birthday is approaching and Lena decided to sew a patterned handkerchief to him as a present. Lena chose digits from 0 to n as the pattern. The digits will form a rhombus. The largest digit n should be located in the centre. The digits should decrease as they approach the edges. For example, for n = 5 the handkerchief pattern should look like that:</p><pre><code>      0    0 1 0  0 1 2 1 00 1 2 3 2 1 0</code></pre><p>  0 1 2 3 4 3 2 1 0<br>0 1 2 3 4 5 4 3 2 1 0<br>  0 1 2 3 4 3 2 1 0<br>    0 1 2 3 2 1 0<br>      0 1 2 1 0<br>        0 1 0<br>          0<br>Your task is to determine the way the handkerchief will look like by the given n.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains the single integer n (2 ≤ n ≤ 9).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a picture for the given n. You should strictly observe the number of spaces before the first digit on each line. Every two adjacent digits in the same line should be separated by exactly one space. There should be no spaces after the last digit at the end of each line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    0</span><br><span class="line">  0 1 0</span><br><span class="line">0 1 2 1 0</span><br><span class="line">  0 1 0</span><br><span class="line">    0</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">      0</span><br><span class="line">    0 1 0</span><br><span class="line">  0 1 2 1 0</span><br><span class="line">0 1 2 3 2 1 0</span><br><span class="line">  0 1 2 1 0</span><br><span class="line">    0 1 0</span><br><span class="line">      0</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>印出一個按照他的規則的菱形。<br>每個數字後面必須要有空白，但最後一個字後面不能有空白!</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    0 1 2 3 4 5 6 7 8 9 10  </span><br><span class="line">A             0</span><br><span class="line">B           0 1 0</span><br><span class="line">C         0 1 2 1 0</span><br><span class="line">D       0 1 2 3 2 1 0</span><br><span class="line">E     0 1 2 3 4 3 2 1 0</span><br><span class="line">F   0 1 2 3 4 5 4 3 2 1 0</span><br><span class="line">G     0 1 2 3 4 3 2 1 0</span><br><span class="line">H       0 1 2 3 2 1 0</span><br><span class="line">I         0 1 2 1 0</span><br><span class="line">J           0 1 0</span><br><span class="line">K             0</span><br></pre></td></tr></table></figure><p>要印菱形要先決定起始的位置，這一題菱形的第一列的起始位置是第六行(編號5)。<br>第二列(編號B)的起始位置則是上一列減1，依此類推直到第五列。<br>第六列(編號F)開始起始位置正好相反，是上一列加1。<br>菱形的第一列印的結束位置也是是第六行(編號5)，也就是印完就換下一行。<br>每一行的結束位置的流程則和開始位置相反，先加後減。</p><p>*這樣會印出緊湊的菱形，這一題菱形的數字之間”要加空白，但每一列最後一行不可以有空白”。</p><p>中間沒空白的菱形:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">     *</span><br><span class="line">    ***</span><br><span class="line">   *****</span><br><span class="line">  *******</span><br><span class="line"> *********</span><br><span class="line">***********</span><br><span class="line"> *********</span><br><span class="line">  *******</span><br><span class="line">   *****</span><br><span class="line">    ***</span><br><span class="line">     *</span><br></pre></td></tr></table></figure><p>中間有空白的菱形:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">          *</span><br><span class="line">        * * *</span><br><span class="line">      * * * * *</span><br><span class="line">    * * * * * * *</span><br><span class="line">  * * * * * * * * *</span><br><span class="line">* * * * * * * * * * *</span><br><span class="line">  * * * * * * * * *</span><br><span class="line">    * * * * * * *</span><br><span class="line">      * * * * *</span><br><span class="line">        * * *</span><br><span class="line">          *</span><br></pre></td></tr></table></figure><p>這樣菱形就完成了，剩下就是印出數字!</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9465b85756422ea5cf249d925c518520.js"></script><p><a href="https://codeforces.com/problemset/problem/118/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 簡單 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Simple Game</title>
      <link href="/Simple-Game/"/>
      <content type="html"><![CDATA[<p>One day Misha and Andrew were playing a very simple game. First, each player chooses an integer in the range from 1 to n. Let’s assume that Misha chose number m, and Andrew chose number a.</p><p>Then, by using a random generator they choose a random integer c in the range between 1 and n (any integer from 1 to n is chosen with the same probability), after which the winner is the player, whose number was closer to c. The boys agreed that if m and a are located on the same distance from c, Misha wins.</p><p>Andrew wants to win very much, so he asks you to help him. You know the number selected by Misha, and number n. You need to determine which value of a Andrew must choose, so that the probability of his victory is the highest possible.</p><p>More formally, you need to find such integer a (1 ≤ a ≤ n), that the probability that  is maximal, where c is the equiprobably chosen integer from 1 to n (inclusive).</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (1 ≤ m ≤ n ≤ 10<sup>9</sup>) — the range of numbers in the game, and the number selected by Misha respectively.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single number — such value a, that probability that Andrew wins is the highest. If there are multiple such values, print the minimum of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample test: Andrew wins if c is equal to 2 or 3. The probability that Andrew wins is 2 / 3. If Andrew chooses a = 3, the probability of winning will be 1 / 3. If a = 1, the probability of winning is 0.</p><p>In the second sample test: Andrew wins if c is equal to 1 and 2. The probability that Andrew wins is 1 / 2. For other choices of a the probability of winning is less.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>這題再說如何讓自己贏的機率最大。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們就先找出中間的位置然後看電腦在左邊還是右邊，如果在右邊我們就往左邊一格，這麼一來我們贏的機率就比較大，相反的在右邊我們就往左邊一格。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/50785ac588a8620607b0cee5f52a358f.js"></script><p><a href="https://codeforces.com/problemset/problem/977/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> binary search </tag>
            
            <tag> 普通 </tag>
            
            <tag> two pointers </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Beautiful Matrix</title>
      <link href="/Beautiful-Matrix/"/>
      <content type="html"><![CDATA[<p>You’ve got a 5 × 5 matrix, consisting of 24 zeroes and a single number one. Let’s index the matrix rows by numbers from 1 to 5 from top to bottom, let’s index the matrix columns by numbers from 1 to 5 from left to right. In one move, you are allowed to apply one of the two following transformations to the matrix:</p><blockquote><blockquote><p>1.Swap two neighboring matrix rows, that is, rows with indexes i and i + 1 for some integer i (1 ≤ i &lt; 5).<br>2.Swap two neighboring matrix columns, that is, columns with indexes j and j + 1 for some integer j (1 ≤ j &lt; 5).</p></blockquote></blockquote><p>You think that a matrix looks beautiful, if the single number one of the matrix is located in its middle (in the cell that is on the intersection of the third row and the third column). Count the minimum number of moves needed to make the matrix beautiful.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input consists of five lines, each line contains five integers: the j-th integer in the i-th line of the input represents the element of the matrix that is located on the intersection of the i-th row and the j-th column. It is guaranteed that the matrix consists of 24 zeroes and a single number one.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the minimum number of moves needed to make the matrix beautiful.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0</span><br><span class="line">0 0 0 0 1</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 0 0 0 0</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 1 0 0 0</span><br><span class="line">0 0 0 0 0</span><br><span class="line">0 0 0 0 0</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>計算需要幾步才能把數字移動到中間。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/4926be670df9b7c761c5cae8d0e29a0f.js"></script><p><a href="https://codeforces.com/problemset/problem/263/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Wrong Subtraction</title>
      <link href="/Wrong-Subtraction/"/>
      <content type="html"><![CDATA[<p>Little girl Tanya is learning how to decrease a number by one, but she does it wrong with a number consisting of two or more digits. Tanya subtracts one from a number by the following algorithm:</p><p>● if the last digit of the number is non-zero, she decreases the number by one;<br>● if the last digit of the number is zero, she divides the number by 10 (i.e. removes the last digit).</p><p>You are given an integer number n. Tanya will subtract one from it k times. Your task is to print the result after all k subtractions.</p><p>It is guaranteed that the result will be positive integer number.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains two integer numbers n and k (2≤n≤10<sup>9</sup>, 1≤k≤50) — the number from which Tanya will subtract and the number of subtractions correspondingly.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print one integer number — the result of the decreasing n by one k times.</p><p>It is guaranteed that the result will be positive integer number.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">512 4</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">50</span><br></pre></td></tr></table></figure><p>input:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000000 9</span><br></pre></td></tr></table></figure><p>output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first example corresponds to the following sequence: 512→511→510→51→50.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>N為一個整數，K為減少的次數。<br>這題的規則是:<br>  1.如果該數字的最後一位數字不為零，則將該數字減少一個。<br>  2.如果數字的最後一位為零，則將數字除以10（即刪除最後一位數字）。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>按照規則走。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/4d41d72d84689b5e9c0a91dd551393fe.js"></script><p><a href="https://codeforces.com/problemset/problem/977/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
      
      
        <tags>
            
            <tag> implementation </tag>
            
            <tag> CHU Training </tag>
            
            <tag> CodeForces </tag>
            
            <tag> 新手 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我是留言板</title>
      <link href="/ct/"/>
      <content type="html"><![CDATA[<p>安安我是留言板!<br><img src="A.PNG" alt="A"><br><a href="https://chucs.github.io/site/">題目網址</a></p><a id="more"></a><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4>]]></content>
      
      
        <tags>
            
            <tag> 留言板 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
