<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHUCS</title>
  
  <subtitle>CHUCS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
<<<<<<< HEAD
  <updated>2019-11-17T08:22:20.953Z</updated>
=======
  <updated>2019-11-17T03:16:28.867Z</updated>
>>>>>>> master
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CHUCS</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
<<<<<<< HEAD
    <title>A Twisty Movement</title>
    <link href="http://yoursite.com/A-Twisty-Movement/"/>
    <id>http://yoursite.com/A-Twisty-Movement/</id>
    <published>2019-11-17T08:12:07.000Z</published>
    <updated>2019-11-17T08:22:20.953Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://codeforces.com/problemset/problem/933/A" target="_blank" rel="noopener">題目網址</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入一串由1和2組成的數列，可以左右翻轉任意的範圍一次，問最長的非遞減子序列是多長？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>觀察後得知，題目是在求將數列分成4段之後(每一段的長度可以是0)，第1段1的數量+第2段2的數量+第3段1的數量+第4段2的數量的最大值是多少。因此創個陣列邊輸入邊維持最大值，[1]紀錄只有第1段時的最大值、[2]紀錄只有第1段及第2段時的最大值、[3]跟[4]同理，因次跑完後輸出[4]就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/7ed0e505140cd7796ab9db94fe515dec.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://codeforces.com/problemset/problem/933/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目網址&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="dp" scheme="http://yoursite.com/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>Report</title>
    <link href="http://yoursite.com/Report/"/>
    <id>http://yoursite.com/Report/</id>
    <published>2019-10-26T04:09:55.000Z</published>
    <updated>2019-11-17T08:10:10.352Z</updated>
    
    <content type="html"><![CDATA[<p>Each month Blake gets the report containing main economic indicators of the company “Blake Technologies”.<br><a id="more"></a></p><p>There are n commodities produced by the company. For each of them there is exactly one integer in the final report, that denotes corresponding revenue.</p><p>Before the report gets to Blake, it passes through the hands of m managers. Each of them may reorder the elements in some order. Namely, the i-th manager either sorts first r<sub>i</sub> numbers in non-descending or non-ascending order and then passes the report to the manager i + 1, or directly to Blake (if this manager has number i = m).</p><p>Employees of the “Blake Technologies” are preparing the report right now. You know the initial sequence a<sub>i</sub> of length n and the description of each manager, that is value r<sub>i</sub> and his favourite order. You are asked to speed up the process and determine how the final report will look like.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains two integers n and m (1 ≤ n, m ≤ 200,000) — the number of commodities in the report and the number of managers, respectively.</p><p>The second line contains n integers a<sub>i</sub> (|a<sub>i</sub>| ≤ 10<sup>9</sup>) — the initial report before it gets to the first manager.</p><p>Then follow m lines with the descriptions of the operations managers are going to perform. The i-th of these lines contains two integers ti and r<sub>i</sub> (t<sub>i</sub> ∈ {1, 2}, 1 ≤ r<sub>i</sub> ≤ n), meaning that the i-th manager sorts the first r<sub>i</sub> numbers either in the non-descending (if t<sub>i</sub> = 1) or non-ascending (if t<sub>i</sub> = 2) order.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n integers — the final report, which will be passed to Blake by manager number m.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br><span class="line">1 2 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1 3</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 2 4 3</span><br><span class="line">2 3</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4 1 3</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, the initial report looked like: 1 2 3. After the first manager the first two numbers were transposed: 2 1 3. The report got to Blake in this form.</p><p>In the second sample the original report was like this: 1 2 4 3. After the first manager the report changed to: 4 2 1 3. After the second manager the report changed to: 2 4 1 3. This report was handed over to Blake.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>它會給你一組數列有n個數，而你要依據它的t做判斷是否為升序或降序，再從頭到r做排列，共有m組t和r。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找出最大的r做排序，從剩下沒被排序的數先儲存起來，再從剩下的t和r組，找尋最大的r，然後看上一個最大的r和t為升序或者是降序決定儲存方向t[i-1]和長度r[i-1]-r[i]。</p><p>*建議直接把程式碼複製執行被註解掉的cout會比較清楚。</p><p>ex:<br>4 2<br>1 2 4 3<br>2 3<br>1 2</p><p>4   2   1 |3  :數列<br>-&gt; &lt;- &lt;-    :方向t[i-1],和長度r[i-1] - r[i]<br>2   3   1     :儲存順序</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fc83ef23d16f8afc81b2d1fb8c5bb658.js"></script><p><a href="https://chucs.github.io/site/" target="_blank" rel="noopener">題目網址</a></p>]]></content>
=======
    <title>Is it multiple of 3</title>
    <link href="http://yoursite.com/Is-it-multiple-of-3/"/>
    <id>http://yoursite.com/Is-it-multiple-of-3/</id>
    <published>2019-11-17T03:13:12.000Z</published>
    <updated>2019-11-17T03:16:28.867Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/131/13178.pdf" target="_blank" rel="noopener">UVA 13178</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>連續的1234567891011這樣的字串幫他檢查是否是3的倍數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>根據規則(k-1) % 3 == 0輸出NO。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/9df8f124a87eff28e2500d52dd3a1a01.js"></script>]]></content>
>>>>>>> master
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/131/13178.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 13178&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>How old are you</title>
    <link href="http://yoursite.com/How-old-are-you/"/>
    <id>http://yoursite.com/How-old-are-you/</id>
    <published>2019-11-17T03:09:44.000Z</published>
    <updated>2019-11-17T03:12:37.504Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/112/11219.pdf" target="_blank" rel="noopener">UVA 11219</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>檢查歲數有沒有問題。<br>• ‘Invalid birth date’, if the calculated age is impossible (still going to be born).<br>• ‘Check birth date’, if the calculated age is more than 130.<br>• the calculated age (years old only), otherwise.<br>• If the two dates are the same, the output should be ‘0’.</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>檢查年月日按照上面規則逐一做出來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/32722835e89a939908d24db15261995a.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/112/11219.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 11219&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
<<<<<<< HEAD
      <category term="graphs" scheme="http://yoursite.com/tags/graphs/"/>
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="dfs and similar" scheme="http://yoursite.com/tags/dfs-and-similar/"/>
    
      <category term="shortest paths" scheme="http://yoursite.com/tags/shortest-paths/"/>
    
=======
>>>>>>> master
  </entry>
  
  <entry>
    <title>You can say 11</title>
    <link href="http://yoursite.com/You-can-say-11/"/>
    <id>http://yoursite.com/You-can-say-11/</id>
    <published>2019-11-17T03:05:18.000Z</published>
    <updated>2019-11-17T03:09:11.769Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/109/10929.pdf" target="_blank" rel="noopener">UVA 10929</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>檢查這數字是否是11的倍數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>奇數項加起來A，偶數項加起來B，檢查abs(A - B) % 11 == 0。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/0f1f31a49fd5a25ee5e9988f57ee4910.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/109/10929.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 10929&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>One-Two-Three</title>
    <link href="http://yoursite.com/One-Two-Three/"/>
    <id>http://yoursite.com/One-Two-Three/</id>
    <published>2019-11-17T02:56:25.000Z</published>
    <updated>2019-11-17T03:04:31.548Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/101/10107.pdf" target="_blank" rel="noopener">UVA 10107</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>找中位數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>每次都排序然後計算，如果是偶數就(ary[k/2-1] + ary[k/2]) / 2，奇數就直接印ary[k/2]。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/e746a371f7628ac2bec3bda186854e9c.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/101/10107.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 10107&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Jumping Mario</title>
    <link href="http://yoursite.com/Jumping-Mario/"/>
    <id>http://yoursite.com/Jumping-Mario/</id>
    <published>2019-11-17T02:50:42.000Z</published>
    <updated>2019-11-17T02:55:16.305Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/117/11764.pdf" target="_blank" rel="noopener">UVA 11764</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他檢查馬力歐往上跳幾格，往下跳幾格。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>一個一個檢查左邊大於右邊h++，小於l++，等於continue。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/829c3118699f58d68f304196da026974.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/117/11764.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 11764&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Lumberjack Sequencing</title>
    <link href="http://yoursite.com/Lumberjack-Sequencing/"/>
    <id>http://yoursite.com/Lumberjack-Sequencing/</id>
    <published>2019-11-17T02:47:29.000Z</published>
    <updated>2019-11-17T02:50:11.764Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/119/11942.pdf" target="_blank" rel="noopener">UVA 11942</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他檢查數列是否由大到小或小到大排。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>由左檢查道右看看左邊有沒有大於右邊，然後再檢查回來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/512bf476494b003db28eb225e0ffd375.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/119/11942.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA 11942&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Ring</title>
    <link href="http://yoursite.com/Ring/"/>
    <id>http://yoursite.com/Ring/</id>
    <published>2019-11-17T02:39:00.000Z</published>
    <updated>2019-11-17T02:46:13.188Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_8_D" target="_blank" rel="noopener">Aizu ITP1_8_D</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他找出A字串在不再B字串裡面，需要連續的。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先複製一個字串在源自串後面模仿一個環的樣子，然後逐一檢查一樣的話計數器加一，檢查完後檢查計數器的長度是否跟原自串一樣長，一樣就不檢查然後印答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/fa4b745d816d676bac397dcd0d05b2bd.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_8_D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Aizu ITP1_8_D&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>All in All</title>
    <link href="http://yoursite.com/All-in-All/"/>
    <id>http://yoursite.com/All-in-All/</id>
    <published>2019-11-17T02:28:54.000Z</published>
    <updated>2019-11-17T02:40:14.379Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/103/10340.pdf" target="_blank" rel="noopener">UVA10340</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他找出A字串在不再B字串裡面，沒有連續沒關西。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>逐一檢查有沒有匹配到相同的字，如果有就換下一個字直到然後次數加一，最後檢查相同的次數等不等於原本的長度，就可以知道答案了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/8f601b9d5c30cf3a6bd30a1c93650b31.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/103/10340.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA10340&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>WERTYU</title>
    <link href="http://yoursite.com/WERTYU/"/>
    <id>http://yoursite.com/WERTYU/</id>
    <published>2019-11-17T02:21:35.000Z</published>
    <updated>2019-11-17T02:27:42.735Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/100/10082.pdf" target="_blank" rel="noopener">UVA10082</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他請你幫他解密，規則是他敲的鍵盤左邊那個才是原本的答案，例如他敲O你要輸出I這樣。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們可以先建一個鍵盤的表，然後逐一搜尋，找到一樣的我就取他左邊那個，空白的話就直接印。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/13b38d45451133452556dd4e7fd5cdaa.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/100/10082.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA10082&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/Hello-World/"/>
    <id>http://yoursite.com/Hello-World/</id>
    <published>2019-11-17T02:09:51.000Z</published>
    <updated>2019-11-17T02:22:29.089Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/116/11636.pdf" target="_blank" rel="noopener">UVA11636</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>有個人他很懶，他懶得打這麼多個Hello World所以他只用複製的，假如他要印7個Hello World!，他要複製3次，因為第一次他複製他打好的一個Hello World，變2個，然後再複製便4個，然後再複製3個變7個。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們可以先建出一個答案表提供我們查詢以免超時，i是他需要印的數量，而每次複製我都檢查複製出來的最大值有沒有小於等於複製出來的數量，像是上面範例5、6、7、8都只需要複製3次，因為複製到三次的時候最大值複製數是8個，以此類推往下建表把所有答案都列出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c9a27cb1bb5ca17fe0914ef6dcc0cfd4.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/116/11636.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA11636&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Print a Frame</title>
    <link href="http://yoursite.com/Print-a-Frame/"/>
    <id>http://yoursite.com/Print-a-Frame/</id>
    <published>2019-11-17T02:03:12.000Z</published>
    <updated>2019-11-17T02:22:20.653Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_5_B" target="_blank" rel="noopener">Aizu ITP1_5_B</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫他印出一個N*M的農場</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>把他切成三塊來印，先印一排#，在印中間部分，最後在印出#，一步一步時做出來。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/5e547e5c108bdb7fa47d5036c02f5f2d.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=ITP1_5_B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Aizu ITP1_5_B&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Hashmat the Brave Warrior</title>
    <link href="http://yoursite.com/Hashmat-the-Brave-Warrior/"/>
    <id>http://yoursite.com/Hashmat-the-Brave-Warrior/</id>
    <published>2019-11-17T02:00:07.000Z</published>
    <updated>2019-11-17T02:22:26.274Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://onlinejudge.org/external/100/10055.pdf" target="_blank" rel="noopener">UVA10055</a><br><a id="more"></a></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>幫忙計算兵力差距</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>相減加絕對值，記得要long long不然會爆掉。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/c247b18829e24fb33734da0e4fab51b8.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://onlinejudge.org/external/100/10055.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UVA10055&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Report</title>
    <link href="http://yoursite.com/Report/"/>
    <id>http://yoursite.com/Report/</id>
    <published>2019-10-26T04:09:55.000Z</published>
    <updated>2019-11-17T01:58:31.736Z</updated>
    
    <content type="html"><![CDATA[<p>Each month Blake gets the report containing main economic indicators of the company “Blake Technologies”.<br><a id="more"></a></p><p>There are n commodities produced by the company. For each of them there is exactly one integer in the final report, that denotes corresponding revenue.</p><p>Before the report gets to Blake, it passes through the hands of m managers. Each of them may reorder the elements in some order. Namely, the i-th manager either sorts first r<sub>i</sub> numbers in non-descending or non-ascending order and then passes the report to the manager i + 1, or directly to Blake (if this manager has number i = m).</p><p>Employees of the “Blake Technologies” are preparing the report right now. You know the initial sequence a<sub>i</sub> of length n and the description of each manager, that is value r<sub>i</sub> and his favourite order. You are asked to speed up the process and determine how the final report will look like.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains two integers n and m (1 ≤ n, m ≤ 200,000) — the number of commodities in the report and the number of managers, respectively.</p><p>The second line contains n integers a<sub>i</sub> (|a<sub>i</sub>| ≤ 10<sup>9</sup>) — the initial report before it gets to the first manager.</p><p>Then follow m lines with the descriptions of the operations managers are going to perform. The i-th of these lines contains two integers ti and r<sub>i</sub> (t<sub>i</sub> ∈ {1, 2}, 1 ≤ r<sub>i</sub> ≤ n), meaning that the i-th manager sorts the first r<sub>i</sub> numbers either in the non-descending (if t<sub>i</sub> = 1) or non-ascending (if t<sub>i</sub> = 2) order.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n integers — the final report, which will be passed to Blake by manager number m.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, the initial report looked like: 1 2 3. After the first manager the first two numbers were transposed: 2 1 3. The report got to Blake in this form.</p><p>In the second sample the original report was like this: 1 2 4 3. After the first manager the report changed to: 4 2 1 3. After the second manager the report changed to: 2 4 1 3. This report was handed over to Blake.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>它會給你一組數列有n個數，而你要依據它的t做判斷是否為升序或降序，再從頭到r做排列，共有m組t和r。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找出最大的r做排序，從剩下沒被排序的數先儲存起來，再從剩下的t和r組，找尋最大的r，然後看上一個最大的r和t為升序或者是降序決定儲存方向t[i-1]和長度r[i-1]-r[i]。</p><p>*建議直接把程式碼複製執行被註解掉的cout會比較清楚。</p><p>ex:<br>4 2<br>1 2 4 3<br>2 3<br>1 2</p><p>4   2   1 |3  :數列<br>-&gt; &lt;- &lt;-    :方向t[i-1],和長度r[i-1] - r[i]<br>2   3   1     :儲存順序</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fc83ef23d16f8afc81b2d1fb8c5bb658.js"></script><p><a href="https://chucs.github.io/site/" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Each month Blake gets the report containing main economic indicators of the company “Blake Technologies”.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="data structures" scheme="http://yoursite.com/tags/data-structures/"/>
    
  </entry>
  
  <entry>
    <title>Two Buttons</title>
    <link href="http://yoursite.com/Two-Buttons/"/>
    <id>http://yoursite.com/Two-Buttons/</id>
    <published>2019-10-26T03:52:34.000Z</published>
    <updated>2019-10-26T08:52:43.668Z</updated>
    
    <content type="html"><![CDATA[<p>Vasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer.<br><a id="more"></a></p><p>After clicking the red button, device multiplies the displayed number by two. After clicking the blue button, device subtracts one from the number on the display. </p><p>If at some point the number stops being positive, the device breaks down. The display can show arbitrarily large numbers. Initially, the display shows number n.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first and the only line of the input contains two distinct integers n and m (1 ≤ n, m ≤ 10<sup>4</sup>), separated by a space .</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single number — the minimum number of times one needs to push the button required to get the number m out of number n.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 6</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example you need to push the blue button once, and then push the red button once.</p><p>In the second example, doubling the number is unnecessary, so we need to push the blue button nine times.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>它給你兩個按鈕和一個數值n，一個做數值*2的動作，另一個則做數值-1的動作，試問最少需要案幾次按鈕才能到達目標值n。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>2(2((2n)+1)) = m  –&gt;  n = (((m/2)-1)/2)/2<br>使用類似反矩陣的概念，去讓m接近n，因為在n做運算時必定為整數則反之亦然，所以m做運算時絕對不能出現小數點，意思是m做除以2的運算時必須為偶數。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/775e4e0b3a627e88d921dea99c9d424a.js"></script><p><a href="https://chucs.github.io/site/" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vasya has found a strange device. On the front panel of a device there are: a red button, a blue button and a display showing some positive integer.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="graphs" scheme="http://yoursite.com/tags/graphs/"/>
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="dfs and similar" scheme="http://yoursite.com/tags/dfs-and-similar/"/>
    
      <category term="shortest paths" scheme="http://yoursite.com/tags/shortest-paths/"/>
    
  </entry>
  
  <entry>
    <title>Duff in Love</title>
    <link href="http://yoursite.com/Duff-in-Love/"/>
    <id>http://yoursite.com/Duff-in-Love/</id>
    <published>2019-10-26T03:28:10.000Z</published>
    <updated>2019-10-26T08:52:43.660Z</updated>
    
    <content type="html"><![CDATA[<p>Duff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a &gt; 1 such that a2 is a divisor of x.<br><a id="more"></a></p><p>Malek has a number store! In his store, he has only divisors of positive integer n (and he has all of them). As a birthday present, Malek wants to give her a lovely number from his store. He wants this number to be as big as possible.</p><p>Malek always had issues in math, so he asked for your help. Please tell him what is the biggest lovely number in his store.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first and only line of input contains one integer, n (1 ≤ n ≤ 10<sup>12</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the answer in one line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In first sample case, there are numbers 1, 2, 5 and 10 in the shop. 10 isn’t divisible by any perfect square, so 10 is lovely.</p><p>In second sample case, there are numbers 1, 2, 3, 4, 6 and 12 in the shop. 12 is divisible by 4 = 2<sup>2</sup>, so 12 is not lovely, while 6 is indeed lovely.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入它給你一個數字n，它因數分解的集合的因數分解不希望有任何可以被開根號的因數。如果有，希望你能把他丟棄，然後再組成新的數。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>n做出質因數分解，把重複出現的數去除，再把集合裡的數相乘，這樣就不會有可以被開根號的因數了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/fc37c058fd2adfcffbd5b71e68747a2e.js"></script><p><a href="https://codeforces.com/contest/588/problem/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Duff is in love with lovely numbers! A positive integer x is called lovely if and only if there is no such positive integer a &amp;gt; 1 such that a2 is a divisor of x.&lt;br&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>Pipeline</title>
    <link href="http://yoursite.com/Pipeline/"/>
    <id>http://yoursite.com/Pipeline/</id>
    <published>2019-10-20T14:51:40.000Z</published>
    <updated>2019-10-26T08:52:43.668Z</updated>
    
    <content type="html"><![CDATA[<p>Vova, the Ultimate Thule new shaman, wants to build a pipeline. As there are exactly n houses in Ultimate Thule, Vova wants the city to have exactly n pipes, each such pipe should be connected to the water supply.<br><a id="more"></a><br>A pipe can be connected to the water supply if there’s water flowing out of it. Initially Vova has only one pipe with flowing water. Besides, Vova has several splitters.</p><p>A splitter is a construction that consists of one input (it can be connected to a water pipe) and x output pipes. When a splitter is connected to a water pipe, water flows from each output pipe. You can assume that the output pipes are ordinary pipes. For example, you can connect water supply to such pipe if there’s water flowing out from it. At most one splitter can be connected to any water pipe.</p><p><img src="A.PNG" alt="A"></p><p>Vova has one splitter of each kind: with 2, 3, 4, …, k outputs. Help Vova use the minimum number of splitters to build the required pipeline or otherwise state that it’s impossible.</p><p>Vova needs the pipeline to have exactly n pipes with flowing out water. Note that some of those pipes can be the output pipes of the splitters.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two space-separated integers n and k (1 ≤ n ≤ 10<sup>18</sup>, 2 ≤ k ≤ 10<sup>9</sup>).</p><p>Please, do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use the cin, cout streams or the %I64d specifier.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the minimum number of splitters needed to build the pipeline. If it is impossible to build a pipeline with the given splitters, print -1.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 4</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>Vova希望在一個叫the Ultimate Thule new shaman的城市建立一條管道，城市中有n座房子，因此Vova希望剛好有n條管道，因此每條這樣的管道都應連接到供水系統。如果有水流出，則可以將管道連接到供水系統。最初，Vova只有一根流水的管道。此外，Vova有幾個分離器。</p><p>Vova有每種分配器：具有2、3、4，…，k個輸出。幫助Vova使用最少數量的拆分器來構建所需的管道，或者以其他方式聲明這是不可能的。</p><p>Vova需要管道中有正好n根流出水的管道。其中一些管道可以是分配器的輸出管道。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>因為分離器是2,3,4,…,k個輸出，則在正常情況下只要不超過所有分離器組合起來的輸出總數就一定能滿足條件，尋找n到k的分離器組合的輸出總數，如超過目標值或等於目標值，則答案為(k-n+1)個。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/89snnfk561/e95472b21f34e1b7ca5440a4a11da55a.js"></script><p><a href="https://codeforces.com/problemset/problem/287/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vova, the Ultimate Thule new shaman, wants to build a pipeline. As there are exactly n houses in Ultimate Thule, Vova wants the city to have exactly n pipes, each such pipe should be connected to the water supply.&lt;br&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="binary search" scheme="http://yoursite.com/tags/binary-search/"/>
    
  </entry>
  
  <entry>
    <title>Ice Skating</title>
    <link href="http://yoursite.com/Ice-Skating/"/>
    <id>http://yoursite.com/Ice-Skating/</id>
    <published>2019-10-18T09:22:26.000Z</published>
    <updated>2019-10-21T12:08:55.730Z</updated>
    
    <content type="html"><![CDATA[<p>Bajtek is learning to skate on ice. He’s a beginner, so his only mode of transportation is pushing off from a snow drift to the north, east, south or west and sliding until he lands in another snow drift. He has noticed that in this way it’s impossible to get from some snow drifts to some other by any sequence of moves. He now wants to heap up some additional snow drifts, so that he can get from any snow drift to any other one. He asked you to find the minimal number of snow drifts that need to be created.</p><p>We assume that Bajtek can only heap up snow drifts at integer coordinates.</p><a id="more"></a><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of input contains a single integer n (1 ≤ n ≤ 100) — the number of snow drifts. Each of the following n lines contains two integers x<sub>i</sub> and y<sub>i</sub> (1 ≤ x<sub>i</sub>, y<sub>i</sub> ≤ 1000) — the coordinates of the i-th snow drift.</p><p>Note that the north direction coinсides with the direction of Oy axis, so the east direction coinсides with the direction of the Ox axis. All snow drift’s locations are distinct.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the minimal number of snow drifts that need to be created in order for Bajtek to be able to reach any snow drift from any other one.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 1</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 1</span><br><span class="line">4 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>Bajtek是一個滑雪的初心者，而它只能滑行四個方向(東南西北)，在滑行的途中它無法停下，除非撞到雪堆它才能停下改變行滑行的方向(或不改變)，而他需要堆積額外的雪堆來確保每個雪堆他都能前往。他問最少需要多少額外的雪堆。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>在輸入時會給你雪堆數和它在平面的座標，而現有的雪堆能組成多個區塊(單一或複數個雪堆，無法前往其他雪堆或能相互前往)，我們需要找出共有幾個區塊並計數，假設共為n個區塊，則最少需要(n-1)個雪堆來組成統一的大區塊，而(n-1)就是我們要的答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/89snnfk561/ec5c3671547a0f0dff77dbacaafbe7ec.js"></script><br><a href="https://codeforces.com/contest/217/problem/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Bajtek is learning to skate on ice. He’s a beginner, so his only mode of transportation is pushing off from a snow drift to the north, east, south or west and sliding until he lands in another snow drift. He has noticed that in this way it’s impossible to get from some snow drifts to some other by any sequence of moves. He now wants to heap up some additional snow drifts, so that he can get from any snow drift to any other one. He asked you to find the minimal number of snow drifts that need to be created.&lt;/p&gt;
&lt;p&gt;We assume that Bajtek can only heap up snow drifts at integer coordinates.&lt;/p&gt;
    
    </summary>
    
    
      <category term="graphs" scheme="http://yoursite.com/tags/graphs/"/>
    
      <category term="brute force" scheme="http://yoursite.com/tags/brute-force/"/>
    
      <category term="dfs and similar" scheme="http://yoursite.com/tags/dfs-and-similar/"/>
    
      <category term="dus" scheme="http://yoursite.com/tags/dus/"/>
    
  </entry>
  
  <entry>
    <title>Binary Number</title>
    <link href="http://yoursite.com/Binary-Number/"/>
    <id>http://yoursite.com/Binary-Number/</id>
    <published>2019-10-18T07:46:55.000Z</published>
    <updated>2019-10-26T08:52:43.655Z</updated>
    
    <content type="html"><![CDATA[<p>Little walrus Fangy loves math very much. That’s why when he is bored he plays with a number performing some operations.<br><a id="more"></a><br>Fangy takes some positive integer x and wants to get a number one from it. While x is not equal to 1, Fangy repeats the following action: if x is odd, then he adds 1 to it, otherwise he divides x by 2. Fangy knows that for any positive integer number the process ends in finite time.</p><p>How many actions should Fangy perform to get a number one from number x?</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a positive integer x in a binary system. It is guaranteed that the first digit of x is different from a zero and the number of its digits does not exceed 106.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the required number of actions.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1001001</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">101110</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Let’s consider the third sample. Number 101110 is even, which means that we should divide it by 2. After the dividing Fangy gets an odd number 10111 and adds one to it. Number 11000 can be divided by 2 three times in a row and get number 11. All that’s left is to increase the number by one (we get 100), and then divide it by 2 two times in a row. As a result, we get 1.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>他給你一個二進制碼，而當他為偶數時除以2，反之加1，直到數字為1為止，計算他總共做了幾次更動。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用字串儲存數字，判斷最後的位數如果是1，進位往前直到0，經過的位數做更改，如果進位超出範圍在前面加上1，如果是0消除它，以上做一次判斷計數加1。直到整個字串為1</p><p>進階:<br>一樣用字串儲存做一次迴圈確認為1的字元大於等於2個，成立在右到左第1個1字元之後的0，確認有幾個加上1再加上整個字串的長度就是答案了。<br>不成立則是屬出0的個數就是答案了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/89snnfk561/fcb178773a50568b10ba9fe62829f502.js"></script><br><a href="https://codeforces.com/problemset/problem/92/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Little walrus Fangy loves math very much. That’s why when he is bored he plays with a number performing some operations.&lt;br&gt;
    
    </summary>
    
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
  </entry>
  
  <entry>
    <title>The 3n + 1 problem</title>
    <link href="http://yoursite.com/The-3n-1-problem/"/>
    <id>http://yoursite.com/The-3n-1-problem/</id>
    <published>2019-10-15T11:30:25.000Z</published>
    <updated>2019-10-21T12:08:55.733Z</updated>
    
    <content type="html"><![CDATA[<p>Problems in Computer Science are often classified as belonging to a certain class of problems (e.g.,NP, Unsolvable, Recursive). In this problem you will be analyzing a property of an algorithm whose classification is not known for all possible inputs.<br><a id="more"></a><br>Consider the following algorithm:</p><ol><li>input n</li><li>print n</li><li>if n = 1 then STOP</li><li>if n is odd then n ←− 3n + 1</li><li>else n ←− n/2</li><li>GOTO 2</li></ol><p>Given the input 22, the following sequence of numbers will be printed<br>22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1</p><p>It is conjectured that the algorithm above will terminate (when a 1 is printed) for any integral input value. Despite the simplicity of the algorithm, it is unknown whether this conjecture is true. It has been verified, however, for all integers n such that 0 &lt; n &lt; 1, 000, 000 (and, in fact, for many morenumbers than this.)</p><p>Given an input n, it is possible to determine the number of numbers printed before and including the 1 is printed. For a given n this is called the cycle-length of n. In the example above, the cycle length of 22 is 16.</p><p>For any two numbers i and j you are to determine the maximum cycle length over all numbers between and including both i and j.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The input will consist of a series of pairs of integers i and j, one pair of integers per line. All integers will be less than 10,000 and greater than 0.</p><p>You should process all pairs of integers and for each pair determine the maximum cycle length over all integers between and including i and j.</p><p>You can assume that no operation overflows a 32-bit integer.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>For each pair of input integers i and j you should output i, j, and the maximum cycle length for integers between and including i and j. </p><p>These three numbers should be separated by at least one space with all three numbers on one line and with one line of output for each line of input. </p><p>The integers i and j must appear in the output in the same order in which they appeared in the input and should be followed by the maximum cycle length (on the same line).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br><span class="line">100 200</span><br><span class="line">201 210</span><br><span class="line">900 1000</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 10 20</span><br><span class="line">100 200 125</span><br><span class="line">201 210 89</span><br><span class="line">900 1000 174</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>就在i到j之間經過上面的演算法做一串數列計算它的長度取其中的最大值。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>把循環的演算法先寫出來回傳它的長度，在i到j的數計算每個數進入演算法重複的次數，取最大的一個，把i，j和最大的數印出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/89snnfk561/63c386f78060c514d21dd5db59bfc802.js"></script><br><a href="https://onlinejudge.org/external/1/100.pdf" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Problems in Computer Science are often classified as belonging to a certain class of problems (e.g.,NP, Unsolvable, Recursive). In this problem you will be analyzing a property of an algorithm whose classification is not known for all possible inputs.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
<<<<<<< HEAD
=======
  <entry>
    <title>Little Elephant and Numbers</title>
    <link href="http://yoursite.com/Little-Elephant-and-Numbers/"/>
    <id>http://yoursite.com/Little-Elephant-and-Numbers/</id>
    <published>2019-10-15T05:25:56.000Z</published>
    <updated>2019-10-15T06:24:29.537Z</updated>
    
    <content type="html"><![CDATA[<p>The Little Elephant loves numbers.</p><p>He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations.</p><p>Help the Little Elephant to find the described number.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>A single line contains a single integer x (1 ≤ x ≤ 10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print an integer — the answer to the problem.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N，問你所有N的因數中，有幾個因數有使用到N本身使用過的數字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找因數只需要找到平方根就好。另一邊的因數可以用除的得知。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/572bf3a7c7b6f81a7a57a5831208c312.js"></script><br><a href="https://codeforces.com/problemset/problem/221/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The Little Elephant loves numbers.&lt;/p&gt;
&lt;p&gt;He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations.&lt;/p&gt;
&lt;p&gt;Help the Little Elephant to find the described number.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="新手" scheme="http://yoursite.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
>>>>>>> master
</feed>
