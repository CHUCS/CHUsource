<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHUCS</title>
  
  <subtitle>CHUCS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-15T06:24:29.537Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CHUCS</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Little Elephant and Numbers</title>
    <link href="http://yoursite.com/Little-Elephant-and-Numbers/"/>
    <id>http://yoursite.com/Little-Elephant-and-Numbers/</id>
    <published>2019-10-15T05:25:56.000Z</published>
    <updated>2019-10-15T06:24:29.537Z</updated>
    
    <content type="html"><![CDATA[<p>The Little Elephant loves numbers.</p><p>He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations.</p><p>Help the Little Elephant to find the described number.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>A single line contains a single integer x (1 ≤ x ≤ 10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In a single line print an integer — the answer to the problem.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N，問你所有N的因數中，有幾個因數有使用到N本身使用過的數字。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>找因數只需要找到平方根就好。另一邊的因數可以用除的得知。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/572bf3a7c7b6f81a7a57a5831208c312.js"></script><br><a href="https://codeforces.com/problemset/problem/221/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The Little Elephant loves numbers.&lt;/p&gt;
&lt;p&gt;He has a positive integer x. The Little Elephant wants to find the number of positive integers d, such that d is the divisor of x, and x and d have at least one common (the same) digit in their decimal representations.&lt;/p&gt;
&lt;p&gt;Help the Little Elephant to find the described number.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="新手" scheme="http://yoursite.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Magical Boxes</title>
    <link href="http://yoursite.com/Magical-Boxes/"/>
    <id>http://yoursite.com/Magical-Boxes/</id>
    <published>2019-10-15T05:25:45.000Z</published>
    <updated>2019-10-15T06:07:44.403Z</updated>
    
    <content type="html"><![CDATA[<p>Emuskald is a well-known illusionist. One of his trademark tricks involves a set of magical boxes. The essence of the trick is in packing the boxes inside other boxes.</p><p>From the top view each magical box looks like a square with side length equal to 2<sup>k</sup> (k is an integer, k ≥ 0) units. A magical box v can be put inside a magical box u, if side length of v is strictly less than the side length of u. In particular, Emuskald can put 4 boxes of side length 2<sup>k - 1</sup> into one box of side length 2<sup>k</sup>, or as in the following figure:<br><a id="more"></a><br><img src="A.PNG" alt="A"><br>Emuskald is about to go on tour performing around the world, and needs to pack his magical boxes for the trip. He has decided that the best way to pack them would be inside another magical box, but magical boxes are quite expensive to make. Help him find the smallest magical box that can fit all his boxes.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of input contains an integer n (1 ≤ n ≤ 10<sup>5</sup>), the number of different sizes of boxes Emuskald has. Each of following n lines contains two integers k<sub>i</sub> and a<sub>i</sub> (0 ≤ k<sub>i</sub> ≤ 10<sup>9</sup>, 1 ≤ a<sub>i</sub> ≤ 10<sup>9</sup>), which means that Emuskald has ai boxes with side length 2<sup>k<sub>i</sub></sup>. It is guaranteed that all of ki are distinct.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output a single integer p, such that the smallest magical box that can contain all of Emuskald’s boxes has side length 2<sup>p</sup>.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">0 3</span><br><span class="line">1 5</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">0 4</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 10</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Picture explanation. If we have 3 boxes with side length 2 and 5 boxes with side length 1, then we can put all these boxes inside a box with side length 4, for example, as shown in the picture.</p><p>In the second test case, we can put all four small boxes into a box with side length 2.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N，再輸入N種箱子的尺寸跟數量， 1個箱子可以裝1~4個比自己小一號的箱子，問你需要一個多大的箱子才能裝得下全部的箱子。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>1個箱子可以裝4個比自己小一號的箱子，所以先把輸入的箱子按尺寸大到小排序，記錄現在最大的尺寸，計算可不可以裝得下那些比較小的，要注意的是同一尺寸的箱子最多只會有1000000000個，所以可以裝超過這個數字就不用判斷了，一定裝的下；裝不下的就計算需要幾個目前最大的箱子才裝得下，先記著。</p><p>最後跑完全部後再用需要幾個目前最大的箱子來算需要多大的箱子。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/ffe732aec0bdd1ce3ec815518e180d71.js"></script><br><a href="https://codeforces.com/problemset/problem/269/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Emuskald is a well-known illusionist. One of his trademark tricks involves a set of magical boxes. The essence of the trick is in packing the boxes inside other boxes.&lt;/p&gt;
&lt;p&gt;From the top view each magical box looks like a square with side length equal to 2&lt;sup&gt;k&lt;/sup&gt; (k is an integer, k ≥ 0) units. A magical box v can be put inside a magical box u, if side length of v is strictly less than the side length of u. In particular, Emuskald can put 4 boxes of side length 2&lt;sup&gt;k - 1&lt;/sup&gt; into one box of side length 2&lt;sup&gt;k&lt;/sup&gt;, or as in the following figure:&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Snow Footprints</title>
    <link href="http://yoursite.com/Snow-Footprints/"/>
    <id>http://yoursite.com/Snow-Footprints/</id>
    <published>2019-10-15T05:25:36.000Z</published>
    <updated>2019-10-15T06:07:45.528Z</updated>
    
    <content type="html"><![CDATA[<p>There is a straight snowy road, divided into n blocks. The blocks are numbered from 1 to n from left to right. If one moves from the i-th block to the (i + 1)-th block, he will leave a right footprint on the i-th block. Similarly, if one moves from the i-th block to the (i - 1)-th block, he will leave a left footprint on the i-th block. If there already is a footprint on the i-th block, the new footprint will cover the old one.<br><a id="more"></a><br><img src="A.PNG" alt="A"><br>At the beginning, there were no footprints. Then polar bear Alice starts from the s-th block, makes a sequence of moves and ends in the t-th block. It is known that Alice never moves outside of the road.</p><p>You are given the description of Alice’s footprints. Your task is to find a pair of possible values of s, t by looking at the footprints.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains integer n (3 ≤ n ≤ 1000).</p><p>The second line contains the description of the road — the string that consists of n characters. Each character will be either “.” (a block without footprint), or “L” (a block with a left footprint), “R” (a block with a right footprint).</p><p>It’s guaranteed that the given string contains at least one character not equal to “.”. Also, the first and the last character will always be “.”. It’s guaranteed that a solution exists.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two space-separated integers — the values of s and t. If there are several possible solutions you can print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">..RRLL...</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">.RRRLLLLL..</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 5</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first test sample is the one in the picture.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入一串腳印，問你其中一種可能的起點跟終點是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>● 分析一下可以得知實際上只會有三種模式</p><ol><li>只有R</li><li>只有L</li><li>左邊任意個R接右邊任意個L。</li></ol><p>● 先記錄R區間跟L區間的頭尾，沒有L區間就是模式1，直接輸出答案；沒有R區間就是模式2，直接輸出答案；兩個都有就視為從最左邊走到最右邊再走回來到交界。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/fa722ac9d242d3ee030746ce5cec083c.js"></script><br><a href="https://codeforces.com/problemset/problem/298/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There is a straight snowy road, divided into n blocks. The blocks are numbered from 1 to n from left to right. If one moves from the i-th block to the (i + 1)-th block, he will leave a right footprint on the i-th block. Similarly, if one moves from the i-th block to the (i - 1)-th block, he will leave a left footprint on the i-th block. If there already is a footprint on the i-th block, the new footprint will cover the old one.&lt;br&gt;
    
    </summary>
    
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Multiplication-Table</title>
    <link href="http://yoursite.com/Multiplication-Table/"/>
    <id>http://yoursite.com/Multiplication-Table/</id>
    <published>2019-09-30T12:11:36.000Z</published>
    <updated>2019-09-30T12:39:26.444Z</updated>
    
    <content type="html"><![CDATA[<p>Petya studies positional notations. He has already learned to add and subtract numbers in the systems of notations with different radices and has moved on to a more complicated action — multiplication. To multiply large numbers one has to learn the multiplication table. Unfortunately, in the second grade students learn only the multiplication table of decimals (and some students even learn it in the first grade). Help Petya make a multiplication table for numbers in the system of notations with the radix k.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer k (2 ≤ k ≤ 10) — the radix of the system.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output the multiplication table for the system of notations with the radix k. The table must contain k - 1 rows and k - 1 columns. The element on the crossing of the i-th row and the j-th column is equal to the product of i and j in the system of notations with the radix k. Each line may have any number of spaces between the numbers (the extra spaces in the samples are put for clarity).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1  2  3  4  5  6  7  8  9</span><br><span class="line">2  4  6  8 10 12 14 16 18</span><br><span class="line">3  6  9 12 15 18 21 24 27</span><br><span class="line">4  8 12 16 20 24 28 32 36</span><br><span class="line">5 10 15 20 25 30 35 40 45</span><br><span class="line">6 12 18 24 30 36 42 48 54</span><br><span class="line">7 14 21 28 35 42 49 56 63</span><br><span class="line">8 16 24 32 40 48 56 64 72</span><br><span class="line">9 18 27 36 45 54 63 72 81</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1  2</span><br><span class="line">2 11</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>製作一個乘法表，而這個乘法表會是 (k-1)*(k-1) 的形式，而成出的數都是K進位，試著列出乘法表的數 (k不會大於10)。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>建立乘法表，唯一的難點在轉進位，其他應該沒甚麼問題。</p><p>轉進位只需要用10進位不斷的對要轉的進位取餘數之後逆著串起來就行了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/f1cf5795fd72cf54ac86b3643bcccc45.js"></script><br><a href="https://codeforces.com/problemset/problem/39/H" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Petya studies positional notations. He has already learned to add and subtract numbers in the systems of notations with different radices and has moved on to a more complicated action — multiplication. To multiply large numbers one has to learn the multiplication table. Unfortunately, in the second grade students learn only the multiplication table of decimals (and some students even learn it in the first grade). Help Petya make a multiplication table for numbers in the system of notations with the radix k.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Rectangles</title>
    <link href="http://yoursite.com/Rectangles/"/>
    <id>http://yoursite.com/Rectangles/</id>
    <published>2019-09-30T12:11:22.000Z</published>
    <updated>2019-09-30T12:39:28.318Z</updated>
    
    <content type="html"><![CDATA[<p>You are given n rectangles on a plane with coordinates of their bottom left and upper right points. Some (n−1) of the given n rectangles have some common point. A point belongs to a rectangle if this point is strictly inside the rectangle or belongs to its boundary.</p><p>Find any point with integer coordinates that belongs to at least (n−1) given rectangles.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (2≤n≤132674) — the number of given rectangles.</p><p>Each the next n lines contains four integers x1, y1, x2 and y2 (−10<sup>9</sup>≤x1&lt;x2≤10<sup>9</sup>, −10<sup>9</sup>≤y1&lt;y2≤10<sup>9</sup>) — the coordinates of the bottom left and upper right corners of a rectangle.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two integers x and y — the coordinates of any point that belongs to at least (n−1) given rectangles.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 0 1 1</span><br><span class="line">1 1 2 2</span><br><span class="line">3 0 4 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 0 1 1</span><br><span class="line">0 1 1 2</span><br><span class="line">1 0 2 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">0 0 5 5</span><br><span class="line">0 0 4 4</span><br><span class="line">1 1 4 4</span><br><span class="line">1 1 4 4</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">0 0 10 8</span><br><span class="line">1 2 6 7</span><br><span class="line">2 3 5 6</span><br><span class="line">3 4 4 5</span><br><span class="line">8 1 9 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The picture below shows the rectangles in the first and second samples. The possible answers are highlighted.<br><img src="A.PNG" alt="A"><br>The picture below shows the rectangles in the third and fourth samples.<br><img src="B.PNG" alt="B"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>提供n個矩形，其坐標分別為左下角和右上角。 給定的n個矩形中的某些（n-1）個具有一些公共點。 如果某點嚴格位於矩形內或屬於其邊界，則該點屬於矩形。</p><p>找具有至少屬於（n-1）個給定矩形的整數坐標的任何點。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>要在N−1個矩形中，因此只要一個一個刪去後，判斷剩下的N−1 個矩形有沒有套在一起就可以了。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/9bd6c597f308d42107b1326c4e318330.js"></script><br><a href="https://codeforces.com/problemset/problem/1028/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;You are given n rectangles on a plane with coordinates of their bottom left and upper right points. Some (n−1) of the given n rectangles have some common point. A point belongs to a rectangle if this point is strictly inside the rectangle or belongs to its boundary.&lt;/p&gt;
&lt;p&gt;Find any point with integer coordinates that belongs to at least (n−1) given rectangles.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
      <category term="geometry" scheme="http://yoursite.com/tags/geometry/"/>
    
  </entry>
  
  <entry>
    <title>Plant</title>
    <link href="http://yoursite.com/Plant/"/>
    <id>http://yoursite.com/Plant/</id>
    <published>2019-09-30T12:11:01.000Z</published>
    <updated>2019-10-15T05:34:33.210Z</updated>
    
    <content type="html"><![CDATA[<p>Dwarfs have planted a very interesting plant, which is a triangle directed “upwards”. This plant has an amusing feature. After one year a triangle plant directed “upwards” divides into four triangle plants: three of them will point “upwards” and one will point “downwards”. After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.<br><a id="more"></a><br><img src="A.PNG" alt="A"><br>Help the dwarfs find out how many triangle plants that point “upwards” will be in n years.</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (0 ≤ n ≤ 10<sup>18</sup>) — the number of full years when the plant grew.</p><p>Please do not use the %lld specifier to read or write 64-bit integers in С++. It is preferred to use cin, cout streams or the %I64d specifier.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print a single integer — the remainder of dividing the number of plants that will point “upwards” in n years by 1000000007 (10<sup>9</sup> + 7).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>觀察後可以得到N=1時向上的三角形有1+2=3個，N=2時有1+2+3+4=1+2+…+2<sup>2</sup>=10個，因此推導出輸入N時有1+…+2N=((2<sup>N</sup>+1) 2<sup>N</sup>)/2個三角形，因此題目可以等價為求((2<sup>N</sup>+1) 2<sup>N</sup>)/2%1000000007<br>另外一個要知道的數學知識是:<br>(a<em>b</em>c*d)%e≡((a%e)∙(b%e)∙(c%e)∙(d%e))%e</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>我們現在需要求出2<sup>𝑁</sup>%1000000007是多少，將2<sup>N</sup>分解開並分別求出餘數後用前面的方式求出乘起來後的餘數，然後再算出最後的餘數就是答案，例如2<sup>11</sup>=2<sup>8</sup>∙2<sup>2</sup>∙2<sup>1</sup>  </p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/74951133f40de6bd5ff946f1de27f2f9.js"></script><p><a href="https://codeforces.com/problemset/problem/185/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dwarfs have planted a very interesting plant, which is a triangle directed “upwards”. This plant has an amusing feature. After one year a triangle plant directed “upwards” divides into four triangle plants: three of them will point “upwards” and one will point “downwards”. After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process.&lt;br&gt;
    
    </summary>
    
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>DIY Wooden Ladder</title>
    <link href="http://yoursite.com/DIY-Wooden-Ladder/"/>
    <id>http://yoursite.com/DIY-Wooden-Ladder/</id>
    <published>2019-09-19T08:04:52.000Z</published>
    <updated>2019-09-19T11:59:48.770Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s denote a k-step ladder as the following structure: exactly k+2 wooden planks, of which</p><p>● two planks of length at least k+1 — the base of the ladder;<br>● k planks of length at least 1 — the steps of the ladder;</p><p>Note that neither the base planks, nor the steps planks are required to be equal.</p><p>For example, ladders 1 and 3 are correct 2-step ladders and ladder 2 is a correct 1-step ladder. On the first picture the lengths of planks are [3,3] for the base and [1] for the step. On the second picture lengths are [3,3] for the base and [2] for the step. On the third picture lengths are [3,4] for the base and [2,3] for the steps.<br><a id="more"></a><br><img src="A.PNG" alt="A"><br>You have n planks. The length of the i-th planks is a<sub>i</sub>. You don’t have a saw, so you can’t cut the planks you have. Though you have a hammer and nails, so you can assemble the improvised “ladder” from the planks.</p><p>The question is: what is the maximum number k such that you can choose some subset of the given planks and assemble a k-step ladder using them?</p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer T (1≤T≤100) — the number of queries. The queries are independent.</p><p>Each query consists of two lines. The first line contains a single integer n (2≤n≤10<sup>5</sup>) — the number of planks you have.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (1≤a<sub>i</sub>≤10<sup>5</sup>) — the lengths of the corresponding planks.</p><p>It’s guaranteed that the total number of planks from all queries doesn’t exceed 105.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print T integers — one per query. The i-th integer is the maximum number k, such that you can choose some subset of the planks given in the i-th query and assemble a k-step ladder using them.</p><p>Print 0 if you can’t make even 1-step ladder from the given set of planks.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br><span class="line">1 3 1 3</span><br><span class="line">3</span><br><span class="line">3 3 2</span><br><span class="line">5</span><br><span class="line">2 3 3 4 2</span><br><span class="line">3</span><br><span class="line">1 1 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>第一個輸入為T個木梯<br>第二個輸入為N個木條<br>接著輸入a<sub>1</sub>….a<sub>n</sub>個木條長度</p><p>題目問你他要請你幫他隨便造出一個木梯，但是因為沒有工具，所以木頭不行切割，利用這些木頭可以造出幾個階梯的木梯?(木頭間格距離為1)</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>在輸入的過程中尋找第一長的木條max1與第二長的木條max2，將第二長的木條長度減去1，因為最上面木梯不能建階梯，接著我們把第二長木條長度和剩餘的木條數相比,如果木條數較小,代表他無法把階梯建造完全,會在中途用光木條數,此時木條數就是最多可以造出幾個階梯數,如果木條數大於第二常木條長度,表示他可以完全建造完畢,所以此時第二長的木條長度-1即是可以造出的階梯數.</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/6b5a155e8e6747f7dd817d186437a46c.js"></script><br><a href="http://codeforces.com/problemset/problem/1197/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Let’s denote a k-step ladder as the following structure: exactly k+2 wooden planks, of which&lt;/p&gt;
&lt;p&gt;● two planks of length at least k+1 — the base of the ladder;&lt;br&gt;● k planks of length at least 1 — the steps of the ladder;&lt;/p&gt;
&lt;p&gt;Note that neither the base planks, nor the steps planks are required to be equal.&lt;/p&gt;
&lt;p&gt;For example, ladders 1 and 3 are correct 2-step ladders and ladder 2 is a correct 1-step ladder. On the first picture the lengths of planks are [3,3] for the base and [1] for the step. On the second picture lengths are [3,3] for the base and [2] for the step. On the third picture lengths are [3,4] for the base and [2,3] for the steps.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>Lunar New Year and Number Division</title>
    <link href="http://yoursite.com/Lunar-New-Year-and-Number-Division/"/>
    <id>http://yoursite.com/Lunar-New-Year-and-Number-Division/</id>
    <published>2019-09-19T01:05:00.000Z</published>
    <updated>2019-09-19T05:49:57.918Z</updated>
    
    <content type="html"><![CDATA[<p>Lunar New Year is approaching, and Bob is struggling with his homework – a number division problem.</p><p>There are n positive integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> on Bob’s homework paper, where n is always an even number. Bob is asked to divide those numbers into groups, where each group must contain at least 2 numbers. Suppose the numbers are divided into m groups, and the sum of the numbers in the j-th group is s<sub>j</sub>. Bob’s aim is to minimize the sum of the square of s<sub>j</sub>.<br>Bob is puzzled by this hard problem. Could you please help him solve it?<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains an even integer n (2≤n≤3⋅10<sup>5</sup>), denoting that there are n integers on Bob’s homework paper.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (1≤a<sub>i</sub>≤104), describing the numbers you need to deal with.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>A single line containing one integer, denoting the minimum of the sum of the square of s<sub>j</sub>.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">8 5 2 3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">164</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 1 1 2 2 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">27</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, one of the optimal solutions is to divide those 4 numbers into 2 groups {2,8},{5,3}. Thus the answer is (2+8)<sup>2</sup>+(5+3)<sup>2</sup>=164.</p><p>In the second sample, one of the optimal solutions is to divide those 6 numbers into 3 groups {1,2},{1,2},{1,2}. Thus the answer is (1+2)<sup>2</sup>+(1+2)<sup>2</sup>+(1+2)<sup>2</sup>=27.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>把最大跟最小的數字家再一起然後平方。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>收先就是排序，排序完後就把頭跟尾的數字相加並平方直到N/2。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/9523718e99c9196b294b8f269eb4d696.js"></script><br><a href="https://codeforces.com/problemset/problem/1106/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lunar New Year is approaching, and Bob is struggling with his homework – a number division problem.&lt;/p&gt;
&lt;p&gt;There are n positive integers a&lt;sub&gt;1&lt;/sub&gt;,a&lt;sub&gt;2&lt;/sub&gt;,…,a&lt;sub&gt;n&lt;/sub&gt; on Bob’s homework paper, where n is always an even number. Bob is asked to divide those numbers into groups, where each group must contain at least 2 numbers. Suppose the numbers are divided into m groups, and the sum of the numbers in the j-th group is s&lt;sub&gt;j&lt;/sub&gt;. Bob’s aim is to minimize the sum of the square of s&lt;sub&gt;j&lt;/sub&gt;.&lt;br&gt;Bob is puzzled by this hard problem. Could you please help him solve it?&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>Bakery</title>
    <link href="http://yoursite.com/Bakery/"/>
    <id>http://yoursite.com/Bakery/</id>
    <published>2019-05-05T14:01:07.000Z</published>
    <updated>2019-05-05T14:52:32.142Z</updated>
    
    <content type="html"><![CDATA[<p>Masha wants to open her own bakery and bake muffins in one of the n cities numbered from 1 to n. There are m bidirectional roads, each of whose connects some pair of cities.</p><p>To bake muffins in her bakery, Masha needs to establish flour supply from some storage. There are only k storages, located in different cities numbered a<sub>1</sub>, a<sub>2</sub>, …, a<sub>k</sub>.</p><p>Unforunately the law of the country Masha lives in prohibits opening bakery in any of the cities which has storage located in it. She can open it only in one of another n - k cities, and, of course, flour delivery should be paid — for every kilometer of path between storage and bakery Masha should pay 1 ruble.</p><p>Formally, Masha will pay x roubles, if she will open the bakery in some city b (a<sub>i</sub> ≠ b for every 1 ≤ i ≤ k) and choose a storage in some city s (s = aj for some 1 ≤ j ≤ k) and b and s are connected by some path of roads of summary length x (if there are more than one path, Masha is able to choose which of them should be used).</p><p>Masha is very thrifty and rational. She is interested in a city, where she can open her bakery (and choose one of k storages and one of the paths between city with bakery and city with storage) and pay minimum possible amount of rubles for flour delivery. Please help Masha find this amount.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains three integers n, m and k (1 ≤ n, m ≤ 10<sup>5</sup>, 0 ≤ k ≤ n) — the number of cities in country Masha lives in, the number of roads between them and the number of flour storages respectively.</p><p>Then m lines follow. Each of them contains three integers u, v and l (1 ≤ u, v ≤ n, 1 ≤ l ≤ 10<sup>9</sup>, u ≠ v) meaning that there is a road between cities u and v of length of l kilometers .</p><p>If k &gt; 0, then the last line of the input contains k distinct integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>k</sub> (1 ≤ a<sub>i</sub> ≤ n) — the number of cities having flour storage located in. If k = 0 then this line is not presented in the input.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum possible amount of rubles Masha should pay for flour delivery in the only line.</p><p>If the bakery can not be opened (while satisfying conditions) in any of the n cities, print  - 1 in the only line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 4 2</span><br><span class="line">1 2 5</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">1 4 10</span><br><span class="line">1 5</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 1 1</span><br><span class="line">1 2 3</span><br><span class="line">3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 9</span><br><span class="line">42 42 42 42 42 42 42 42 42</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p><img src="A.PNG" alt="A"></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N個人跟M包食物，再輸入這M包食物的種類。現在規定每個人指定一種食物，每天只能吃一樣種類的食物，沒有每個人都要指定一樣或不一樣的種類，問你這些食物最多能吃幾天？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法搜尋天數d，判斷食物夠不夠吃d天。先統計食物的出現次數，出現次數除以天數就等於能給幾個人吃d天，加總所有食物能供給的人數，若是大於等於N就表示這些食物可以吃d天。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/fcc80ed825820de5d02df437d0351496.js"></script><br><a href="https://codeforces.com/problemset/problem/707/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Masha wants to open her own bakery and bake muffins in one of the n cities numbered from 1 to n. There are m bidirectional roads, each of whose connects some pair of cities.&lt;/p&gt;
&lt;p&gt;To bake muffins in her bakery, Masha needs to establish flour supply from some storage. There are only k storages, located in different cities numbered a&lt;sub&gt;1&lt;/sub&gt;, a&lt;sub&gt;2&lt;/sub&gt;, …, a&lt;sub&gt;k&lt;/sub&gt;.&lt;/p&gt;
&lt;p&gt;Unforunately the law of the country Masha lives in prohibits opening bakery in any of the cities which has storage located in it. She can open it only in one of another n - k cities, and, of course, flour delivery should be paid — for every kilometer of path between storage and bakery Masha should pay 1 ruble.&lt;/p&gt;
&lt;p&gt;Formally, Masha will pay x roubles, if she will open the bakery in some city b (a&lt;sub&gt;i&lt;/sub&gt; ≠ b for every 1 ≤ i ≤ k) and choose a storage in some city s (s = aj for some 1 ≤ j ≤ k) and b and s are connected by some path of roads of summary length x (if there are more than one path, Masha is able to choose which of them should be used).&lt;/p&gt;
&lt;p&gt;Masha is very thrifty and rational. She is interested in a city, where she can open her bakery (and choose one of k storages and one of the paths between city with bakery and city with storage) and pay minimum possible amount of rubles for flour delivery. Please help Masha find this amount.&lt;br&gt;
    
    </summary>
    
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
      <category term="graphs" scheme="http://yoursite.com/tags/graphs/"/>
    
  </entry>
  
  <entry>
    <title>Planning The Expedition</title>
    <link href="http://yoursite.com/Planning-The-Expedition/"/>
    <id>http://yoursite.com/Planning-The-Expedition/</id>
    <published>2019-05-05T14:00:58.000Z</published>
    <updated>2019-05-05T14:50:08.524Z</updated>
    
    <content type="html"><![CDATA[<p>Natasha is planning an expedition to Mars for n people. One of the important tasks is to provide food for each participant.</p><p>The warehouse has m daily food packages. Each package has some food type a<sub>i</sub>.</p><p>Each participant must eat exactly one food package each day. Due to extreme loads, each participant must eat the same food type throughout the expedition. Different participants may eat different (or the same) types of food.</p><p>Formally, for each participant j Natasha should select his food type b<sub>j</sub> and each day j-th participant will eat one food package of type b<sub>j</sub>. The values b<sub>j</sub> for different participants may be different.</p><p>What is the maximum possible number of days the expedition can last, following the requirements above?<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (1≤n≤100, 1≤m≤100) — the number of the expedition participants and the number of the daily food packages available.</p><p>The second line contains sequence of integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>m</sub>(1≤a<sub>i</sub>≤100), where ai is the type of i-th food package.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the single integer — the number of days the expedition can last. If it is not possible to plan the expedition for even one day, print 0.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 10</span><br><span class="line">1 5 2 1 1 1 2 5 7 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">100 1</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 9</span><br><span class="line">42 42 42 42 42 42 42 42 42</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, Natasha can assign type 1 food to the first participant, the same type 1 to the second, type 5 to the third and type 2 to the fourth. In this case, the expedition can last for 2 days, since each participant can get two food packages of his food type (there will be used 4 packages of type 1, two packages of type 2 and two packages of type 5).</p><p>In the second example, there are 100 participants and only 1 food package. In this case, the expedition can’t last even 1 day.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入N個人跟M包食物，再輸入這M包食物的種類。現在規定每個人指定一種食物，每天只能吃一樣種類的食物，沒有每個人都要指定一樣或不一樣的種類，問你這些食物最多能吃幾天？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法搜尋天數d，判斷食物夠不夠吃d天。先統計食物的出現次數，出現次數除以天數就等於能給幾個人吃d天，加總所有食物能供給的人數，若是大於等於N就表示這些食物可以吃d天。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/df2e49ff2e71f26223bf4be6dce43c51.js"></script><br><a href="https://codeforces.com/problemset/problem/1011/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Natasha is planning an expedition to Mars for n people. One of the important tasks is to provide food for each participant.&lt;/p&gt;
&lt;p&gt;The warehouse has m daily food packages. Each package has some food type a&lt;sub&gt;i&lt;/sub&gt;.&lt;/p&gt;
&lt;p&gt;Each participant must eat exactly one food package each day. Due to extreme loads, each participant must eat the same food type throughout the expedition. Different participants may eat different (or the same) types of food.&lt;/p&gt;
&lt;p&gt;Formally, for each participant j Natasha should select his food type b&lt;sub&gt;j&lt;/sub&gt; and each day j-th participant will eat one food package of type b&lt;sub&gt;j&lt;/sub&gt;. The values b&lt;sub&gt;j&lt;/sub&gt; for different participants may be different.&lt;/p&gt;
&lt;p&gt;What is the maximum possible number of days the expedition can last, following the requirements above?&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="binary search" scheme="http://yoursite.com/tags/binary-search/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Alyona and Mex</title>
    <link href="http://yoursite.com/Alyona-and-Mex/"/>
    <id>http://yoursite.com/Alyona-and-Mex/</id>
    <published>2019-05-05T14:00:45.000Z</published>
    <updated>2019-05-05T14:33:56.804Z</updated>
    
    <content type="html"><![CDATA[<p>Alyona’s mother wants to present an array of n non-negative integers to Alyona. The array should be special.</p><p>Alyona is a capricious girl so after she gets the array, she inspects m of its subarrays. Subarray is a set of some subsequent elements of the array. The i-th subarray is described with two integers l<sub>i</sub> and r<sub>i</sub>, and its elements are a[l<sub>i</sub>], a[l<sub>i</sub> + 1], …, a[r<sub>i</sub>].</p><p>Alyona is going to find mex for each of the chosen subarrays. Among these m mexes the girl is going to find the smallest. She wants this minimum mex to be as large as possible.</p><p>You are to find an array a of n elements so that the minimum mex among those chosen by Alyona subarrays is as large as possible.</p><p>The mex of a set S is a minimum possible non-negative integer that is not in S.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and m (1 ≤ n, m ≤ 10<sup>5</sup>).</p><p>The next m lines contain information about the subarrays chosen by Alyona. The i-th of these lines contains two integers l<sub>i</sub> and r<sub>i</sub> (1 ≤ l<sub>i</sub> ≤ r<sub>i</sub> ≤ n), that describe the subarray a[l<sub>i</sub>], a[l<sub>i</sub> + 1], …, a[r<sub>i</sub>].</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>In the first line print single integer — the maximum possible minimum mex.</p><p>In the second line print n integers — the array a. All the elements in a should be between 0 and 10<sup>9</sup>.</p><p>It is guaranteed that there is an optimal answer in which all the elements in a are between 0 and 10<sup>9</sup>.</p><p>If there are multiple solutions, print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 3</span><br><span class="line">2 5</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 0 2 1 0</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 4</span><br><span class="line">2 4</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5 2 0 1</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first example: the mex of the subarray (1, 3) is equal to 3, the mex of the subarray (2, 5) is equal to 3, the mex of the subarray (4, 5) is equal to 2 as well, thus the minumal mex among the subarrays chosen by Alyona is equal to 2.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個陣列，現在可以對每一個元素分別將他變小，最後選出沒在陣列中出現過的正數中最小的，問你這個數值的最大值是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>輸入完後從小排到大，先將答案設為1，然後跑整個陣列，若是當前數字大於等於答案，則表示這個數字能變成答案，那就表示可以將沒出現的數字(答案)加1，跑完陣列後輸出答案即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/64e67f626854df2b130243b23d4b678f.js"></script><br><a href="https://codeforces.com/problemset/problem/739/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Alyona’s mother wants to present an array of n non-negative integers to Alyona. The array should be special.&lt;/p&gt;
&lt;p&gt;Alyona is a capricious girl so after she gets the array, she inspects m of its subarrays. Subarray is a set of some subsequent elements of the array. The i-th subarray is described with two integers l&lt;sub&gt;i&lt;/sub&gt; and r&lt;sub&gt;i&lt;/sub&gt;, and its elements are a[l&lt;sub&gt;i&lt;/sub&gt;], a[l&lt;sub&gt;i&lt;/sub&gt; + 1], …, a[r&lt;sub&gt;i&lt;/sub&gt;].&lt;/p&gt;
&lt;p&gt;Alyona is going to find mex for each of the chosen subarrays. Among these m mexes the girl is going to find the smallest. She wants this minimum mex to be as large as possible.&lt;/p&gt;
&lt;p&gt;You are to find an array a of n elements so that the minimum mex among those chosen by Alyona subarrays is as large as possible.&lt;/p&gt;
&lt;p&gt;The mex of a set S is a minimum possible non-negative integer that is not in S.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
  </entry>
  
  <entry>
    <title>Jzzhu and Sequences</title>
    <link href="http://yoursite.com/Jzzhu-and-Sequences/"/>
    <id>http://yoursite.com/Jzzhu-and-Sequences/</id>
    <published>2019-05-05T14:00:30.000Z</published>
    <updated>2019-05-05T14:53:35.724Z</updated>
    
    <content type="html"><![CDATA[<p>Jzzhu has invented a kind of sequences, they meet the following property:<br><img src="A.PNG" alt="A"><br>You are given x and y, please calculate f<sub>n</sub> modulo 1000000007 (10<sup>9</sup> + 7).<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers x and y (|x|, |y| ≤ 10<sup>9</sup>). The second line contains a single integer n (1 ≤ n ≤ 2·10<sup>9</sup>).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Output a single integer representing f<sub>n</sub> modulo 1000000007 (10<sup>9</sup> + 7).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 -1</span><br><span class="line">2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000006</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first sample, f<sub>2</sub> = f<sub>1</sub> + f<sub>3</sub>, 3 = 2 + f<sub>3</sub>, f<sub>3</sub> = 1.</p><p>In the second sample, f<sub>2</sub> =  - 1;  - 1 modulo (10<sup>9</sup> + 7) equals (10<sup>9</sup> + 6).</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入X跟Y作為一個數列的前兩項，並給你數列的規則，問你第N項對100000007取餘數後的值是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>將規則用X跟Y繼續列舉，發現每6項數值會有一個循環，因此先將前6項計算好，再計算第N項是6項中的第幾項後就可以取餘數了，要注意的是餘數是負數的時候要加回正數。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/050a756b7c15a39d45e2148f120cc259.js"></script><br><a href="https://codeforces.com/problemset/problem/450/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Jzzhu has invented a kind of sequences, they meet the following property:&lt;br&gt;&lt;img src=&quot;A.PNG&quot; alt=&quot;A&quot;&gt;&lt;br&gt;You are given x and y, please calculate f&lt;sub&gt;n&lt;/sub&gt; modulo 1000000007 (10&lt;sup&gt;9&lt;/sup&gt; + 7).&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>Luxurious Houses</title>
    <link href="http://yoursite.com/Luxurious-Houses/"/>
    <id>http://yoursite.com/Luxurious-Houses/</id>
    <published>2019-05-05T14:00:19.000Z</published>
    <updated>2019-05-05T14:33:23.649Z</updated>
    
    <content type="html"><![CDATA[<p>The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row.</p><p>Let’s enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number of floors in it is strictly greater than in all the houses with larger numbers. In other words, a house is luxurious if the number of floors in it is strictly greater than in all the houses, which are located to the right from it. In this task it is assumed that the heights of floors in the houses are the same.</p><p>The new architect is interested in n questions, i-th of them is about the following: “how many floors should be added to the i-th house to make it luxurious?” (for all i from 1 to n, inclusive). You need to help him cope with this task.</p><p>Note that all these questions are independent from each other — the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains a single number n (1 ≤ n ≤ 10<sup>5</sup>) — the number of houses in the capital of Berland.</p><p>The second line contains n space-separated positive integers h<sub>i (1 ≤ h<sub>i</sub> ≤ 10<sup>9</sup>), where hi equals the number of floors in the i-th house. </sub></p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub>, where number a<sub>i</sub> is the number of floors that need to be added to the house number i to make it luxurious. If the house is already luxurious and nothing needs to be added to it, then a<sub>i</sub> should be equal to zero.</p><p>All houses are numbered from left to right, starting from one.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 1 2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 0 2 0</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 1 4</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 0</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你N間房子的高度，從左到右。一間房子若是比他右邊所有的房子都要高的話就能稱為奢華，問你每一間房子各自若要變的奢華的話還要再增高多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>從最右邊開始，記錄到目前為止最高的高度，然後若是自己比最高的高度還矮或是一樣，就加高，不然不用加。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/50eceb9a682e44901b10ccabb961c6a8.js"></script><br><a href="https://codeforces.com/problemset/problem/581/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row.&lt;/p&gt;
&lt;p&gt;Let’s enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number of floors in it is strictly greater than in all the houses with larger numbers. In other words, a house is luxurious if the number of floors in it is strictly greater than in all the houses, which are located to the right from it. In this task it is assumed that the heights of floors in the houses are the same.&lt;/p&gt;
&lt;p&gt;The new architect is interested in n questions, i-th of them is about the following: “how many floors should be added to the i-th house to make it luxurious?” (for all i from 1 to n, inclusive). You need to help him cope with this task.&lt;/p&gt;
&lt;p&gt;Note that all these questions are independent from each other — the answer to the question for house i does not affect other answers (i.e., the floors to the houses are not actually added).&lt;br&gt;
    
    </summary>
    
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
  </entry>
  
  <entry>
    <title>Game 23</title>
    <link href="http://yoursite.com/Game-23/"/>
    <id>http://yoursite.com/Game-23/</id>
    <published>2019-05-05T14:00:09.000Z</published>
    <updated>2019-05-05T14:17:23.301Z</updated>
    
    <content type="html"><![CDATA[<p>Polycarp plays “Game 23”. Initially he has a number n and his goal is to transform it to m. In one move, he can multiply n by 2 or multiply n by 3. He can perform any number of moves.</p><p>Print the number of moves needed to transform n<br>to m. Print -1 if it is impossible to do so.</p><p>It is easy to prove that any way to transform n to m contains the same number of moves (i.e. number of moves doesn’t depend on the way of transformation).<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line of the input contains two integers n and m (1≤n≤m≤5⋅108).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the number of moves to transform n to m, or -1 if there is no solution.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">120 51840</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">42 42</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">48 72</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, the possible sequence of moves is: 120→240→720→1440→4320→12960→25920→51840. The are 7 steps in total.</p><p>In the second example, no moves are needed. Thus, the answer is 0.</p><p>In the third example, it is impossible to transform 48 to 72.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入n、m，你現在每一步可以將n乘以2或3，問你需要幾步可以將n變成m？不能的話輸出-1。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先判斷能不能n整除m，不能就輸出-1，可以的話直接除，然後將商質因數分解，看有幾個2跟3，有2跟3以外的因數就輸出-1，不然個數加起來就是答案。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/55eb8af27dbbcb1e6383f0c1fbe38cf1.js"></script><br><a href="https://chucs.github.io/site/" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Polycarp plays “Game 23”. Initially he has a number n and his goal is to transform it to m. In one move, he can multiply n by 2 or multiply n by 3. He can perform any number of moves.&lt;/p&gt;
&lt;p&gt;Print the number of moves needed to transform n&lt;br&gt;to m. Print -1 if it is impossible to do so.&lt;/p&gt;
&lt;p&gt;It is easy to prove that any way to transform n to m contains the same number of moves (i.e. number of moves doesn’t depend on the way of transformation).&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="新手" scheme="http://yoursite.com/tags/%E6%96%B0%E6%89%8B/"/>
    
      <category term="math" scheme="http://yoursite.com/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>Patrick and Shopping</title>
    <link href="http://yoursite.com/Patrick-and-Shopping/"/>
    <id>http://yoursite.com/Patrick-and-Shopping/</id>
    <published>2019-05-05T13:59:55.000Z</published>
    <updated>2019-05-05T14:14:21.323Z</updated>
    
    <content type="html"><![CDATA[<p>Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d1 meter long road between his house and the first shop and a d2 meter long road between his house and the second shop. Also, there is a road of length d3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house.<br><img src="A.PNG" alt="A"><br>Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn’t mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line of the input contains three integers d<sub>1</sub>, d<sub>2</sub>, d<sub>3</sub> (1 ≤ d<sub>1</sub>, d<sub>2</sub>, d<sub>3</sub> ≤ 10<sup>8</sup>) — the lengths of the paths.</p><blockquote><blockquote><p>● d<sub>1</sub> is the length of the path connecting Patrick’s house and the first shop.<br>● d<sub>2</sub> is the length of the path connecting Patrick’s house and the second shop.<br>● d<sub>3</sub> is the length of the path connecting both shops. </p></blockquote></blockquote><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print the minimum distance that Patrick will have to walk in order to visit both shops and return to his house.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 20 30</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">60</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 5</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>The first sample is shown on the picture in the problem statement. One of the optimal routes is: house -&gt; first -&gt; shop -&gt; second -&gt; shop house.</p><p>In the second sample one of the optimal routes is: house -&gt; first -&gt; shop -&gt; house -&gt; second -&gt; shop -&gt; house.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入家到商店1、家到商店2和商店1到商店2的距離，問你從家開始，去過兩間商店，在回到家中的最短距離是多少？可以重複經過同一條路或同一個點。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>比較繞一圈或不走其中一條路的走法哪個最短即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><script src="https://gist.github.com/Daviswww/6b0632575d93f2313d96708316709aa8.js"></script><p><a href="https://codeforces.com/problemset/problem/599/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Today Patrick waits for a visit from his friend Spongebob. To prepare for the visit, Patrick needs to buy some goodies in two stores located near his house. There is a d1 meter long road between his house and the first shop and a d2 meter long road between his house and the second shop. Also, there is a road of length d3 directly connecting these two shops to each other. Help Patrick calculate the minimum distance that he needs to walk in order to go to both shops and return to his house.&lt;br&gt;&lt;img src=&quot;A.PNG&quot; alt=&quot;A&quot;&gt;&lt;br&gt;Patrick always starts at his house. He should visit both shops moving only along the three existing roads and return back to his house. He doesn’t mind visiting the same shop or passing the same road multiple times. The only goal is to minimize the total distance traveled.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="新手" scheme="http://yoursite.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hulk</title>
    <link href="http://yoursite.com/Hulk/"/>
    <id>http://yoursite.com/Hulk/</id>
    <published>2019-05-05T13:58:53.000Z</published>
    <updated>2019-05-05T14:05:49.549Z</updated>
    
    <content type="html"><![CDATA[<p>Dr. Bruce Banner hates his enemies (like others don’t). As we all know, he can barely talk when he turns into the incredible Hulk. That’s why he asked you to help him to express his feelings.</p><p>Hulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on…</p><p>For example if n = 1, then his feeling is “I hate it” or if n = 2 it’s “I hate that I love it”, and if n = 3 it’s “I hate that I love that I hate it” and so on.</p><p>Please help Dr. Banner.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The only line of the input contains a single integer n (1 ≤ n ≤ 100) — the number of layers of love and hate.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print Dr.Banner’s feeling in one line.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate it</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate that I love it</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I hate that I love that I hate it</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>輸入的數字n，依照n輸出指定層的字串，第一層是hate，第二層是love，第三層是hate，以此類推。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>依照規則輸出。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/0ae912ae1970a1db2ecb903b3427de1c.js"></script><br><a href="https://codeforces.com/problemset/problem/705/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dr. Bruce Banner hates his enemies (like others don’t). As we all know, he can barely talk when he turns into the incredible Hulk. That’s why he asked you to help him to express his feelings.&lt;/p&gt;
&lt;p&gt;Hulk likes the Inception so much, and like that his feelings are complicated. They have n layers. The first layer is hate, second one is love, third one is hate and so on…&lt;/p&gt;
&lt;p&gt;For example if n = 1, then his feeling is “I hate it” or if n = 2 it’s “I hate that I love it”, and if n = 3 it’s “I hate that I love that I hate it” and so on.&lt;/p&gt;
&lt;p&gt;Please help Dr. Banner.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="新手" scheme="http://yoursite.com/tags/%E6%96%B0%E6%89%8B/"/>
    
  </entry>
  
  <entry>
    <title>Metro</title>
    <link href="http://yoursite.com/Metro/"/>
    <id>http://yoursite.com/Metro/</id>
    <published>2019-04-27T10:42:37.000Z</published>
    <updated>2019-04-27T11:53:55.831Z</updated>
    
    <content type="html"><![CDATA[<p>Alice has a birthday today, so she invited home her best friend Bob. Now Bob needs to find a way to commute to the Alice’s home.</p><p>In the city in which Alice and Bob live, the first metro line is being built. This metro line contains n<br>stations numbered from 1 to n. Bob lives near the station with number 1, while Alice lives near the station with number s. The metro line has two tracks. Trains on the first track go from the station 1 to the station n</p><p>and trains on the second track go in reverse direction. Just after the train arrives to the end of its track, it goes to the depot immediately, so it is impossible to travel on it after that.</p><p>Some stations are not yet open at all and some are only partially open — for each station and for each track it is known whether the station is closed for that track or not. If a station is closed for some track, all trains going in this track’s direction pass the station without stopping on it.</p><p>When the Bob got the information on opened and closed stations, he found that traveling by metro may be unexpectedly complicated. Help Bob determine whether he can travel to the Alice’s home by metro or he should search for some other transport.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains two integers n and s (2≤s≤n≤1000) — the number of stations in the metro and the number of the station where Alice’s home is located. Bob lives at station 1.</p><p>Next lines describe information about closed and open stations.</p><p>The second line contains n integers a<sub>1</sub>,a<sub>2</sub>,…,a<sub>n</sub> (a<sub>i</sub>=0 or a<sub>i</sub>=1). If a<sub>i</sub>=1, then the i-th station is open on the first track (that is, in the direction of increasing station numbers). Otherwise the station is closed on the first track.</p><p>The third line contains n integers b<sub>1</sub>,b<sub>2</sub>,…,b<sub>n</sub> (b<sub>i</sub>=0 or b<sub>i</sub>=1). If b<sub>i</sub>=1, then the i-th station is open on the second track (that is, in the direction of decreasing station numbers). Otherwise the station is closed on the second track.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print “YES” (quotes for clarity) if Bob will be able to commute to the Alice’s home by metro and “NO” (quotes for clarity) otherwise.</p><p>You can print each letter in any case (upper or lower).</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 1 1 1 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 4</span><br><span class="line">1 0 0 0 1</span><br><span class="line">0 1 1 1 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2</span><br><span class="line">0 1 1 1 1</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>In the first example, all stations are opened, so Bob can simply travel to the station with number 3.</p><p>In the second example, Bob should travel to the station 5<br>first, switch to the second track and travel to the station 4 then.</p><p>In the third example, Bob simply can’t enter the train going in the direction of Alice’s home.</p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你兩條軌道各自會停靠的站點，一條只能往後，一條只能往前，問你能不能從第1站搭到第S站？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>先看第一條能不能直達第S站，不能的話找第k站，第一條從第k站轉搭第二條到第S站。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/493c55ecd43681443a4363ceda9a1f69.js"></script><br><a href="https://codeforces.com/problemset/problem/1055/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Alice has a birthday today, so she invited home her best friend Bob. Now Bob needs to find a way to commute to the Alice’s home.&lt;/p&gt;
&lt;p&gt;In the city in which Alice and Bob live, the first metro line is being built. This metro line contains n&lt;br&gt;stations numbered from 1 to n. Bob lives near the station with number 1, while Alice lives near the station with number s. The metro line has two tracks. Trains on the first track go from the station 1 to the station n&lt;/p&gt;
&lt;p&gt;and trains on the second track go in reverse direction. Just after the train arrives to the end of its track, it goes to the depot immediately, so it is impossible to travel on it after that.&lt;/p&gt;
&lt;p&gt;Some stations are not yet open at all and some are only partially open — for each station and for each track it is known whether the station is closed for that track or not. If a station is closed for some track, all trains going in this track’s direction pass the station without stopping on it.&lt;/p&gt;
&lt;p&gt;When the Bob got the information on opened and closed stations, he found that traveling by metro may be unexpectedly complicated. Help Bob determine whether he can travel to the Alice’s home by metro or he should search for some other transport.&lt;br&gt;
    
    </summary>
    
    
      <category term="greedy" scheme="http://yoursite.com/tags/greedy/"/>
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
  </entry>
  
  <entry>
    <title>K-Dominant Character</title>
    <link href="http://yoursite.com/K-Dominant-Character/"/>
    <id>http://yoursite.com/K-Dominant-Character/</id>
    <published>2019-04-27T10:42:21.000Z</published>
    <updated>2019-04-27T11:45:41.841Z</updated>
    
    <content type="html"><![CDATA[<p>You are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.</p><p>You have to find minimum k such that there exists at least one k-dominant character.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains string s consisting of lowercase Latin letters (1 ≤ |s| ≤ 100000).</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print one number — the minimum value of k such that there exists at least one k-dominant character.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abacaba</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzzzz</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcde</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個字串，當所有長度為K的子字串都有至少一個共同字元c時，則c在此字串中稱為K-Dominant 。現在c未定，但至少要有一個c存在K-Dominant ，問你K最小可以是多少？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>用二分搜尋法依照規則搜尋子字串長度。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/a14ccf51ce05c20cd0948abbd3425b79.js"></script><br><a href="https://codeforces.com/problemset/problem/888/C" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;You are given a string s consisting of lowercase Latin letters. Character c is called k-dominant iff each substring of s with length at least k contains this character c.&lt;/p&gt;
&lt;p&gt;You have to find minimum k such that there exists at least one k-dominant character.&lt;br&gt;
    
    </summary>
    
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="binary search" scheme="http://yoursite.com/tags/binary-search/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
      <category term="two pointers" scheme="http://yoursite.com/tags/two-pointers/"/>
    
  </entry>
  
  <entry>
    <title>Buggy Sorting</title>
    <link href="http://yoursite.com/Buggy-Sorting/"/>
    <id>http://yoursite.com/Buggy-Sorting/</id>
    <published>2019-04-27T10:42:02.000Z</published>
    <updated>2019-04-27T11:39:28.436Z</updated>
    
    <content type="html"><![CDATA[<p>Little boy Valera studies an algorithm of sorting an integer array. After studying the theory, he went on to the practical tasks. As a result, he wrote a program that sorts an array of n integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> in the non-decreasing order. The pseudocode of the program, written by Valera, is given below. The input of the program gets number n and array a.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loop integer variable i from 1 to n - 1</span><br><span class="line">    loop integer variable j from i to n - 1</span><br><span class="line">        if (aj &gt; aj + 1), then swap the values of elements aj and aj + 1</span><br></pre></td></tr></table></figure><p>But Valera could have made a mistake, because he hasn’t yet fully learned the sorting algorithm. If Valera made a mistake in his program, you need to give a counter-example that makes his program work improperly (that is, the example that makes the program sort the array not in the non-decreasing order). If such example for the given value of n doesn’t exist, print -1.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>You’ve got a single integer n (1 ≤ n ≤ 50) — the size of the sorted array.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print n space-separated integers a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> (1 ≤ a<sub>i</sub> ≤ 100) — the counter-example, for which Valera’s algorithm won’t work correctly. If the counter-example that meets the described conditions is impossible to give, print -1.</p><p>If there are several counter-examples, consisting of n numbers, you are allowed to print any of them.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure></p><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你一個排序法，目標是將陣列排序成非遞減的格式，但是這排序法有錯誤，現在輸入陣列長度，你是否能舉例出一個會排序錯誤的陣列？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>陣列從位置0排到最後，但是卻先移除位置0，因此長度在3以上時，最後一個一定移不到位置0，因此長度在3以上時將最後一個輸出最小的，其他情況輸出-1即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/bb7804303d64985fd6da2a32dcff7dfe.js"></script><br><a href="https://codeforces.com/problemset/problem/246/A" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Little boy Valera studies an algorithm of sorting an integer array. After studying the theory, he went on to the practical tasks. As a result, he wrote a program that sorts an array of n integers a&lt;sub&gt;1&lt;/sub&gt;, a&lt;sub&gt;2&lt;/sub&gt;, …, a&lt;sub&gt;n&lt;/sub&gt; in the non-decreasing order. The pseudocode of the program, written by Valera, is given below. The input of the program gets number n and array a.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;loop integer variable i from 1 to n - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loop integer variable j from i to n - 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (aj &amp;gt; aj + 1), then swap the values of elements aj and aj + 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;But Valera could have made a mistake, because he hasn’t yet fully learned the sorting algorithm. If Valera made a mistake in his program, you need to give a counter-example that makes his program work improperly (that is, the example that makes the program sort the array not in the non-decreasing order). If such example for the given value of n doesn’t exist, print -1.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="簡單" scheme="http://yoursite.com/tags/%E7%B0%A1%E5%96%AE/"/>
    
  </entry>
  
  <entry>
    <title>Semifinals</title>
    <link href="http://yoursite.com/Semifinals/"/>
    <id>http://yoursite.com/Semifinals/</id>
    <published>2019-04-27T10:41:46.000Z</published>
    <updated>2019-04-27T11:33:17.962Z</updated>
    
    <content type="html"><![CDATA[<p>Two semifinals have just been in the running tournament. Each semifinal had n participants. There are n participants advancing to the finals, they are chosen as follows: from each semifinal, we choose k people (0 ≤ 2k ≤ n) who showed the best result in their semifinals and all other places in the finals go to the people who haven’t ranked in the top k in their semifinal but got to the n - 2k of the best among the others.</p><p>The tournament organizers hasn’t yet determined the k value, so the participants want to know who else has any chance to get to the finals and who can go home.<br><a id="more"></a></p><h4 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h4><p>The first line contains a single integer n (1 ≤ n ≤ 10<sup>5</sup>) — the number of participants in each semifinal.</p><p>Each of the next n lines contains two integers a<sub>i</sub> and b<sub>i</sub> (1 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ 10<sup>9</sup>) — the results of the i-th participant (the number of milliseconds he needs to cover the semifinals distance) of the first and second semifinals, correspondingly. All results are distinct. Sequences a<sub>1</sub>, a<sub>2</sub>, …, a<sub>n</sub> and b<sub>1</sub>, b<sub>2</sub>, …, b<sub>n</sub> are sorted in ascending order, i.e. in the order the participants finished in the corresponding semifinal.</p><h4 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h4><p>Print two strings consisting of n characters, each equals either “0” or “1”. The first line should correspond to the participants of the first semifinal, the second line should correspond to the participants of the second semifinal. The i-th character in the j-th line should equal “1” if the i-th participant of the j-th semifinal has any chances to advance to the finals, otherwise it should equal a “0”.</p><h4 id="範例"><a href="#範例" class="headerlink" title="範例:"></a>範例:</h4><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">9840 9920</span><br><span class="line">9860 9980</span><br><span class="line">9930 10020</span><br><span class="line">10040 10090</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1110</span><br><span class="line">1100</span><br></pre></td></tr></table></figure></p><p>input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">9900 9850</span><br><span class="line">9940 9930</span><br><span class="line">10000 10020</span><br><span class="line">10060 10110</span><br></pre></td></tr></table></figure></p><p>output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1100</span><br><span class="line">1100</span><br></pre></td></tr></table></figure></p><h4 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h4><p>Consider the first sample. Each semifinal has 4 participants. The results of the first semifinal are 9840, 9860, 9930, 10040. The results of the second semifinal are 9920, 9980, 10020, 10090.</p><blockquote><blockquote><p>● If k = 0, the finalists are determined by the time only, so players 9840, 9860, 9920 and 9930 advance to the finals.<br>● If k = 1, the winners from both semifinals move to the finals (with results 9840 and 9920), and the other places are determined by the time (these places go to the sportsmen who run the distance in 9860 and 9930 milliseconds).<br>●If k = 2, then first and second places advance from each seminfial, these are participants with results 9840, 9860, 9920 and 9980 milliseconds. </p></blockquote></blockquote><h4 id="題意"><a href="#題意" class="headerlink" title="題意:"></a>題意:</h4><p>給你兩次比賽的成績，兩邊可以各錄取K名進入決賽(0≤2K≤N)，剩下的名次用成績決定(不會有一樣的成績)，現在K未定，問你那些人是有機會進入決賽的？</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h4><p>兩邊的前N/2名都有可能，剩下的名次則是到總成績的第N名有可能，將兩種綜合即可。</p><h4 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼:"></a>程式碼:</h4><p><script src="https://gist.github.com/Daviswww/aa4d5499ee399a951c3844b6cd5db293.js"></script><br><a href="https://codeforces.com/problemset/problem/378/B" target="_blank" rel="noopener">題目網址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Two semifinals have just been in the running tournament. Each semifinal had n participants. There are n participants advancing to the finals, they are chosen as follows: from each semifinal, we choose k people (0 ≤ 2k ≤ n) who showed the best result in their semifinals and all other places in the finals go to the people who haven’t ranked in the top k in their semifinal but got to the n - 2k of the best among the others.&lt;/p&gt;
&lt;p&gt;The tournament organizers hasn’t yet determined the k value, so the participants want to know who else has any chance to get to the finals and who can go home.&lt;br&gt;
    
    </summary>
    
    
      <category term="sortings" scheme="http://yoursite.com/tags/sortings/"/>
    
      <category term="implementation" scheme="http://yoursite.com/tags/implementation/"/>
    
      <category term="普通" scheme="http://yoursite.com/tags/%E6%99%AE%E9%80%9A/"/>
    
  </entry>
  
</feed>
